
CALC_project.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00005e9e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000011e  00800060  00005e9e  00005f32  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000004  0080017e  0080017e  00006050  2**0
                  ALLOC
  3 .debug_aranges 000003d8  00000000  00000000  00006050  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 000005ec  00000000  00000000  00006428  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000044bb  00000000  00000000  00006a14  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00001d4e  00000000  00000000  0000aecf  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000032ac  00000000  00000000  0000cc1d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000004f0  00000000  00000000  0000fecc  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000a6a  00000000  00000000  000103bc  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00002420  00000000  00000000  00010e26  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_macinfo 00008788  00000000  00000000  00013246  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000208  00000000  00000000  0001b9ce  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	ee e9       	ldi	r30, 0x9E	; 158
      68:	fe e5       	ldi	r31, 0x5E	; 94
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	ae 37       	cpi	r26, 0x7E	; 126
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
      76:	11 e0       	ldi	r17, 0x01	; 1
      78:	ae e7       	ldi	r26, 0x7E	; 126
      7a:	b1 e0       	ldi	r27, 0x01	; 1
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	a2 38       	cpi	r26, 0x82	; 130
      82:	b1 07       	cpc	r27, r17
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 96 2c 	call	0x592c	; 0x592c <main>
      8a:	0c 94 4d 2f 	jmp	0x5e9a	; 0x5e9a <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <__ashldi3>:
      92:	ef 92       	push	r14
      94:	ff 92       	push	r15
      96:	0f 93       	push	r16
      98:	df 93       	push	r29
      9a:	cf 93       	push	r28
      9c:	cd b7       	in	r28, 0x3d	; 61
      9e:	de b7       	in	r29, 0x3e	; 62
      a0:	60 97       	sbiw	r28, 0x10	; 16
      a2:	0f b6       	in	r0, 0x3f	; 63
      a4:	f8 94       	cli
      a6:	de bf       	out	0x3e, r29	; 62
      a8:	0f be       	out	0x3f, r0	; 63
      aa:	cd bf       	out	0x3d, r28	; 61
      ac:	a8 2f       	mov	r26, r24
      ae:	00 23       	and	r16, r16
      b0:	09 f4       	brne	.+2      	; 0xb4 <__ashldi3+0x22>
      b2:	61 c0       	rjmp	.+194    	; 0x176 <__ashldi3+0xe4>
      b4:	7e 01       	movw	r14, r28
      b6:	08 94       	sec
      b8:	e1 1c       	adc	r14, r1
      ba:	f1 1c       	adc	r15, r1
      bc:	88 e0       	ldi	r24, 0x08	; 8
      be:	f7 01       	movw	r30, r14
      c0:	11 92       	st	Z+, r1
      c2:	8a 95       	dec	r24
      c4:	e9 f7       	brne	.-6      	; 0xc0 <__ashldi3+0x2e>
      c6:	29 83       	std	Y+1, r18	; 0x01
      c8:	3a 83       	std	Y+2, r19	; 0x02
      ca:	4b 83       	std	Y+3, r20	; 0x03
      cc:	5c 83       	std	Y+4, r21	; 0x04
      ce:	6d 83       	std	Y+5, r22	; 0x05
      d0:	7e 83       	std	Y+6, r23	; 0x06
      d2:	af 83       	std	Y+7, r26	; 0x07
      d4:	98 87       	std	Y+8, r25	; 0x08
      d6:	80 e2       	ldi	r24, 0x20	; 32
      d8:	80 1b       	sub	r24, r16
      da:	e8 2f       	mov	r30, r24
      dc:	ff 27       	eor	r31, r31
      de:	e7 fd       	sbrc	r30, 7
      e0:	f0 95       	com	r31
      e2:	49 81       	ldd	r20, Y+1	; 0x01
      e4:	5a 81       	ldd	r21, Y+2	; 0x02
      e6:	6b 81       	ldd	r22, Y+3	; 0x03
      e8:	7c 81       	ldd	r23, Y+4	; 0x04
      ea:	18 16       	cp	r1, r24
      ec:	84 f0       	brlt	.+32     	; 0x10e <__ashldi3+0x7c>
      ee:	19 86       	std	Y+9, r1	; 0x09
      f0:	1a 86       	std	Y+10, r1	; 0x0a
      f2:	1b 86       	std	Y+11, r1	; 0x0b
      f4:	1c 86       	std	Y+12, r1	; 0x0c
      f6:	88 27       	eor	r24, r24
      f8:	99 27       	eor	r25, r25
      fa:	8e 1b       	sub	r24, r30
      fc:	9f 0b       	sbc	r25, r31
      fe:	04 c0       	rjmp	.+8      	; 0x108 <__ashldi3+0x76>
     100:	44 0f       	add	r20, r20
     102:	55 1f       	adc	r21, r21
     104:	66 1f       	adc	r22, r22
     106:	77 1f       	adc	r23, r23
     108:	8a 95       	dec	r24
     10a:	d2 f7       	brpl	.-12     	; 0x100 <__ashldi3+0x6e>
     10c:	28 c0       	rjmp	.+80     	; 0x15e <__ashldi3+0xcc>
     10e:	20 2f       	mov	r18, r16
     110:	33 27       	eor	r19, r19
     112:	27 fd       	sbrc	r18, 7
     114:	30 95       	com	r19
     116:	db 01       	movw	r26, r22
     118:	ca 01       	movw	r24, r20
     11a:	02 2e       	mov	r0, r18
     11c:	04 c0       	rjmp	.+8      	; 0x126 <__ashldi3+0x94>
     11e:	88 0f       	add	r24, r24
     120:	99 1f       	adc	r25, r25
     122:	aa 1f       	adc	r26, r26
     124:	bb 1f       	adc	r27, r27
     126:	0a 94       	dec	r0
     128:	d2 f7       	brpl	.-12     	; 0x11e <__ashldi3+0x8c>
     12a:	89 87       	std	Y+9, r24	; 0x09
     12c:	9a 87       	std	Y+10, r25	; 0x0a
     12e:	ab 87       	std	Y+11, r26	; 0x0b
     130:	bc 87       	std	Y+12, r27	; 0x0c
     132:	04 c0       	rjmp	.+8      	; 0x13c <__ashldi3+0xaa>
     134:	76 95       	lsr	r23
     136:	67 95       	ror	r22
     138:	57 95       	ror	r21
     13a:	47 95       	ror	r20
     13c:	ea 95       	dec	r30
     13e:	d2 f7       	brpl	.-12     	; 0x134 <__ashldi3+0xa2>
     140:	8d 81       	ldd	r24, Y+5	; 0x05
     142:	9e 81       	ldd	r25, Y+6	; 0x06
     144:	af 81       	ldd	r26, Y+7	; 0x07
     146:	b8 85       	ldd	r27, Y+8	; 0x08
     148:	04 c0       	rjmp	.+8      	; 0x152 <__ashldi3+0xc0>
     14a:	88 0f       	add	r24, r24
     14c:	99 1f       	adc	r25, r25
     14e:	aa 1f       	adc	r26, r26
     150:	bb 1f       	adc	r27, r27
     152:	2a 95       	dec	r18
     154:	d2 f7       	brpl	.-12     	; 0x14a <__ashldi3+0xb8>
     156:	48 2b       	or	r20, r24
     158:	59 2b       	or	r21, r25
     15a:	6a 2b       	or	r22, r26
     15c:	7b 2b       	or	r23, r27
     15e:	4d 87       	std	Y+13, r20	; 0x0d
     160:	5e 87       	std	Y+14, r21	; 0x0e
     162:	6f 87       	std	Y+15, r22	; 0x0f
     164:	78 8b       	std	Y+16, r23	; 0x10
     166:	29 85       	ldd	r18, Y+9	; 0x09
     168:	3a 85       	ldd	r19, Y+10	; 0x0a
     16a:	4b 85       	ldd	r20, Y+11	; 0x0b
     16c:	5c 85       	ldd	r21, Y+12	; 0x0c
     16e:	6d 85       	ldd	r22, Y+13	; 0x0d
     170:	7e 85       	ldd	r23, Y+14	; 0x0e
     172:	af 85       	ldd	r26, Y+15	; 0x0f
     174:	98 89       	ldd	r25, Y+16	; 0x10
     176:	8a 2f       	mov	r24, r26
     178:	60 96       	adiw	r28, 0x10	; 16
     17a:	0f b6       	in	r0, 0x3f	; 63
     17c:	f8 94       	cli
     17e:	de bf       	out	0x3e, r29	; 62
     180:	0f be       	out	0x3f, r0	; 63
     182:	cd bf       	out	0x3d, r28	; 61
     184:	cf 91       	pop	r28
     186:	df 91       	pop	r29
     188:	0f 91       	pop	r16
     18a:	ff 90       	pop	r15
     18c:	ef 90       	pop	r14
     18e:	08 95       	ret

00000190 <__fixunssfsi>:
     190:	ef 92       	push	r14
     192:	ff 92       	push	r15
     194:	0f 93       	push	r16
     196:	1f 93       	push	r17
     198:	7b 01       	movw	r14, r22
     19a:	8c 01       	movw	r16, r24
     19c:	20 e0       	ldi	r18, 0x00	; 0
     19e:	30 e0       	ldi	r19, 0x00	; 0
     1a0:	40 e0       	ldi	r20, 0x00	; 0
     1a2:	5f e4       	ldi	r21, 0x4F	; 79
     1a4:	0e 94 01 12 	call	0x2402	; 0x2402 <__gesf2>
     1a8:	88 23       	and	r24, r24
     1aa:	8c f0       	brlt	.+34     	; 0x1ce <__fixunssfsi+0x3e>
     1ac:	c8 01       	movw	r24, r16
     1ae:	b7 01       	movw	r22, r14
     1b0:	20 e0       	ldi	r18, 0x00	; 0
     1b2:	30 e0       	ldi	r19, 0x00	; 0
     1b4:	40 e0       	ldi	r20, 0x00	; 0
     1b6:	5f e4       	ldi	r21, 0x4F	; 79
     1b8:	0e 94 cd 0f 	call	0x1f9a	; 0x1f9a <__subsf3>
     1bc:	0e 94 61 12 	call	0x24c2	; 0x24c2 <__fixsfsi>
     1c0:	9b 01       	movw	r18, r22
     1c2:	ac 01       	movw	r20, r24
     1c4:	20 50       	subi	r18, 0x00	; 0
     1c6:	30 40       	sbci	r19, 0x00	; 0
     1c8:	40 40       	sbci	r20, 0x00	; 0
     1ca:	50 48       	sbci	r21, 0x80	; 128
     1cc:	06 c0       	rjmp	.+12     	; 0x1da <__fixunssfsi+0x4a>
     1ce:	c8 01       	movw	r24, r16
     1d0:	b7 01       	movw	r22, r14
     1d2:	0e 94 61 12 	call	0x24c2	; 0x24c2 <__fixsfsi>
     1d6:	9b 01       	movw	r18, r22
     1d8:	ac 01       	movw	r20, r24
     1da:	b9 01       	movw	r22, r18
     1dc:	ca 01       	movw	r24, r20
     1de:	1f 91       	pop	r17
     1e0:	0f 91       	pop	r16
     1e2:	ff 90       	pop	r15
     1e4:	ef 90       	pop	r14
     1e6:	08 95       	ret

000001e8 <__fixunssfdi>:
     1e8:	a0 e0       	ldi	r26, 0x00	; 0
     1ea:	b0 e0       	ldi	r27, 0x00	; 0
     1ec:	ea ef       	ldi	r30, 0xFA	; 250
     1ee:	f0 e0       	ldi	r31, 0x00	; 0
     1f0:	0c 94 11 2e 	jmp	0x5c22	; 0x5c22 <__prologue_saves__>
     1f4:	7b 01       	movw	r14, r22
     1f6:	8c 01       	movw	r16, r24
     1f8:	20 e0       	ldi	r18, 0x00	; 0
     1fa:	30 e0       	ldi	r19, 0x00	; 0
     1fc:	40 e8       	ldi	r20, 0x80	; 128
     1fe:	5f e3       	ldi	r21, 0x3F	; 63
     200:	0e 94 31 12 	call	0x2462	; 0x2462 <__ltsf2>
     204:	88 23       	and	r24, r24
     206:	4c f4       	brge	.+18     	; 0x21a <__fixunssfdi+0x32>
     208:	aa 24       	eor	r10, r10
     20a:	bb 24       	eor	r11, r11
     20c:	cc 24       	eor	r12, r12
     20e:	dd 24       	eor	r13, r13
     210:	ee 24       	eor	r14, r14
     212:	ff 24       	eor	r15, r15
     214:	00 e0       	ldi	r16, 0x00	; 0
     216:	10 e0       	ldi	r17, 0x00	; 0
     218:	86 c0       	rjmp	.+268    	; 0x326 <__fixunssfdi+0x13e>
     21a:	c8 01       	movw	r24, r16
     21c:	b7 01       	movw	r22, r14
     21e:	20 e0       	ldi	r18, 0x00	; 0
     220:	30 e0       	ldi	r19, 0x00	; 0
     222:	40 e8       	ldi	r20, 0x80	; 128
     224:	5f e4       	ldi	r21, 0x4F	; 79
     226:	0e 94 31 12 	call	0x2462	; 0x2462 <__ltsf2>
     22a:	88 23       	and	r24, r24
     22c:	54 f4       	brge	.+20     	; 0x242 <__fixunssfdi+0x5a>
     22e:	c8 01       	movw	r24, r16
     230:	b7 01       	movw	r22, r14
     232:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
     236:	5b 01       	movw	r10, r22
     238:	6c 01       	movw	r12, r24
     23a:	ee 24       	eor	r14, r14
     23c:	ff 24       	eor	r15, r15
     23e:	87 01       	movw	r16, r14
     240:	72 c0       	rjmp	.+228    	; 0x326 <__fixunssfdi+0x13e>
     242:	c8 01       	movw	r24, r16
     244:	b7 01       	movw	r22, r14
     246:	20 e0       	ldi	r18, 0x00	; 0
     248:	30 e0       	ldi	r19, 0x00	; 0
     24a:	40 e8       	ldi	r20, 0x80	; 128
     24c:	5f e5       	ldi	r21, 0x5F	; 95
     24e:	0e 94 31 12 	call	0x2462	; 0x2462 <__ltsf2>
     252:	87 fd       	sbrc	r24, 7
     254:	0f c0       	rjmp	.+30     	; 0x274 <__fixunssfdi+0x8c>
     256:	aa 24       	eor	r10, r10
     258:	aa 94       	dec	r10
     25a:	bb 24       	eor	r11, r11
     25c:	ba 94       	dec	r11
     25e:	cc 24       	eor	r12, r12
     260:	ca 94       	dec	r12
     262:	dd 24       	eor	r13, r13
     264:	da 94       	dec	r13
     266:	ee 24       	eor	r14, r14
     268:	ea 94       	dec	r14
     26a:	ff 24       	eor	r15, r15
     26c:	fa 94       	dec	r15
     26e:	0f ef       	ldi	r16, 0xFF	; 255
     270:	1f ef       	ldi	r17, 0xFF	; 255
     272:	59 c0       	rjmp	.+178    	; 0x326 <__fixunssfdi+0x13e>
     274:	c8 01       	movw	r24, r16
     276:	b7 01       	movw	r22, r14
     278:	20 e0       	ldi	r18, 0x00	; 0
     27a:	30 e0       	ldi	r19, 0x00	; 0
     27c:	40 e8       	ldi	r20, 0x80	; 128
     27e:	5f e2       	ldi	r21, 0x2F	; 47
     280:	0e 94 2b 10 	call	0x2056	; 0x2056 <__mulsf3>
     284:	7b 01       	movw	r14, r22
     286:	8c 01       	movw	r16, r24
     288:	22 24       	eor	r2, r2
     28a:	33 24       	eor	r3, r3
     28c:	21 01       	movw	r4, r2
     28e:	90 e1       	ldi	r25, 0x10	; 16
     290:	a9 2e       	mov	r10, r25
     292:	b1 2c       	mov	r11, r1
     294:	c1 2c       	mov	r12, r1
     296:	d1 2c       	mov	r13, r1
     298:	c0 e0       	ldi	r28, 0x00	; 0
     29a:	d0 e0       	ldi	r29, 0x00	; 0
     29c:	61 e0       	ldi	r22, 0x01	; 1
     29e:	70 e0       	ldi	r23, 0x00	; 0
     2a0:	80 e0       	ldi	r24, 0x00	; 0
     2a2:	90 e0       	ldi	r25, 0x00	; 0
     2a4:	0a 2c       	mov	r0, r10
     2a6:	04 c0       	rjmp	.+8      	; 0x2b0 <__fixunssfdi+0xc8>
     2a8:	66 0f       	add	r22, r22
     2aa:	77 1f       	adc	r23, r23
     2ac:	88 1f       	adc	r24, r24
     2ae:	99 1f       	adc	r25, r25
     2b0:	0a 94       	dec	r0
     2b2:	d2 f7       	brpl	.-12     	; 0x2a8 <__fixunssfdi+0xc0>
     2b4:	0e 94 b5 12 	call	0x256a	; 0x256a <__floatunsisf>
     2b8:	3b 01       	movw	r6, r22
     2ba:	4c 01       	movw	r8, r24
     2bc:	c8 01       	movw	r24, r16
     2be:	b7 01       	movw	r22, r14
     2c0:	a4 01       	movw	r20, r8
     2c2:	93 01       	movw	r18, r6
     2c4:	0e 94 01 12 	call	0x2402	; 0x2402 <__gesf2>
     2c8:	88 23       	and	r24, r24
     2ca:	64 f0       	brlt	.+24     	; 0x2e4 <__fixunssfdi+0xfc>
     2cc:	2a 28       	or	r2, r10
     2ce:	3b 28       	or	r3, r11
     2d0:	4c 28       	or	r4, r12
     2d2:	5d 28       	or	r5, r13
     2d4:	c8 01       	movw	r24, r16
     2d6:	b7 01       	movw	r22, r14
     2d8:	a4 01       	movw	r20, r8
     2da:	93 01       	movw	r18, r6
     2dc:	0e 94 25 11 	call	0x224a	; 0x224a <__divsf3>
     2e0:	7b 01       	movw	r14, r22
     2e2:	8c 01       	movw	r16, r24
     2e4:	d6 94       	lsr	r13
     2e6:	c7 94       	ror	r12
     2e8:	b7 94       	ror	r11
     2ea:	a7 94       	ror	r10
     2ec:	21 96       	adiw	r28, 0x01	; 1
     2ee:	c5 30       	cpi	r28, 0x05	; 5
     2f0:	d1 05       	cpc	r29, r1
     2f2:	a1 f6       	brne	.-88     	; 0x29c <__fixunssfdi+0xb4>
     2f4:	c8 01       	movw	r24, r16
     2f6:	b7 01       	movw	r22, r14
     2f8:	20 e0       	ldi	r18, 0x00	; 0
     2fa:	30 e0       	ldi	r19, 0x00	; 0
     2fc:	40 e8       	ldi	r20, 0x80	; 128
     2fe:	5f e4       	ldi	r21, 0x4F	; 79
     300:	0e 94 2b 10 	call	0x2056	; 0x2056 <__mulsf3>
     304:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
     308:	5b 01       	movw	r10, r22
     30a:	6c 01       	movw	r12, r24
     30c:	9b 01       	movw	r18, r22
     30e:	a6 01       	movw	r20, r12
     310:	60 e0       	ldi	r22, 0x00	; 0
     312:	70 e0       	ldi	r23, 0x00	; 0
     314:	80 e0       	ldi	r24, 0x00	; 0
     316:	90 e0       	ldi	r25, 0x00	; 0
     318:	02 2d       	mov	r16, r2
     31a:	0e 94 49 00 	call	0x92	; 0x92 <__ashldi3>
     31e:	59 01       	movw	r10, r18
     320:	6a 01       	movw	r12, r20
     322:	7b 01       	movw	r14, r22
     324:	8c 01       	movw	r16, r24
     326:	95 01       	movw	r18, r10
     328:	a6 01       	movw	r20, r12
     32a:	b7 01       	movw	r22, r14
     32c:	c8 01       	movw	r24, r16
     32e:	cd b7       	in	r28, 0x3d	; 61
     330:	de b7       	in	r29, 0x3e	; 62
     332:	e2 e1       	ldi	r30, 0x12	; 18
     334:	0c 94 2d 2e 	jmp	0x5c5a	; 0x5c5a <__epilogue_restores__>

00000338 <__udivdi3>:
     338:	ae e5       	ldi	r26, 0x5E	; 94
     33a:	b0 e0       	ldi	r27, 0x00	; 0
     33c:	e2 ea       	ldi	r30, 0xA2	; 162
     33e:	f1 e0       	ldi	r31, 0x01	; 1
     340:	0c 94 11 2e 	jmp	0x5c22	; 0x5c22 <__prologue_saves__>
     344:	a8 e0       	ldi	r26, 0x08	; 8
     346:	4e 01       	movw	r8, r28
     348:	08 94       	sec
     34a:	81 1c       	adc	r8, r1
     34c:	91 1c       	adc	r9, r1
     34e:	f4 01       	movw	r30, r8
     350:	6a 2e       	mov	r6, r26
     352:	11 92       	st	Z+, r1
     354:	6a 94       	dec	r6
     356:	e9 f7       	brne	.-6      	; 0x352 <__udivdi3+0x1a>
     358:	29 83       	std	Y+1, r18	; 0x01
     35a:	3a 83       	std	Y+2, r19	; 0x02
     35c:	4b 83       	std	Y+3, r20	; 0x03
     35e:	5c 83       	std	Y+4, r21	; 0x04
     360:	6d 83       	std	Y+5, r22	; 0x05
     362:	7e 83       	std	Y+6, r23	; 0x06
     364:	8f 83       	std	Y+7, r24	; 0x07
     366:	98 87       	std	Y+8, r25	; 0x08
     368:	ce 01       	movw	r24, r28
     36a:	09 96       	adiw	r24, 0x09	; 9
     36c:	fc 01       	movw	r30, r24
     36e:	11 92       	st	Z+, r1
     370:	aa 95       	dec	r26
     372:	e9 f7       	brne	.-6      	; 0x36e <__udivdi3+0x36>
     374:	a9 86       	std	Y+9, r10	; 0x09
     376:	ba 86       	std	Y+10, r11	; 0x0a
     378:	cb 86       	std	Y+11, r12	; 0x0b
     37a:	dc 86       	std	Y+12, r13	; 0x0c
     37c:	ed 86       	std	Y+13, r14	; 0x0d
     37e:	fe 86       	std	Y+14, r15	; 0x0e
     380:	0f 87       	std	Y+15, r16	; 0x0f
     382:	18 8b       	std	Y+16, r17	; 0x10
     384:	29 84       	ldd	r2, Y+9	; 0x09
     386:	3a 84       	ldd	r3, Y+10	; 0x0a
     388:	4b 84       	ldd	r4, Y+11	; 0x0b
     38a:	5c 84       	ldd	r5, Y+12	; 0x0c
     38c:	ed 84       	ldd	r14, Y+13	; 0x0d
     38e:	fe 84       	ldd	r15, Y+14	; 0x0e
     390:	0f 85       	ldd	r16, Y+15	; 0x0f
     392:	18 89       	ldd	r17, Y+16	; 0x10
     394:	69 80       	ldd	r6, Y+1	; 0x01
     396:	7a 80       	ldd	r7, Y+2	; 0x02
     398:	8b 80       	ldd	r8, Y+3	; 0x03
     39a:	9c 80       	ldd	r9, Y+4	; 0x04
     39c:	6d a6       	std	Y+45, r6	; 0x2d
     39e:	7e a6       	std	Y+46, r7	; 0x2e
     3a0:	8f a6       	std	Y+47, r8	; 0x2f
     3a2:	98 aa       	std	Y+48, r9	; 0x30
     3a4:	6d 80       	ldd	r6, Y+5	; 0x05
     3a6:	7e 80       	ldd	r7, Y+6	; 0x06
     3a8:	8f 80       	ldd	r8, Y+7	; 0x07
     3aa:	98 84       	ldd	r9, Y+8	; 0x08
     3ac:	e1 14       	cp	r14, r1
     3ae:	f1 04       	cpc	r15, r1
     3b0:	01 05       	cpc	r16, r1
     3b2:	11 05       	cpc	r17, r1
     3b4:	09 f0       	breq	.+2      	; 0x3b8 <__udivdi3+0x80>
     3b6:	b3 c3       	rjmp	.+1894   	; 0xb1e <__stack+0x2bf>
     3b8:	62 14       	cp	r6, r2
     3ba:	73 04       	cpc	r7, r3
     3bc:	84 04       	cpc	r8, r4
     3be:	95 04       	cpc	r9, r5
     3c0:	08 f0       	brcs	.+2      	; 0x3c4 <__udivdi3+0x8c>
     3c2:	3d c1       	rjmp	.+634    	; 0x63e <__udivdi3+0x306>
     3c4:	00 e0       	ldi	r16, 0x00	; 0
     3c6:	20 16       	cp	r2, r16
     3c8:	00 e0       	ldi	r16, 0x00	; 0
     3ca:	30 06       	cpc	r3, r16
     3cc:	01 e0       	ldi	r16, 0x01	; 1
     3ce:	40 06       	cpc	r4, r16
     3d0:	00 e0       	ldi	r16, 0x00	; 0
     3d2:	50 06       	cpc	r5, r16
     3d4:	88 f4       	brcc	.+34     	; 0x3f8 <__udivdi3+0xc0>
     3d6:	1f ef       	ldi	r17, 0xFF	; 255
     3d8:	21 16       	cp	r2, r17
     3da:	31 04       	cpc	r3, r1
     3dc:	41 04       	cpc	r4, r1
     3de:	51 04       	cpc	r5, r1
     3e0:	39 f0       	breq	.+14     	; 0x3f0 <__udivdi3+0xb8>
     3e2:	30 f0       	brcs	.+12     	; 0x3f0 <__udivdi3+0xb8>
     3e4:	48 e0       	ldi	r20, 0x08	; 8
     3e6:	e4 2e       	mov	r14, r20
     3e8:	f1 2c       	mov	r15, r1
     3ea:	01 2d       	mov	r16, r1
     3ec:	11 2d       	mov	r17, r1
     3ee:	18 c0       	rjmp	.+48     	; 0x420 <__udivdi3+0xe8>
     3f0:	ee 24       	eor	r14, r14
     3f2:	ff 24       	eor	r15, r15
     3f4:	87 01       	movw	r16, r14
     3f6:	14 c0       	rjmp	.+40     	; 0x420 <__udivdi3+0xe8>
     3f8:	20 e0       	ldi	r18, 0x00	; 0
     3fa:	22 16       	cp	r2, r18
     3fc:	20 e0       	ldi	r18, 0x00	; 0
     3fe:	32 06       	cpc	r3, r18
     400:	20 e0       	ldi	r18, 0x00	; 0
     402:	42 06       	cpc	r4, r18
     404:	21 e0       	ldi	r18, 0x01	; 1
     406:	52 06       	cpc	r5, r18
     408:	30 f0       	brcs	.+12     	; 0x416 <__udivdi3+0xde>
     40a:	38 e1       	ldi	r19, 0x18	; 24
     40c:	e3 2e       	mov	r14, r19
     40e:	f1 2c       	mov	r15, r1
     410:	01 2d       	mov	r16, r1
     412:	11 2d       	mov	r17, r1
     414:	05 c0       	rjmp	.+10     	; 0x420 <__udivdi3+0xe8>
     416:	20 e1       	ldi	r18, 0x10	; 16
     418:	e2 2e       	mov	r14, r18
     41a:	f1 2c       	mov	r15, r1
     41c:	01 2d       	mov	r16, r1
     41e:	11 2d       	mov	r17, r1
     420:	d2 01       	movw	r26, r4
     422:	c1 01       	movw	r24, r2
     424:	0e 2c       	mov	r0, r14
     426:	04 c0       	rjmp	.+8      	; 0x430 <__udivdi3+0xf8>
     428:	b6 95       	lsr	r27
     42a:	a7 95       	ror	r26
     42c:	97 95       	ror	r25
     42e:	87 95       	ror	r24
     430:	0a 94       	dec	r0
     432:	d2 f7       	brpl	.-12     	; 0x428 <__udivdi3+0xf0>
     434:	88 59       	subi	r24, 0x98	; 152
     436:	9f 4f       	sbci	r25, 0xFF	; 255
     438:	dc 01       	movw	r26, r24
     43a:	2c 91       	ld	r18, X
     43c:	80 e2       	ldi	r24, 0x20	; 32
     43e:	90 e0       	ldi	r25, 0x00	; 0
     440:	a0 e0       	ldi	r26, 0x00	; 0
     442:	b0 e0       	ldi	r27, 0x00	; 0
     444:	8e 19       	sub	r24, r14
     446:	9f 09       	sbc	r25, r15
     448:	a0 0b       	sbc	r26, r16
     44a:	b1 0b       	sbc	r27, r17
     44c:	7c 01       	movw	r14, r24
     44e:	8d 01       	movw	r16, r26
     450:	e2 1a       	sub	r14, r18
     452:	f1 08       	sbc	r15, r1
     454:	01 09       	sbc	r16, r1
     456:	11 09       	sbc	r17, r1
     458:	e1 14       	cp	r14, r1
     45a:	f1 04       	cpc	r15, r1
     45c:	01 05       	cpc	r16, r1
     45e:	11 05       	cpc	r17, r1
     460:	a1 f1       	breq	.+104    	; 0x4ca <__udivdi3+0x192>
     462:	0e 2c       	mov	r0, r14
     464:	04 c0       	rjmp	.+8      	; 0x46e <__udivdi3+0x136>
     466:	22 0c       	add	r2, r2
     468:	33 1c       	adc	r3, r3
     46a:	44 1c       	adc	r4, r4
     46c:	55 1c       	adc	r5, r5
     46e:	0a 94       	dec	r0
     470:	d2 f7       	brpl	.-12     	; 0x466 <__udivdi3+0x12e>
     472:	a4 01       	movw	r20, r8
     474:	93 01       	movw	r18, r6
     476:	0e 2c       	mov	r0, r14
     478:	04 c0       	rjmp	.+8      	; 0x482 <__udivdi3+0x14a>
     47a:	22 0f       	add	r18, r18
     47c:	33 1f       	adc	r19, r19
     47e:	44 1f       	adc	r20, r20
     480:	55 1f       	adc	r21, r21
     482:	0a 94       	dec	r0
     484:	d2 f7       	brpl	.-12     	; 0x47a <__udivdi3+0x142>
     486:	80 e2       	ldi	r24, 0x20	; 32
     488:	90 e0       	ldi	r25, 0x00	; 0
     48a:	8e 19       	sub	r24, r14
     48c:	9f 09       	sbc	r25, r15
     48e:	6d a4       	ldd	r6, Y+45	; 0x2d
     490:	7e a4       	ldd	r7, Y+46	; 0x2e
     492:	8f a4       	ldd	r8, Y+47	; 0x2f
     494:	98 a8       	ldd	r9, Y+48	; 0x30
     496:	04 c0       	rjmp	.+8      	; 0x4a0 <__udivdi3+0x168>
     498:	96 94       	lsr	r9
     49a:	87 94       	ror	r8
     49c:	77 94       	ror	r7
     49e:	67 94       	ror	r6
     4a0:	8a 95       	dec	r24
     4a2:	d2 f7       	brpl	.-12     	; 0x498 <__udivdi3+0x160>
     4a4:	62 2a       	or	r6, r18
     4a6:	73 2a       	or	r7, r19
     4a8:	84 2a       	or	r8, r20
     4aa:	95 2a       	or	r9, r21
     4ac:	ad a4       	ldd	r10, Y+45	; 0x2d
     4ae:	be a4       	ldd	r11, Y+46	; 0x2e
     4b0:	cf a4       	ldd	r12, Y+47	; 0x2f
     4b2:	d8 a8       	ldd	r13, Y+48	; 0x30
     4b4:	04 c0       	rjmp	.+8      	; 0x4be <__udivdi3+0x186>
     4b6:	aa 0c       	add	r10, r10
     4b8:	bb 1c       	adc	r11, r11
     4ba:	cc 1c       	adc	r12, r12
     4bc:	dd 1c       	adc	r13, r13
     4be:	ea 94       	dec	r14
     4c0:	d2 f7       	brpl	.-12     	; 0x4b6 <__udivdi3+0x17e>
     4c2:	ad a6       	std	Y+45, r10	; 0x2d
     4c4:	be a6       	std	Y+46, r11	; 0x2e
     4c6:	cf a6       	std	Y+47, r12	; 0x2f
     4c8:	d8 aa       	std	Y+48, r13	; 0x30
     4ca:	62 01       	movw	r12, r4
     4cc:	ee 24       	eor	r14, r14
     4ce:	ff 24       	eor	r15, r15
     4d0:	cd aa       	std	Y+53, r12	; 0x35
     4d2:	de aa       	std	Y+54, r13	; 0x36
     4d4:	ef aa       	std	Y+55, r14	; 0x37
     4d6:	f8 ae       	std	Y+56, r15	; 0x38
     4d8:	92 01       	movw	r18, r4
     4da:	81 01       	movw	r16, r2
     4dc:	20 70       	andi	r18, 0x00	; 0
     4de:	30 70       	andi	r19, 0x00	; 0
     4e0:	09 af       	std	Y+57, r16	; 0x39
     4e2:	1a af       	std	Y+58, r17	; 0x3a
     4e4:	2b af       	std	Y+59, r18	; 0x3b
     4e6:	3c af       	std	Y+60, r19	; 0x3c
     4e8:	c4 01       	movw	r24, r8
     4ea:	b3 01       	movw	r22, r6
     4ec:	a7 01       	movw	r20, r14
     4ee:	96 01       	movw	r18, r12
     4f0:	0e 94 ef 2d 	call	0x5bde	; 0x5bde <__udivmodsi4>
     4f4:	7b 01       	movw	r14, r22
     4f6:	8c 01       	movw	r16, r24
     4f8:	c4 01       	movw	r24, r8
     4fa:	b3 01       	movw	r22, r6
     4fc:	2d a9       	ldd	r18, Y+53	; 0x35
     4fe:	3e a9       	ldd	r19, Y+54	; 0x36
     500:	4f a9       	ldd	r20, Y+55	; 0x37
     502:	58 ad       	ldd	r21, Y+56	; 0x38
     504:	0e 94 ef 2d 	call	0x5bde	; 0x5bde <__udivmodsi4>
     508:	c9 01       	movw	r24, r18
     50a:	da 01       	movw	r26, r20
     50c:	3c 01       	movw	r6, r24
     50e:	4d 01       	movw	r8, r26
     510:	c4 01       	movw	r24, r8
     512:	b3 01       	movw	r22, r6
     514:	29 ad       	ldd	r18, Y+57	; 0x39
     516:	3a ad       	ldd	r19, Y+58	; 0x3a
     518:	4b ad       	ldd	r20, Y+59	; 0x3b
     51a:	5c ad       	ldd	r21, Y+60	; 0x3c
     51c:	0e 94 b5 2d 	call	0x5b6a	; 0x5b6a <__mulsi3>
     520:	9b 01       	movw	r18, r22
     522:	ac 01       	movw	r20, r24
     524:	87 01       	movw	r16, r14
     526:	ff 24       	eor	r15, r15
     528:	ee 24       	eor	r14, r14
     52a:	ad a4       	ldd	r10, Y+45	; 0x2d
     52c:	be a4       	ldd	r11, Y+46	; 0x2e
     52e:	cf a4       	ldd	r12, Y+47	; 0x2f
     530:	d8 a8       	ldd	r13, Y+48	; 0x30
     532:	c6 01       	movw	r24, r12
     534:	aa 27       	eor	r26, r26
     536:	bb 27       	eor	r27, r27
     538:	57 01       	movw	r10, r14
     53a:	68 01       	movw	r12, r16
     53c:	a8 2a       	or	r10, r24
     53e:	b9 2a       	or	r11, r25
     540:	ca 2a       	or	r12, r26
     542:	db 2a       	or	r13, r27
     544:	a2 16       	cp	r10, r18
     546:	b3 06       	cpc	r11, r19
     548:	c4 06       	cpc	r12, r20
     54a:	d5 06       	cpc	r13, r21
     54c:	e0 f4       	brcc	.+56     	; 0x586 <__udivdi3+0x24e>
     54e:	08 94       	sec
     550:	61 08       	sbc	r6, r1
     552:	71 08       	sbc	r7, r1
     554:	81 08       	sbc	r8, r1
     556:	91 08       	sbc	r9, r1
     558:	a2 0c       	add	r10, r2
     55a:	b3 1c       	adc	r11, r3
     55c:	c4 1c       	adc	r12, r4
     55e:	d5 1c       	adc	r13, r5
     560:	a2 14       	cp	r10, r2
     562:	b3 04       	cpc	r11, r3
     564:	c4 04       	cpc	r12, r4
     566:	d5 04       	cpc	r13, r5
     568:	70 f0       	brcs	.+28     	; 0x586 <__udivdi3+0x24e>
     56a:	a2 16       	cp	r10, r18
     56c:	b3 06       	cpc	r11, r19
     56e:	c4 06       	cpc	r12, r20
     570:	d5 06       	cpc	r13, r21
     572:	48 f4       	brcc	.+18     	; 0x586 <__udivdi3+0x24e>
     574:	08 94       	sec
     576:	61 08       	sbc	r6, r1
     578:	71 08       	sbc	r7, r1
     57a:	81 08       	sbc	r8, r1
     57c:	91 08       	sbc	r9, r1
     57e:	a2 0c       	add	r10, r2
     580:	b3 1c       	adc	r11, r3
     582:	c4 1c       	adc	r12, r4
     584:	d5 1c       	adc	r13, r5
     586:	a2 1a       	sub	r10, r18
     588:	b3 0a       	sbc	r11, r19
     58a:	c4 0a       	sbc	r12, r20
     58c:	d5 0a       	sbc	r13, r21
     58e:	c6 01       	movw	r24, r12
     590:	b5 01       	movw	r22, r10
     592:	2d a9       	ldd	r18, Y+53	; 0x35
     594:	3e a9       	ldd	r19, Y+54	; 0x36
     596:	4f a9       	ldd	r20, Y+55	; 0x37
     598:	58 ad       	ldd	r21, Y+56	; 0x38
     59a:	0e 94 ef 2d 	call	0x5bde	; 0x5bde <__udivmodsi4>
     59e:	7b 01       	movw	r14, r22
     5a0:	8c 01       	movw	r16, r24
     5a2:	c6 01       	movw	r24, r12
     5a4:	b5 01       	movw	r22, r10
     5a6:	2d a9       	ldd	r18, Y+53	; 0x35
     5a8:	3e a9       	ldd	r19, Y+54	; 0x36
     5aa:	4f a9       	ldd	r20, Y+55	; 0x37
     5ac:	58 ad       	ldd	r21, Y+56	; 0x38
     5ae:	0e 94 ef 2d 	call	0x5bde	; 0x5bde <__udivmodsi4>
     5b2:	c9 01       	movw	r24, r18
     5b4:	da 01       	movw	r26, r20
     5b6:	5c 01       	movw	r10, r24
     5b8:	6d 01       	movw	r12, r26
     5ba:	c6 01       	movw	r24, r12
     5bc:	b5 01       	movw	r22, r10
     5be:	29 ad       	ldd	r18, Y+57	; 0x39
     5c0:	3a ad       	ldd	r19, Y+58	; 0x3a
     5c2:	4b ad       	ldd	r20, Y+59	; 0x3b
     5c4:	5c ad       	ldd	r21, Y+60	; 0x3c
     5c6:	0e 94 b5 2d 	call	0x5b6a	; 0x5b6a <__mulsi3>
     5ca:	9b 01       	movw	r18, r22
     5cc:	ac 01       	movw	r20, r24
     5ce:	87 01       	movw	r16, r14
     5d0:	ff 24       	eor	r15, r15
     5d2:	ee 24       	eor	r14, r14
     5d4:	8d a5       	ldd	r24, Y+45	; 0x2d
     5d6:	9e a5       	ldd	r25, Y+46	; 0x2e
     5d8:	af a5       	ldd	r26, Y+47	; 0x2f
     5da:	b8 a9       	ldd	r27, Y+48	; 0x30
     5dc:	a0 70       	andi	r26, 0x00	; 0
     5de:	b0 70       	andi	r27, 0x00	; 0
     5e0:	e8 2a       	or	r14, r24
     5e2:	f9 2a       	or	r15, r25
     5e4:	0a 2b       	or	r16, r26
     5e6:	1b 2b       	or	r17, r27
     5e8:	e2 16       	cp	r14, r18
     5ea:	f3 06       	cpc	r15, r19
     5ec:	04 07       	cpc	r16, r20
     5ee:	15 07       	cpc	r17, r21
     5f0:	c0 f4       	brcc	.+48     	; 0x622 <__udivdi3+0x2ea>
     5f2:	08 94       	sec
     5f4:	a1 08       	sbc	r10, r1
     5f6:	b1 08       	sbc	r11, r1
     5f8:	c1 08       	sbc	r12, r1
     5fa:	d1 08       	sbc	r13, r1
     5fc:	e2 0c       	add	r14, r2
     5fe:	f3 1c       	adc	r15, r3
     600:	04 1d       	adc	r16, r4
     602:	15 1d       	adc	r17, r5
     604:	e2 14       	cp	r14, r2
     606:	f3 04       	cpc	r15, r3
     608:	04 05       	cpc	r16, r4
     60a:	15 05       	cpc	r17, r5
     60c:	50 f0       	brcs	.+20     	; 0x622 <__udivdi3+0x2ea>
     60e:	e2 16       	cp	r14, r18
     610:	f3 06       	cpc	r15, r19
     612:	04 07       	cpc	r16, r20
     614:	15 07       	cpc	r17, r21
     616:	28 f4       	brcc	.+10     	; 0x622 <__udivdi3+0x2ea>
     618:	08 94       	sec
     61a:	a1 08       	sbc	r10, r1
     61c:	b1 08       	sbc	r11, r1
     61e:	c1 08       	sbc	r12, r1
     620:	d1 08       	sbc	r13, r1
     622:	d3 01       	movw	r26, r6
     624:	99 27       	eor	r25, r25
     626:	88 27       	eor	r24, r24
     628:	86 01       	movw	r16, r12
     62a:	75 01       	movw	r14, r10
     62c:	e8 2a       	or	r14, r24
     62e:	f9 2a       	or	r15, r25
     630:	0a 2b       	or	r16, r26
     632:	1b 2b       	or	r17, r27
     634:	e9 aa       	std	Y+49, r14	; 0x31
     636:	fa aa       	std	Y+50, r15	; 0x32
     638:	0b ab       	std	Y+51, r16	; 0x33
     63a:	1c ab       	std	Y+52, r17	; 0x34
     63c:	cf c4       	rjmp	.+2462   	; 0xfdc <__stack+0x77d>
     63e:	21 14       	cp	r2, r1
     640:	31 04       	cpc	r3, r1
     642:	41 04       	cpc	r4, r1
     644:	51 04       	cpc	r5, r1
     646:	71 f4       	brne	.+28     	; 0x664 <__udivdi3+0x32c>
     648:	61 e0       	ldi	r22, 0x01	; 1
     64a:	70 e0       	ldi	r23, 0x00	; 0
     64c:	80 e0       	ldi	r24, 0x00	; 0
     64e:	90 e0       	ldi	r25, 0x00	; 0
     650:	20 e0       	ldi	r18, 0x00	; 0
     652:	30 e0       	ldi	r19, 0x00	; 0
     654:	40 e0       	ldi	r20, 0x00	; 0
     656:	50 e0       	ldi	r21, 0x00	; 0
     658:	0e 94 ef 2d 	call	0x5bde	; 0x5bde <__udivmodsi4>
     65c:	c9 01       	movw	r24, r18
     65e:	da 01       	movw	r26, r20
     660:	1c 01       	movw	r2, r24
     662:	2d 01       	movw	r4, r26
     664:	00 e0       	ldi	r16, 0x00	; 0
     666:	20 16       	cp	r2, r16
     668:	00 e0       	ldi	r16, 0x00	; 0
     66a:	30 06       	cpc	r3, r16
     66c:	01 e0       	ldi	r16, 0x01	; 1
     66e:	40 06       	cpc	r4, r16
     670:	00 e0       	ldi	r16, 0x00	; 0
     672:	50 06       	cpc	r5, r16
     674:	88 f4       	brcc	.+34     	; 0x698 <__udivdi3+0x360>
     676:	1f ef       	ldi	r17, 0xFF	; 255
     678:	21 16       	cp	r2, r17
     67a:	31 04       	cpc	r3, r1
     67c:	41 04       	cpc	r4, r1
     67e:	51 04       	cpc	r5, r1
     680:	31 f0       	breq	.+12     	; 0x68e <__udivdi3+0x356>
     682:	28 f0       	brcs	.+10     	; 0x68e <__udivdi3+0x356>
     684:	48 e0       	ldi	r20, 0x08	; 8
     686:	50 e0       	ldi	r21, 0x00	; 0
     688:	60 e0       	ldi	r22, 0x00	; 0
     68a:	70 e0       	ldi	r23, 0x00	; 0
     68c:	17 c0       	rjmp	.+46     	; 0x6bc <__udivdi3+0x384>
     68e:	40 e0       	ldi	r20, 0x00	; 0
     690:	50 e0       	ldi	r21, 0x00	; 0
     692:	60 e0       	ldi	r22, 0x00	; 0
     694:	70 e0       	ldi	r23, 0x00	; 0
     696:	12 c0       	rjmp	.+36     	; 0x6bc <__udivdi3+0x384>
     698:	20 e0       	ldi	r18, 0x00	; 0
     69a:	22 16       	cp	r2, r18
     69c:	20 e0       	ldi	r18, 0x00	; 0
     69e:	32 06       	cpc	r3, r18
     6a0:	20 e0       	ldi	r18, 0x00	; 0
     6a2:	42 06       	cpc	r4, r18
     6a4:	21 e0       	ldi	r18, 0x01	; 1
     6a6:	52 06       	cpc	r5, r18
     6a8:	28 f0       	brcs	.+10     	; 0x6b4 <__udivdi3+0x37c>
     6aa:	48 e1       	ldi	r20, 0x18	; 24
     6ac:	50 e0       	ldi	r21, 0x00	; 0
     6ae:	60 e0       	ldi	r22, 0x00	; 0
     6b0:	70 e0       	ldi	r23, 0x00	; 0
     6b2:	04 c0       	rjmp	.+8      	; 0x6bc <__udivdi3+0x384>
     6b4:	40 e1       	ldi	r20, 0x10	; 16
     6b6:	50 e0       	ldi	r21, 0x00	; 0
     6b8:	60 e0       	ldi	r22, 0x00	; 0
     6ba:	70 e0       	ldi	r23, 0x00	; 0
     6bc:	d2 01       	movw	r26, r4
     6be:	c1 01       	movw	r24, r2
     6c0:	04 2e       	mov	r0, r20
     6c2:	04 c0       	rjmp	.+8      	; 0x6cc <__udivdi3+0x394>
     6c4:	b6 95       	lsr	r27
     6c6:	a7 95       	ror	r26
     6c8:	97 95       	ror	r25
     6ca:	87 95       	ror	r24
     6cc:	0a 94       	dec	r0
     6ce:	d2 f7       	brpl	.-12     	; 0x6c4 <__udivdi3+0x38c>
     6d0:	88 59       	subi	r24, 0x98	; 152
     6d2:	9f 4f       	sbci	r25, 0xFF	; 255
     6d4:	dc 01       	movw	r26, r24
     6d6:	2c 91       	ld	r18, X
     6d8:	e0 e2       	ldi	r30, 0x20	; 32
     6da:	ee 2e       	mov	r14, r30
     6dc:	f1 2c       	mov	r15, r1
     6de:	01 2d       	mov	r16, r1
     6e0:	11 2d       	mov	r17, r1
     6e2:	d8 01       	movw	r26, r16
     6e4:	c7 01       	movw	r24, r14
     6e6:	84 1b       	sub	r24, r20
     6e8:	95 0b       	sbc	r25, r21
     6ea:	a6 0b       	sbc	r26, r22
     6ec:	b7 0b       	sbc	r27, r23
     6ee:	82 1b       	sub	r24, r18
     6f0:	91 09       	sbc	r25, r1
     6f2:	a1 09       	sbc	r26, r1
     6f4:	b1 09       	sbc	r27, r1
     6f6:	00 97       	sbiw	r24, 0x00	; 0
     6f8:	a1 05       	cpc	r26, r1
     6fa:	b1 05       	cpc	r27, r1
     6fc:	61 f4       	brne	.+24     	; 0x716 <__udivdi3+0x3de>
     6fe:	64 01       	movw	r12, r8
     700:	53 01       	movw	r10, r6
     702:	a2 18       	sub	r10, r2
     704:	b3 08       	sbc	r11, r3
     706:	c4 08       	sbc	r12, r4
     708:	d5 08       	sbc	r13, r5
     70a:	31 e0       	ldi	r19, 0x01	; 1
     70c:	63 2e       	mov	r6, r19
     70e:	71 2c       	mov	r7, r1
     710:	81 2c       	mov	r8, r1
     712:	91 2c       	mov	r9, r1
     714:	1e c1       	rjmp	.+572    	; 0x952 <__stack+0xf3>
     716:	6f 96       	adiw	r28, 0x1f	; 31
     718:	8f af       	std	Y+63, r24	; 0x3f
     71a:	6f 97       	sbiw	r28, 0x1f	; 31
     71c:	08 2e       	mov	r0, r24
     71e:	04 c0       	rjmp	.+8      	; 0x728 <__udivdi3+0x3f0>
     720:	22 0c       	add	r2, r2
     722:	33 1c       	adc	r3, r3
     724:	44 1c       	adc	r4, r4
     726:	55 1c       	adc	r5, r5
     728:	0a 94       	dec	r0
     72a:	d2 f7       	brpl	.-12     	; 0x720 <__udivdi3+0x3e8>
     72c:	ee 2d       	mov	r30, r14
     72e:	e8 1b       	sub	r30, r24
     730:	64 01       	movw	r12, r8
     732:	53 01       	movw	r10, r6
     734:	0e 2e       	mov	r0, r30
     736:	04 c0       	rjmp	.+8      	; 0x740 <__udivdi3+0x408>
     738:	d6 94       	lsr	r13
     73a:	c7 94       	ror	r12
     73c:	b7 94       	ror	r11
     73e:	a7 94       	ror	r10
     740:	0a 94       	dec	r0
     742:	d2 f7       	brpl	.-12     	; 0x738 <__udivdi3+0x400>
     744:	a4 01       	movw	r20, r8
     746:	93 01       	movw	r18, r6
     748:	6f 96       	adiw	r28, 0x1f	; 31
     74a:	0f ac       	ldd	r0, Y+63	; 0x3f
     74c:	6f 97       	sbiw	r28, 0x1f	; 31
     74e:	04 c0       	rjmp	.+8      	; 0x758 <__udivdi3+0x420>
     750:	22 0f       	add	r18, r18
     752:	33 1f       	adc	r19, r19
     754:	44 1f       	adc	r20, r20
     756:	55 1f       	adc	r21, r21
     758:	0a 94       	dec	r0
     75a:	d2 f7       	brpl	.-12     	; 0x750 <__udivdi3+0x418>
     75c:	6d a4       	ldd	r6, Y+45	; 0x2d
     75e:	7e a4       	ldd	r7, Y+46	; 0x2e
     760:	8f a4       	ldd	r8, Y+47	; 0x2f
     762:	98 a8       	ldd	r9, Y+48	; 0x30
     764:	0e 2e       	mov	r0, r30
     766:	04 c0       	rjmp	.+8      	; 0x770 <__udivdi3+0x438>
     768:	96 94       	lsr	r9
     76a:	87 94       	ror	r8
     76c:	77 94       	ror	r7
     76e:	67 94       	ror	r6
     770:	0a 94       	dec	r0
     772:	d2 f7       	brpl	.-12     	; 0x768 <__udivdi3+0x430>
     774:	84 01       	movw	r16, r8
     776:	73 01       	movw	r14, r6
     778:	e2 2a       	or	r14, r18
     77a:	f3 2a       	or	r15, r19
     77c:	04 2b       	or	r16, r20
     77e:	15 2b       	or	r17, r21
     780:	e9 a6       	std	Y+41, r14	; 0x29
     782:	fa a6       	std	Y+42, r15	; 0x2a
     784:	0b a7       	std	Y+43, r16	; 0x2b
     786:	1c a7       	std	Y+44, r17	; 0x2c
     788:	32 01       	movw	r6, r4
     78a:	88 24       	eor	r8, r8
     78c:	99 24       	eor	r9, r9
     78e:	92 01       	movw	r18, r4
     790:	81 01       	movw	r16, r2
     792:	20 70       	andi	r18, 0x00	; 0
     794:	30 70       	andi	r19, 0x00	; 0
     796:	21 96       	adiw	r28, 0x01	; 1
     798:	0c af       	std	Y+60, r16	; 0x3c
     79a:	1d af       	std	Y+61, r17	; 0x3d
     79c:	2e af       	std	Y+62, r18	; 0x3e
     79e:	3f af       	std	Y+63, r19	; 0x3f
     7a0:	21 97       	sbiw	r28, 0x01	; 1
     7a2:	c6 01       	movw	r24, r12
     7a4:	b5 01       	movw	r22, r10
     7a6:	a4 01       	movw	r20, r8
     7a8:	93 01       	movw	r18, r6
     7aa:	0e 94 ef 2d 	call	0x5bde	; 0x5bde <__udivmodsi4>
     7ae:	7b 01       	movw	r14, r22
     7b0:	8c 01       	movw	r16, r24
     7b2:	c6 01       	movw	r24, r12
     7b4:	b5 01       	movw	r22, r10
     7b6:	a4 01       	movw	r20, r8
     7b8:	93 01       	movw	r18, r6
     7ba:	0e 94 ef 2d 	call	0x5bde	; 0x5bde <__udivmodsi4>
     7be:	c9 01       	movw	r24, r18
     7c0:	da 01       	movw	r26, r20
     7c2:	25 96       	adiw	r28, 0x05	; 5
     7c4:	8c af       	std	Y+60, r24	; 0x3c
     7c6:	9d af       	std	Y+61, r25	; 0x3d
     7c8:	ae af       	std	Y+62, r26	; 0x3e
     7ca:	bf af       	std	Y+63, r27	; 0x3f
     7cc:	25 97       	sbiw	r28, 0x05	; 5
     7ce:	bc 01       	movw	r22, r24
     7d0:	cd 01       	movw	r24, r26
     7d2:	21 96       	adiw	r28, 0x01	; 1
     7d4:	2c ad       	ldd	r18, Y+60	; 0x3c
     7d6:	3d ad       	ldd	r19, Y+61	; 0x3d
     7d8:	4e ad       	ldd	r20, Y+62	; 0x3e
     7da:	5f ad       	ldd	r21, Y+63	; 0x3f
     7dc:	21 97       	sbiw	r28, 0x01	; 1
     7de:	0e 94 b5 2d 	call	0x5b6a	; 0x5b6a <__mulsi3>
     7e2:	9b 01       	movw	r18, r22
     7e4:	ac 01       	movw	r20, r24
     7e6:	87 01       	movw	r16, r14
     7e8:	ff 24       	eor	r15, r15
     7ea:	ee 24       	eor	r14, r14
     7ec:	a9 a4       	ldd	r10, Y+41	; 0x29
     7ee:	ba a4       	ldd	r11, Y+42	; 0x2a
     7f0:	cb a4       	ldd	r12, Y+43	; 0x2b
     7f2:	dc a4       	ldd	r13, Y+44	; 0x2c
     7f4:	c6 01       	movw	r24, r12
     7f6:	aa 27       	eor	r26, r26
     7f8:	bb 27       	eor	r27, r27
     7fa:	5c 01       	movw	r10, r24
     7fc:	6d 01       	movw	r12, r26
     7fe:	ae 28       	or	r10, r14
     800:	bf 28       	or	r11, r15
     802:	c0 2a       	or	r12, r16
     804:	d1 2a       	or	r13, r17
     806:	a2 16       	cp	r10, r18
     808:	b3 06       	cpc	r11, r19
     80a:	c4 06       	cpc	r12, r20
     80c:	d5 06       	cpc	r13, r21
     80e:	60 f5       	brcc	.+88     	; 0x868 <__stack+0x9>
     810:	25 96       	adiw	r28, 0x05	; 5
     812:	6c ad       	ldd	r22, Y+60	; 0x3c
     814:	7d ad       	ldd	r23, Y+61	; 0x3d
     816:	8e ad       	ldd	r24, Y+62	; 0x3e
     818:	9f ad       	ldd	r25, Y+63	; 0x3f
     81a:	25 97       	sbiw	r28, 0x05	; 5
     81c:	61 50       	subi	r22, 0x01	; 1
     81e:	70 40       	sbci	r23, 0x00	; 0
     820:	80 40       	sbci	r24, 0x00	; 0
     822:	90 40       	sbci	r25, 0x00	; 0
     824:	25 96       	adiw	r28, 0x05	; 5
     826:	6c af       	std	Y+60, r22	; 0x3c
     828:	7d af       	std	Y+61, r23	; 0x3d
     82a:	8e af       	std	Y+62, r24	; 0x3e
     82c:	9f af       	std	Y+63, r25	; 0x3f
     82e:	25 97       	sbiw	r28, 0x05	; 5
     830:	a2 0c       	add	r10, r2
     832:	b3 1c       	adc	r11, r3
     834:	c4 1c       	adc	r12, r4
     836:	d5 1c       	adc	r13, r5
     838:	a2 14       	cp	r10, r2
     83a:	b3 04       	cpc	r11, r3
     83c:	c4 04       	cpc	r12, r4
     83e:	d5 04       	cpc	r13, r5
     840:	98 f0       	brcs	.+38     	; 0x868 <__stack+0x9>
     842:	a2 16       	cp	r10, r18
     844:	b3 06       	cpc	r11, r19
     846:	c4 06       	cpc	r12, r20
     848:	d5 06       	cpc	r13, r21
     84a:	70 f4       	brcc	.+28     	; 0x868 <__stack+0x9>
     84c:	61 50       	subi	r22, 0x01	; 1
     84e:	70 40       	sbci	r23, 0x00	; 0
     850:	80 40       	sbci	r24, 0x00	; 0
     852:	90 40       	sbci	r25, 0x00	; 0
     854:	25 96       	adiw	r28, 0x05	; 5
     856:	6c af       	std	Y+60, r22	; 0x3c
     858:	7d af       	std	Y+61, r23	; 0x3d
     85a:	8e af       	std	Y+62, r24	; 0x3e
     85c:	9f af       	std	Y+63, r25	; 0x3f
     85e:	25 97       	sbiw	r28, 0x05	; 5
     860:	a2 0c       	add	r10, r2
     862:	b3 1c       	adc	r11, r3
     864:	c4 1c       	adc	r12, r4
     866:	d5 1c       	adc	r13, r5
     868:	a2 1a       	sub	r10, r18
     86a:	b3 0a       	sbc	r11, r19
     86c:	c4 0a       	sbc	r12, r20
     86e:	d5 0a       	sbc	r13, r21
     870:	c6 01       	movw	r24, r12
     872:	b5 01       	movw	r22, r10
     874:	a4 01       	movw	r20, r8
     876:	93 01       	movw	r18, r6
     878:	0e 94 ef 2d 	call	0x5bde	; 0x5bde <__udivmodsi4>
     87c:	7b 01       	movw	r14, r22
     87e:	8c 01       	movw	r16, r24
     880:	c6 01       	movw	r24, r12
     882:	b5 01       	movw	r22, r10
     884:	a4 01       	movw	r20, r8
     886:	93 01       	movw	r18, r6
     888:	0e 94 ef 2d 	call	0x5bde	; 0x5bde <__udivmodsi4>
     88c:	c9 01       	movw	r24, r18
     88e:	da 01       	movw	r26, r20
     890:	3c 01       	movw	r6, r24
     892:	4d 01       	movw	r8, r26
     894:	c4 01       	movw	r24, r8
     896:	b3 01       	movw	r22, r6
     898:	21 96       	adiw	r28, 0x01	; 1
     89a:	2c ad       	ldd	r18, Y+60	; 0x3c
     89c:	3d ad       	ldd	r19, Y+61	; 0x3d
     89e:	4e ad       	ldd	r20, Y+62	; 0x3e
     8a0:	5f ad       	ldd	r21, Y+63	; 0x3f
     8a2:	21 97       	sbiw	r28, 0x01	; 1
     8a4:	0e 94 b5 2d 	call	0x5b6a	; 0x5b6a <__mulsi3>
     8a8:	9b 01       	movw	r18, r22
     8aa:	ac 01       	movw	r20, r24
     8ac:	87 01       	movw	r16, r14
     8ae:	ff 24       	eor	r15, r15
     8b0:	ee 24       	eor	r14, r14
     8b2:	89 a5       	ldd	r24, Y+41	; 0x29
     8b4:	9a a5       	ldd	r25, Y+42	; 0x2a
     8b6:	ab a5       	ldd	r26, Y+43	; 0x2b
     8b8:	bc a5       	ldd	r27, Y+44	; 0x2c
     8ba:	a0 70       	andi	r26, 0x00	; 0
     8bc:	b0 70       	andi	r27, 0x00	; 0
     8be:	57 01       	movw	r10, r14
     8c0:	68 01       	movw	r12, r16
     8c2:	a8 2a       	or	r10, r24
     8c4:	b9 2a       	or	r11, r25
     8c6:	ca 2a       	or	r12, r26
     8c8:	db 2a       	or	r13, r27
     8ca:	a2 16       	cp	r10, r18
     8cc:	b3 06       	cpc	r11, r19
     8ce:	c4 06       	cpc	r12, r20
     8d0:	d5 06       	cpc	r13, r21
     8d2:	e0 f4       	brcc	.+56     	; 0x90c <__stack+0xad>
     8d4:	08 94       	sec
     8d6:	61 08       	sbc	r6, r1
     8d8:	71 08       	sbc	r7, r1
     8da:	81 08       	sbc	r8, r1
     8dc:	91 08       	sbc	r9, r1
     8de:	a2 0c       	add	r10, r2
     8e0:	b3 1c       	adc	r11, r3
     8e2:	c4 1c       	adc	r12, r4
     8e4:	d5 1c       	adc	r13, r5
     8e6:	a2 14       	cp	r10, r2
     8e8:	b3 04       	cpc	r11, r3
     8ea:	c4 04       	cpc	r12, r4
     8ec:	d5 04       	cpc	r13, r5
     8ee:	70 f0       	brcs	.+28     	; 0x90c <__stack+0xad>
     8f0:	a2 16       	cp	r10, r18
     8f2:	b3 06       	cpc	r11, r19
     8f4:	c4 06       	cpc	r12, r20
     8f6:	d5 06       	cpc	r13, r21
     8f8:	48 f4       	brcc	.+18     	; 0x90c <__stack+0xad>
     8fa:	08 94       	sec
     8fc:	61 08       	sbc	r6, r1
     8fe:	71 08       	sbc	r7, r1
     900:	81 08       	sbc	r8, r1
     902:	91 08       	sbc	r9, r1
     904:	a2 0c       	add	r10, r2
     906:	b3 1c       	adc	r11, r3
     908:	c4 1c       	adc	r12, r4
     90a:	d5 1c       	adc	r13, r5
     90c:	8d a5       	ldd	r24, Y+45	; 0x2d
     90e:	9e a5       	ldd	r25, Y+46	; 0x2e
     910:	af a5       	ldd	r26, Y+47	; 0x2f
     912:	b8 a9       	ldd	r27, Y+48	; 0x30
     914:	6f 96       	adiw	r28, 0x1f	; 31
     916:	0f ac       	ldd	r0, Y+63	; 0x3f
     918:	6f 97       	sbiw	r28, 0x1f	; 31
     91a:	04 c0       	rjmp	.+8      	; 0x924 <__stack+0xc5>
     91c:	88 0f       	add	r24, r24
     91e:	99 1f       	adc	r25, r25
     920:	aa 1f       	adc	r26, r26
     922:	bb 1f       	adc	r27, r27
     924:	0a 94       	dec	r0
     926:	d2 f7       	brpl	.-12     	; 0x91c <__stack+0xbd>
     928:	8d a7       	std	Y+45, r24	; 0x2d
     92a:	9e a7       	std	Y+46, r25	; 0x2e
     92c:	af a7       	std	Y+47, r26	; 0x2f
     92e:	b8 ab       	std	Y+48, r27	; 0x30
     930:	a2 1a       	sub	r10, r18
     932:	b3 0a       	sbc	r11, r19
     934:	c4 0a       	sbc	r12, r20
     936:	d5 0a       	sbc	r13, r21
     938:	25 96       	adiw	r28, 0x05	; 5
     93a:	ec ac       	ldd	r14, Y+60	; 0x3c
     93c:	fd ac       	ldd	r15, Y+61	; 0x3d
     93e:	0e ad       	ldd	r16, Y+62	; 0x3e
     940:	1f ad       	ldd	r17, Y+63	; 0x3f
     942:	25 97       	sbiw	r28, 0x05	; 5
     944:	d7 01       	movw	r26, r14
     946:	99 27       	eor	r25, r25
     948:	88 27       	eor	r24, r24
     94a:	68 2a       	or	r6, r24
     94c:	79 2a       	or	r7, r25
     94e:	8a 2a       	or	r8, r26
     950:	9b 2a       	or	r9, r27
     952:	82 01       	movw	r16, r4
     954:	22 27       	eor	r18, r18
     956:	33 27       	eor	r19, r19
     958:	29 96       	adiw	r28, 0x09	; 9
     95a:	0c af       	std	Y+60, r16	; 0x3c
     95c:	1d af       	std	Y+61, r17	; 0x3d
     95e:	2e af       	std	Y+62, r18	; 0x3e
     960:	3f af       	std	Y+63, r19	; 0x3f
     962:	29 97       	sbiw	r28, 0x09	; 9
     964:	a2 01       	movw	r20, r4
     966:	91 01       	movw	r18, r2
     968:	40 70       	andi	r20, 0x00	; 0
     96a:	50 70       	andi	r21, 0x00	; 0
     96c:	2d 96       	adiw	r28, 0x0d	; 13
     96e:	2c af       	std	Y+60, r18	; 0x3c
     970:	3d af       	std	Y+61, r19	; 0x3d
     972:	4e af       	std	Y+62, r20	; 0x3e
     974:	5f af       	std	Y+63, r21	; 0x3f
     976:	2d 97       	sbiw	r28, 0x0d	; 13
     978:	c6 01       	movw	r24, r12
     97a:	b5 01       	movw	r22, r10
     97c:	29 96       	adiw	r28, 0x09	; 9
     97e:	2c ad       	ldd	r18, Y+60	; 0x3c
     980:	3d ad       	ldd	r19, Y+61	; 0x3d
     982:	4e ad       	ldd	r20, Y+62	; 0x3e
     984:	5f ad       	ldd	r21, Y+63	; 0x3f
     986:	29 97       	sbiw	r28, 0x09	; 9
     988:	0e 94 ef 2d 	call	0x5bde	; 0x5bde <__udivmodsi4>
     98c:	7b 01       	movw	r14, r22
     98e:	8c 01       	movw	r16, r24
     990:	c6 01       	movw	r24, r12
     992:	b5 01       	movw	r22, r10
     994:	29 96       	adiw	r28, 0x09	; 9
     996:	2c ad       	ldd	r18, Y+60	; 0x3c
     998:	3d ad       	ldd	r19, Y+61	; 0x3d
     99a:	4e ad       	ldd	r20, Y+62	; 0x3e
     99c:	5f ad       	ldd	r21, Y+63	; 0x3f
     99e:	29 97       	sbiw	r28, 0x09	; 9
     9a0:	0e 94 ef 2d 	call	0x5bde	; 0x5bde <__udivmodsi4>
     9a4:	c9 01       	movw	r24, r18
     9a6:	da 01       	movw	r26, r20
     9a8:	61 96       	adiw	r28, 0x11	; 17
     9aa:	8c af       	std	Y+60, r24	; 0x3c
     9ac:	9d af       	std	Y+61, r25	; 0x3d
     9ae:	ae af       	std	Y+62, r26	; 0x3e
     9b0:	bf af       	std	Y+63, r27	; 0x3f
     9b2:	61 97       	sbiw	r28, 0x11	; 17
     9b4:	bc 01       	movw	r22, r24
     9b6:	cd 01       	movw	r24, r26
     9b8:	2d 96       	adiw	r28, 0x0d	; 13
     9ba:	2c ad       	ldd	r18, Y+60	; 0x3c
     9bc:	3d ad       	ldd	r19, Y+61	; 0x3d
     9be:	4e ad       	ldd	r20, Y+62	; 0x3e
     9c0:	5f ad       	ldd	r21, Y+63	; 0x3f
     9c2:	2d 97       	sbiw	r28, 0x0d	; 13
     9c4:	0e 94 b5 2d 	call	0x5b6a	; 0x5b6a <__mulsi3>
     9c8:	9b 01       	movw	r18, r22
     9ca:	ac 01       	movw	r20, r24
     9cc:	87 01       	movw	r16, r14
     9ce:	ff 24       	eor	r15, r15
     9d0:	ee 24       	eor	r14, r14
     9d2:	ad a4       	ldd	r10, Y+45	; 0x2d
     9d4:	be a4       	ldd	r11, Y+46	; 0x2e
     9d6:	cf a4       	ldd	r12, Y+47	; 0x2f
     9d8:	d8 a8       	ldd	r13, Y+48	; 0x30
     9da:	c6 01       	movw	r24, r12
     9dc:	aa 27       	eor	r26, r26
     9de:	bb 27       	eor	r27, r27
     9e0:	57 01       	movw	r10, r14
     9e2:	68 01       	movw	r12, r16
     9e4:	a8 2a       	or	r10, r24
     9e6:	b9 2a       	or	r11, r25
     9e8:	ca 2a       	or	r12, r26
     9ea:	db 2a       	or	r13, r27
     9ec:	a2 16       	cp	r10, r18
     9ee:	b3 06       	cpc	r11, r19
     9f0:	c4 06       	cpc	r12, r20
     9f2:	d5 06       	cpc	r13, r21
     9f4:	60 f5       	brcc	.+88     	; 0xa4e <__stack+0x1ef>
     9f6:	61 96       	adiw	r28, 0x11	; 17
     9f8:	6c ad       	ldd	r22, Y+60	; 0x3c
     9fa:	7d ad       	ldd	r23, Y+61	; 0x3d
     9fc:	8e ad       	ldd	r24, Y+62	; 0x3e
     9fe:	9f ad       	ldd	r25, Y+63	; 0x3f
     a00:	61 97       	sbiw	r28, 0x11	; 17
     a02:	61 50       	subi	r22, 0x01	; 1
     a04:	70 40       	sbci	r23, 0x00	; 0
     a06:	80 40       	sbci	r24, 0x00	; 0
     a08:	90 40       	sbci	r25, 0x00	; 0
     a0a:	61 96       	adiw	r28, 0x11	; 17
     a0c:	6c af       	std	Y+60, r22	; 0x3c
     a0e:	7d af       	std	Y+61, r23	; 0x3d
     a10:	8e af       	std	Y+62, r24	; 0x3e
     a12:	9f af       	std	Y+63, r25	; 0x3f
     a14:	61 97       	sbiw	r28, 0x11	; 17
     a16:	a2 0c       	add	r10, r2
     a18:	b3 1c       	adc	r11, r3
     a1a:	c4 1c       	adc	r12, r4
     a1c:	d5 1c       	adc	r13, r5
     a1e:	a2 14       	cp	r10, r2
     a20:	b3 04       	cpc	r11, r3
     a22:	c4 04       	cpc	r12, r4
     a24:	d5 04       	cpc	r13, r5
     a26:	98 f0       	brcs	.+38     	; 0xa4e <__stack+0x1ef>
     a28:	a2 16       	cp	r10, r18
     a2a:	b3 06       	cpc	r11, r19
     a2c:	c4 06       	cpc	r12, r20
     a2e:	d5 06       	cpc	r13, r21
     a30:	70 f4       	brcc	.+28     	; 0xa4e <__stack+0x1ef>
     a32:	61 50       	subi	r22, 0x01	; 1
     a34:	70 40       	sbci	r23, 0x00	; 0
     a36:	80 40       	sbci	r24, 0x00	; 0
     a38:	90 40       	sbci	r25, 0x00	; 0
     a3a:	61 96       	adiw	r28, 0x11	; 17
     a3c:	6c af       	std	Y+60, r22	; 0x3c
     a3e:	7d af       	std	Y+61, r23	; 0x3d
     a40:	8e af       	std	Y+62, r24	; 0x3e
     a42:	9f af       	std	Y+63, r25	; 0x3f
     a44:	61 97       	sbiw	r28, 0x11	; 17
     a46:	a2 0c       	add	r10, r2
     a48:	b3 1c       	adc	r11, r3
     a4a:	c4 1c       	adc	r12, r4
     a4c:	d5 1c       	adc	r13, r5
     a4e:	a2 1a       	sub	r10, r18
     a50:	b3 0a       	sbc	r11, r19
     a52:	c4 0a       	sbc	r12, r20
     a54:	d5 0a       	sbc	r13, r21
     a56:	c6 01       	movw	r24, r12
     a58:	b5 01       	movw	r22, r10
     a5a:	29 96       	adiw	r28, 0x09	; 9
     a5c:	2c ad       	ldd	r18, Y+60	; 0x3c
     a5e:	3d ad       	ldd	r19, Y+61	; 0x3d
     a60:	4e ad       	ldd	r20, Y+62	; 0x3e
     a62:	5f ad       	ldd	r21, Y+63	; 0x3f
     a64:	29 97       	sbiw	r28, 0x09	; 9
     a66:	0e 94 ef 2d 	call	0x5bde	; 0x5bde <__udivmodsi4>
     a6a:	7b 01       	movw	r14, r22
     a6c:	8c 01       	movw	r16, r24
     a6e:	c6 01       	movw	r24, r12
     a70:	b5 01       	movw	r22, r10
     a72:	29 96       	adiw	r28, 0x09	; 9
     a74:	2c ad       	ldd	r18, Y+60	; 0x3c
     a76:	3d ad       	ldd	r19, Y+61	; 0x3d
     a78:	4e ad       	ldd	r20, Y+62	; 0x3e
     a7a:	5f ad       	ldd	r21, Y+63	; 0x3f
     a7c:	29 97       	sbiw	r28, 0x09	; 9
     a7e:	0e 94 ef 2d 	call	0x5bde	; 0x5bde <__udivmodsi4>
     a82:	c9 01       	movw	r24, r18
     a84:	da 01       	movw	r26, r20
     a86:	5c 01       	movw	r10, r24
     a88:	6d 01       	movw	r12, r26
     a8a:	c6 01       	movw	r24, r12
     a8c:	b5 01       	movw	r22, r10
     a8e:	2d 96       	adiw	r28, 0x0d	; 13
     a90:	2c ad       	ldd	r18, Y+60	; 0x3c
     a92:	3d ad       	ldd	r19, Y+61	; 0x3d
     a94:	4e ad       	ldd	r20, Y+62	; 0x3e
     a96:	5f ad       	ldd	r21, Y+63	; 0x3f
     a98:	2d 97       	sbiw	r28, 0x0d	; 13
     a9a:	0e 94 b5 2d 	call	0x5b6a	; 0x5b6a <__mulsi3>
     a9e:	9b 01       	movw	r18, r22
     aa0:	ac 01       	movw	r20, r24
     aa2:	87 01       	movw	r16, r14
     aa4:	ff 24       	eor	r15, r15
     aa6:	ee 24       	eor	r14, r14
     aa8:	8d a5       	ldd	r24, Y+45	; 0x2d
     aaa:	9e a5       	ldd	r25, Y+46	; 0x2e
     aac:	af a5       	ldd	r26, Y+47	; 0x2f
     aae:	b8 a9       	ldd	r27, Y+48	; 0x30
     ab0:	a0 70       	andi	r26, 0x00	; 0
     ab2:	b0 70       	andi	r27, 0x00	; 0
     ab4:	e8 2a       	or	r14, r24
     ab6:	f9 2a       	or	r15, r25
     ab8:	0a 2b       	or	r16, r26
     aba:	1b 2b       	or	r17, r27
     abc:	e2 16       	cp	r14, r18
     abe:	f3 06       	cpc	r15, r19
     ac0:	04 07       	cpc	r16, r20
     ac2:	15 07       	cpc	r17, r21
     ac4:	c0 f4       	brcc	.+48     	; 0xaf6 <__stack+0x297>
     ac6:	08 94       	sec
     ac8:	a1 08       	sbc	r10, r1
     aca:	b1 08       	sbc	r11, r1
     acc:	c1 08       	sbc	r12, r1
     ace:	d1 08       	sbc	r13, r1
     ad0:	e2 0c       	add	r14, r2
     ad2:	f3 1c       	adc	r15, r3
     ad4:	04 1d       	adc	r16, r4
     ad6:	15 1d       	adc	r17, r5
     ad8:	e2 14       	cp	r14, r2
     ada:	f3 04       	cpc	r15, r3
     adc:	04 05       	cpc	r16, r4
     ade:	15 05       	cpc	r17, r5
     ae0:	50 f0       	brcs	.+20     	; 0xaf6 <__stack+0x297>
     ae2:	e2 16       	cp	r14, r18
     ae4:	f3 06       	cpc	r15, r19
     ae6:	04 07       	cpc	r16, r20
     ae8:	15 07       	cpc	r17, r21
     aea:	28 f4       	brcc	.+10     	; 0xaf6 <__stack+0x297>
     aec:	08 94       	sec
     aee:	a1 08       	sbc	r10, r1
     af0:	b1 08       	sbc	r11, r1
     af2:	c1 08       	sbc	r12, r1
     af4:	d1 08       	sbc	r13, r1
     af6:	61 96       	adiw	r28, 0x11	; 17
     af8:	ec ac       	ldd	r14, Y+60	; 0x3c
     afa:	fd ac       	ldd	r15, Y+61	; 0x3d
     afc:	0e ad       	ldd	r16, Y+62	; 0x3e
     afe:	1f ad       	ldd	r17, Y+63	; 0x3f
     b00:	61 97       	sbiw	r28, 0x11	; 17
     b02:	d7 01       	movw	r26, r14
     b04:	99 27       	eor	r25, r25
     b06:	88 27       	eor	r24, r24
     b08:	96 01       	movw	r18, r12
     b0a:	85 01       	movw	r16, r10
     b0c:	08 2b       	or	r16, r24
     b0e:	19 2b       	or	r17, r25
     b10:	2a 2b       	or	r18, r26
     b12:	3b 2b       	or	r19, r27
     b14:	09 ab       	std	Y+49, r16	; 0x31
     b16:	1a ab       	std	Y+50, r17	; 0x32
     b18:	2b ab       	std	Y+51, r18	; 0x33
     b1a:	3c ab       	std	Y+52, r19	; 0x34
     b1c:	62 c2       	rjmp	.+1220   	; 0xfe2 <__stack+0x783>
     b1e:	6e 14       	cp	r6, r14
     b20:	7f 04       	cpc	r7, r15
     b22:	80 06       	cpc	r8, r16
     b24:	91 06       	cpc	r9, r17
     b26:	08 f4       	brcc	.+2      	; 0xb2a <__stack+0x2cb>
     b28:	51 c2       	rjmp	.+1186   	; 0xfcc <__stack+0x76d>
     b2a:	20 e0       	ldi	r18, 0x00	; 0
     b2c:	e2 16       	cp	r14, r18
     b2e:	20 e0       	ldi	r18, 0x00	; 0
     b30:	f2 06       	cpc	r15, r18
     b32:	21 e0       	ldi	r18, 0x01	; 1
     b34:	02 07       	cpc	r16, r18
     b36:	20 e0       	ldi	r18, 0x00	; 0
     b38:	12 07       	cpc	r17, r18
     b3a:	88 f4       	brcc	.+34     	; 0xb5e <__stack+0x2ff>
     b3c:	3f ef       	ldi	r19, 0xFF	; 255
     b3e:	e3 16       	cp	r14, r19
     b40:	f1 04       	cpc	r15, r1
     b42:	01 05       	cpc	r16, r1
     b44:	11 05       	cpc	r17, r1
     b46:	31 f0       	breq	.+12     	; 0xb54 <__stack+0x2f5>
     b48:	28 f0       	brcs	.+10     	; 0xb54 <__stack+0x2f5>
     b4a:	48 e0       	ldi	r20, 0x08	; 8
     b4c:	50 e0       	ldi	r21, 0x00	; 0
     b4e:	60 e0       	ldi	r22, 0x00	; 0
     b50:	70 e0       	ldi	r23, 0x00	; 0
     b52:	17 c0       	rjmp	.+46     	; 0xb82 <__stack+0x323>
     b54:	40 e0       	ldi	r20, 0x00	; 0
     b56:	50 e0       	ldi	r21, 0x00	; 0
     b58:	60 e0       	ldi	r22, 0x00	; 0
     b5a:	70 e0       	ldi	r23, 0x00	; 0
     b5c:	12 c0       	rjmp	.+36     	; 0xb82 <__stack+0x323>
     b5e:	40 e0       	ldi	r20, 0x00	; 0
     b60:	e4 16       	cp	r14, r20
     b62:	40 e0       	ldi	r20, 0x00	; 0
     b64:	f4 06       	cpc	r15, r20
     b66:	40 e0       	ldi	r20, 0x00	; 0
     b68:	04 07       	cpc	r16, r20
     b6a:	41 e0       	ldi	r20, 0x01	; 1
     b6c:	14 07       	cpc	r17, r20
     b6e:	28 f0       	brcs	.+10     	; 0xb7a <__stack+0x31b>
     b70:	48 e1       	ldi	r20, 0x18	; 24
     b72:	50 e0       	ldi	r21, 0x00	; 0
     b74:	60 e0       	ldi	r22, 0x00	; 0
     b76:	70 e0       	ldi	r23, 0x00	; 0
     b78:	04 c0       	rjmp	.+8      	; 0xb82 <__stack+0x323>
     b7a:	40 e1       	ldi	r20, 0x10	; 16
     b7c:	50 e0       	ldi	r21, 0x00	; 0
     b7e:	60 e0       	ldi	r22, 0x00	; 0
     b80:	70 e0       	ldi	r23, 0x00	; 0
     b82:	d8 01       	movw	r26, r16
     b84:	c7 01       	movw	r24, r14
     b86:	04 2e       	mov	r0, r20
     b88:	04 c0       	rjmp	.+8      	; 0xb92 <__stack+0x333>
     b8a:	b6 95       	lsr	r27
     b8c:	a7 95       	ror	r26
     b8e:	97 95       	ror	r25
     b90:	87 95       	ror	r24
     b92:	0a 94       	dec	r0
     b94:	d2 f7       	brpl	.-12     	; 0xb8a <__stack+0x32b>
     b96:	88 59       	subi	r24, 0x98	; 152
     b98:	9f 4f       	sbci	r25, 0xFF	; 255
     b9a:	dc 01       	movw	r26, r24
     b9c:	2c 91       	ld	r18, X
     b9e:	30 e2       	ldi	r19, 0x20	; 32
     ba0:	a3 2e       	mov	r10, r19
     ba2:	b1 2c       	mov	r11, r1
     ba4:	c1 2c       	mov	r12, r1
     ba6:	d1 2c       	mov	r13, r1
     ba8:	d6 01       	movw	r26, r12
     baa:	c5 01       	movw	r24, r10
     bac:	84 1b       	sub	r24, r20
     bae:	95 0b       	sbc	r25, r21
     bb0:	a6 0b       	sbc	r26, r22
     bb2:	b7 0b       	sbc	r27, r23
     bb4:	82 1b       	sub	r24, r18
     bb6:	91 09       	sbc	r25, r1
     bb8:	a1 09       	sbc	r26, r1
     bba:	b1 09       	sbc	r27, r1
     bbc:	00 97       	sbiw	r24, 0x00	; 0
     bbe:	a1 05       	cpc	r26, r1
     bc0:	b1 05       	cpc	r27, r1
     bc2:	89 f4       	brne	.+34     	; 0xbe6 <__stack+0x387>
     bc4:	e6 14       	cp	r14, r6
     bc6:	f7 04       	cpc	r15, r7
     bc8:	08 05       	cpc	r16, r8
     bca:	19 05       	cpc	r17, r9
     bcc:	08 f4       	brcc	.+2      	; 0xbd0 <__stack+0x371>
     bce:	f2 c1       	rjmp	.+996    	; 0xfb4 <__stack+0x755>
     bd0:	6d a4       	ldd	r6, Y+45	; 0x2d
     bd2:	7e a4       	ldd	r7, Y+46	; 0x2e
     bd4:	8f a4       	ldd	r8, Y+47	; 0x2f
     bd6:	98 a8       	ldd	r9, Y+48	; 0x30
     bd8:	62 14       	cp	r6, r2
     bda:	73 04       	cpc	r7, r3
     bdc:	84 04       	cpc	r8, r4
     bde:	95 04       	cpc	r9, r5
     be0:	08 f0       	brcs	.+2      	; 0xbe4 <__stack+0x385>
     be2:	e8 c1       	rjmp	.+976    	; 0xfb4 <__stack+0x755>
     be4:	f3 c1       	rjmp	.+998    	; 0xfcc <__stack+0x76d>
     be6:	6e 96       	adiw	r28, 0x1e	; 30
     be8:	8f af       	std	Y+63, r24	; 0x3f
     bea:	6e 97       	sbiw	r28, 0x1e	; 30
     bec:	08 2e       	mov	r0, r24
     bee:	04 c0       	rjmp	.+8      	; 0xbf8 <__stack+0x399>
     bf0:	ee 0c       	add	r14, r14
     bf2:	ff 1c       	adc	r15, r15
     bf4:	00 1f       	adc	r16, r16
     bf6:	11 1f       	adc	r17, r17
     bf8:	0a 94       	dec	r0
     bfa:	d2 f7       	brpl	.-12     	; 0xbf0 <__stack+0x391>
     bfc:	6a 2d       	mov	r22, r10
     bfe:	68 1b       	sub	r22, r24
     c00:	d2 01       	movw	r26, r4
     c02:	c1 01       	movw	r24, r2
     c04:	06 2e       	mov	r0, r22
     c06:	04 c0       	rjmp	.+8      	; 0xc10 <__stack+0x3b1>
     c08:	b6 95       	lsr	r27
     c0a:	a7 95       	ror	r26
     c0c:	97 95       	ror	r25
     c0e:	87 95       	ror	r24
     c10:	0a 94       	dec	r0
     c12:	d2 f7       	brpl	.-12     	; 0xc08 <__stack+0x3a9>
     c14:	5c 01       	movw	r10, r24
     c16:	6d 01       	movw	r12, r26
     c18:	ae 28       	or	r10, r14
     c1a:	bf 28       	or	r11, r15
     c1c:	c0 2a       	or	r12, r16
     c1e:	d1 2a       	or	r13, r17
     c20:	ad a2       	std	Y+37, r10	; 0x25
     c22:	be a2       	std	Y+38, r11	; 0x26
     c24:	cf a2       	std	Y+39, r12	; 0x27
     c26:	d8 a6       	std	Y+40, r13	; 0x28
     c28:	72 01       	movw	r14, r4
     c2a:	61 01       	movw	r12, r2
     c2c:	6e 96       	adiw	r28, 0x1e	; 30
     c2e:	0f ac       	ldd	r0, Y+63	; 0x3f
     c30:	6e 97       	sbiw	r28, 0x1e	; 30
     c32:	04 c0       	rjmp	.+8      	; 0xc3c <__stack+0x3dd>
     c34:	cc 0c       	add	r12, r12
     c36:	dd 1c       	adc	r13, r13
     c38:	ee 1c       	adc	r14, r14
     c3a:	ff 1c       	adc	r15, r15
     c3c:	0a 94       	dec	r0
     c3e:	d2 f7       	brpl	.-12     	; 0xc34 <__stack+0x3d5>
     c40:	c9 a2       	std	Y+33, r12	; 0x21
     c42:	da a2       	std	Y+34, r13	; 0x22
     c44:	eb a2       	std	Y+35, r14	; 0x23
     c46:	fc a2       	std	Y+36, r15	; 0x24
     c48:	64 01       	movw	r12, r8
     c4a:	53 01       	movw	r10, r6
     c4c:	06 2e       	mov	r0, r22
     c4e:	04 c0       	rjmp	.+8      	; 0xc58 <__stack+0x3f9>
     c50:	d6 94       	lsr	r13
     c52:	c7 94       	ror	r12
     c54:	b7 94       	ror	r11
     c56:	a7 94       	ror	r10
     c58:	0a 94       	dec	r0
     c5a:	d2 f7       	brpl	.-12     	; 0xc50 <__stack+0x3f1>
     c5c:	d4 01       	movw	r26, r8
     c5e:	c3 01       	movw	r24, r6
     c60:	6e 96       	adiw	r28, 0x1e	; 30
     c62:	0f ac       	ldd	r0, Y+63	; 0x3f
     c64:	6e 97       	sbiw	r28, 0x1e	; 30
     c66:	04 c0       	rjmp	.+8      	; 0xc70 <__stack+0x411>
     c68:	88 0f       	add	r24, r24
     c6a:	99 1f       	adc	r25, r25
     c6c:	aa 1f       	adc	r26, r26
     c6e:	bb 1f       	adc	r27, r27
     c70:	0a 94       	dec	r0
     c72:	d2 f7       	brpl	.-12     	; 0xc68 <__stack+0x409>
     c74:	ed a4       	ldd	r14, Y+45	; 0x2d
     c76:	fe a4       	ldd	r15, Y+46	; 0x2e
     c78:	0f a5       	ldd	r16, Y+47	; 0x2f
     c7a:	18 a9       	ldd	r17, Y+48	; 0x30
     c7c:	04 c0       	rjmp	.+8      	; 0xc86 <__stack+0x427>
     c7e:	16 95       	lsr	r17
     c80:	07 95       	ror	r16
     c82:	f7 94       	ror	r15
     c84:	e7 94       	ror	r14
     c86:	6a 95       	dec	r22
     c88:	d2 f7       	brpl	.-12     	; 0xc7e <__stack+0x41f>
     c8a:	37 01       	movw	r6, r14
     c8c:	48 01       	movw	r8, r16
     c8e:	68 2a       	or	r6, r24
     c90:	79 2a       	or	r7, r25
     c92:	8a 2a       	or	r8, r26
     c94:	9b 2a       	or	r9, r27
     c96:	6d 8e       	std	Y+29, r6	; 0x1d
     c98:	7e 8e       	std	Y+30, r7	; 0x1e
     c9a:	8f 8e       	std	Y+31, r8	; 0x1f
     c9c:	98 a2       	std	Y+32, r9	; 0x20
     c9e:	ed a0       	ldd	r14, Y+37	; 0x25
     ca0:	fe a0       	ldd	r15, Y+38	; 0x26
     ca2:	0f a1       	ldd	r16, Y+39	; 0x27
     ca4:	18 a5       	ldd	r17, Y+40	; 0x28
     ca6:	38 01       	movw	r6, r16
     ca8:	88 24       	eor	r8, r8
     caa:	99 24       	eor	r9, r9
     cac:	98 01       	movw	r18, r16
     cae:	87 01       	movw	r16, r14
     cb0:	20 70       	andi	r18, 0x00	; 0
     cb2:	30 70       	andi	r19, 0x00	; 0
     cb4:	65 96       	adiw	r28, 0x15	; 21
     cb6:	0c af       	std	Y+60, r16	; 0x3c
     cb8:	1d af       	std	Y+61, r17	; 0x3d
     cba:	2e af       	std	Y+62, r18	; 0x3e
     cbc:	3f af       	std	Y+63, r19	; 0x3f
     cbe:	65 97       	sbiw	r28, 0x15	; 21
     cc0:	c6 01       	movw	r24, r12
     cc2:	b5 01       	movw	r22, r10
     cc4:	a4 01       	movw	r20, r8
     cc6:	93 01       	movw	r18, r6
     cc8:	0e 94 ef 2d 	call	0x5bde	; 0x5bde <__udivmodsi4>
     ccc:	7b 01       	movw	r14, r22
     cce:	8c 01       	movw	r16, r24
     cd0:	c6 01       	movw	r24, r12
     cd2:	b5 01       	movw	r22, r10
     cd4:	a4 01       	movw	r20, r8
     cd6:	93 01       	movw	r18, r6
     cd8:	0e 94 ef 2d 	call	0x5bde	; 0x5bde <__udivmodsi4>
     cdc:	c9 01       	movw	r24, r18
     cde:	da 01       	movw	r26, r20
     ce0:	1c 01       	movw	r2, r24
     ce2:	2d 01       	movw	r4, r26
     ce4:	c2 01       	movw	r24, r4
     ce6:	b1 01       	movw	r22, r2
     ce8:	65 96       	adiw	r28, 0x15	; 21
     cea:	2c ad       	ldd	r18, Y+60	; 0x3c
     cec:	3d ad       	ldd	r19, Y+61	; 0x3d
     cee:	4e ad       	ldd	r20, Y+62	; 0x3e
     cf0:	5f ad       	ldd	r21, Y+63	; 0x3f
     cf2:	65 97       	sbiw	r28, 0x15	; 21
     cf4:	0e 94 b5 2d 	call	0x5b6a	; 0x5b6a <__mulsi3>
     cf8:	9b 01       	movw	r18, r22
     cfa:	ac 01       	movw	r20, r24
     cfc:	87 01       	movw	r16, r14
     cfe:	ff 24       	eor	r15, r15
     d00:	ee 24       	eor	r14, r14
     d02:	ad 8c       	ldd	r10, Y+29	; 0x1d
     d04:	be 8c       	ldd	r11, Y+30	; 0x1e
     d06:	cf 8c       	ldd	r12, Y+31	; 0x1f
     d08:	d8 a0       	ldd	r13, Y+32	; 0x20
     d0a:	c6 01       	movw	r24, r12
     d0c:	aa 27       	eor	r26, r26
     d0e:	bb 27       	eor	r27, r27
     d10:	57 01       	movw	r10, r14
     d12:	68 01       	movw	r12, r16
     d14:	a8 2a       	or	r10, r24
     d16:	b9 2a       	or	r11, r25
     d18:	ca 2a       	or	r12, r26
     d1a:	db 2a       	or	r13, r27
     d1c:	a2 16       	cp	r10, r18
     d1e:	b3 06       	cpc	r11, r19
     d20:	c4 06       	cpc	r12, r20
     d22:	d5 06       	cpc	r13, r21
     d24:	00 f5       	brcc	.+64     	; 0xd66 <__stack+0x507>
     d26:	08 94       	sec
     d28:	21 08       	sbc	r2, r1
     d2a:	31 08       	sbc	r3, r1
     d2c:	41 08       	sbc	r4, r1
     d2e:	51 08       	sbc	r5, r1
     d30:	ed a0       	ldd	r14, Y+37	; 0x25
     d32:	fe a0       	ldd	r15, Y+38	; 0x26
     d34:	0f a1       	ldd	r16, Y+39	; 0x27
     d36:	18 a5       	ldd	r17, Y+40	; 0x28
     d38:	ae 0c       	add	r10, r14
     d3a:	bf 1c       	adc	r11, r15
     d3c:	c0 1e       	adc	r12, r16
     d3e:	d1 1e       	adc	r13, r17
     d40:	ae 14       	cp	r10, r14
     d42:	bf 04       	cpc	r11, r15
     d44:	c0 06       	cpc	r12, r16
     d46:	d1 06       	cpc	r13, r17
     d48:	70 f0       	brcs	.+28     	; 0xd66 <__stack+0x507>
     d4a:	a2 16       	cp	r10, r18
     d4c:	b3 06       	cpc	r11, r19
     d4e:	c4 06       	cpc	r12, r20
     d50:	d5 06       	cpc	r13, r21
     d52:	48 f4       	brcc	.+18     	; 0xd66 <__stack+0x507>
     d54:	08 94       	sec
     d56:	21 08       	sbc	r2, r1
     d58:	31 08       	sbc	r3, r1
     d5a:	41 08       	sbc	r4, r1
     d5c:	51 08       	sbc	r5, r1
     d5e:	ae 0c       	add	r10, r14
     d60:	bf 1c       	adc	r11, r15
     d62:	c0 1e       	adc	r12, r16
     d64:	d1 1e       	adc	r13, r17
     d66:	a2 1a       	sub	r10, r18
     d68:	b3 0a       	sbc	r11, r19
     d6a:	c4 0a       	sbc	r12, r20
     d6c:	d5 0a       	sbc	r13, r21
     d6e:	c6 01       	movw	r24, r12
     d70:	b5 01       	movw	r22, r10
     d72:	a4 01       	movw	r20, r8
     d74:	93 01       	movw	r18, r6
     d76:	0e 94 ef 2d 	call	0x5bde	; 0x5bde <__udivmodsi4>
     d7a:	7b 01       	movw	r14, r22
     d7c:	8c 01       	movw	r16, r24
     d7e:	c6 01       	movw	r24, r12
     d80:	b5 01       	movw	r22, r10
     d82:	a4 01       	movw	r20, r8
     d84:	93 01       	movw	r18, r6
     d86:	0e 94 ef 2d 	call	0x5bde	; 0x5bde <__udivmodsi4>
     d8a:	c9 01       	movw	r24, r18
     d8c:	da 01       	movw	r26, r20
     d8e:	3c 01       	movw	r6, r24
     d90:	4d 01       	movw	r8, r26
     d92:	c4 01       	movw	r24, r8
     d94:	b3 01       	movw	r22, r6
     d96:	65 96       	adiw	r28, 0x15	; 21
     d98:	2c ad       	ldd	r18, Y+60	; 0x3c
     d9a:	3d ad       	ldd	r19, Y+61	; 0x3d
     d9c:	4e ad       	ldd	r20, Y+62	; 0x3e
     d9e:	5f ad       	ldd	r21, Y+63	; 0x3f
     da0:	65 97       	sbiw	r28, 0x15	; 21
     da2:	0e 94 b5 2d 	call	0x5b6a	; 0x5b6a <__mulsi3>
     da6:	9b 01       	movw	r18, r22
     da8:	ac 01       	movw	r20, r24
     daa:	87 01       	movw	r16, r14
     dac:	ff 24       	eor	r15, r15
     dae:	ee 24       	eor	r14, r14
     db0:	8d 8d       	ldd	r24, Y+29	; 0x1d
     db2:	9e 8d       	ldd	r25, Y+30	; 0x1e
     db4:	af 8d       	ldd	r26, Y+31	; 0x1f
     db6:	b8 a1       	ldd	r27, Y+32	; 0x20
     db8:	a0 70       	andi	r26, 0x00	; 0
     dba:	b0 70       	andi	r27, 0x00	; 0
     dbc:	57 01       	movw	r10, r14
     dbe:	68 01       	movw	r12, r16
     dc0:	a8 2a       	or	r10, r24
     dc2:	b9 2a       	or	r11, r25
     dc4:	ca 2a       	or	r12, r26
     dc6:	db 2a       	or	r13, r27
     dc8:	a2 16       	cp	r10, r18
     dca:	b3 06       	cpc	r11, r19
     dcc:	c4 06       	cpc	r12, r20
     dce:	d5 06       	cpc	r13, r21
     dd0:	00 f5       	brcc	.+64     	; 0xe12 <__stack+0x5b3>
     dd2:	08 94       	sec
     dd4:	61 08       	sbc	r6, r1
     dd6:	71 08       	sbc	r7, r1
     dd8:	81 08       	sbc	r8, r1
     dda:	91 08       	sbc	r9, r1
     ddc:	6d a1       	ldd	r22, Y+37	; 0x25
     dde:	7e a1       	ldd	r23, Y+38	; 0x26
     de0:	8f a1       	ldd	r24, Y+39	; 0x27
     de2:	98 a5       	ldd	r25, Y+40	; 0x28
     de4:	a6 0e       	add	r10, r22
     de6:	b7 1e       	adc	r11, r23
     de8:	c8 1e       	adc	r12, r24
     dea:	d9 1e       	adc	r13, r25
     dec:	a6 16       	cp	r10, r22
     dee:	b7 06       	cpc	r11, r23
     df0:	c8 06       	cpc	r12, r24
     df2:	d9 06       	cpc	r13, r25
     df4:	70 f0       	brcs	.+28     	; 0xe12 <__stack+0x5b3>
     df6:	a2 16       	cp	r10, r18
     df8:	b3 06       	cpc	r11, r19
     dfa:	c4 06       	cpc	r12, r20
     dfc:	d5 06       	cpc	r13, r21
     dfe:	48 f4       	brcc	.+18     	; 0xe12 <__stack+0x5b3>
     e00:	08 94       	sec
     e02:	61 08       	sbc	r6, r1
     e04:	71 08       	sbc	r7, r1
     e06:	81 08       	sbc	r8, r1
     e08:	91 08       	sbc	r9, r1
     e0a:	a6 0e       	add	r10, r22
     e0c:	b7 1e       	adc	r11, r23
     e0e:	c8 1e       	adc	r12, r24
     e10:	d9 1e       	adc	r13, r25
     e12:	d6 01       	movw	r26, r12
     e14:	c5 01       	movw	r24, r10
     e16:	82 1b       	sub	r24, r18
     e18:	93 0b       	sbc	r25, r19
     e1a:	a4 0b       	sbc	r26, r20
     e1c:	b5 0b       	sbc	r27, r21
     e1e:	89 8f       	std	Y+25, r24	; 0x19
     e20:	9a 8f       	std	Y+26, r25	; 0x1a
     e22:	ab 8f       	std	Y+27, r26	; 0x1b
     e24:	bc 8f       	std	Y+28, r27	; 0x1c
     e26:	d1 01       	movw	r26, r2
     e28:	99 27       	eor	r25, r25
     e2a:	88 27       	eor	r24, r24
     e2c:	64 01       	movw	r12, r8
     e2e:	53 01       	movw	r10, r6
     e30:	a8 2a       	or	r10, r24
     e32:	b9 2a       	or	r11, r25
     e34:	ca 2a       	or	r12, r26
     e36:	db 2a       	or	r13, r27
     e38:	a9 aa       	std	Y+49, r10	; 0x31
     e3a:	ba aa       	std	Y+50, r11	; 0x32
     e3c:	cb aa       	std	Y+51, r12	; 0x33
     e3e:	dc aa       	std	Y+52, r13	; 0x34
     e40:	86 01       	movw	r16, r12
     e42:	75 01       	movw	r14, r10
     e44:	2f ef       	ldi	r18, 0xFF	; 255
     e46:	3f ef       	ldi	r19, 0xFF	; 255
     e48:	40 e0       	ldi	r20, 0x00	; 0
     e4a:	50 e0       	ldi	r21, 0x00	; 0
     e4c:	e2 22       	and	r14, r18
     e4e:	f3 22       	and	r15, r19
     e50:	04 23       	and	r16, r20
     e52:	15 23       	and	r17, r21
     e54:	a6 01       	movw	r20, r12
     e56:	66 27       	eor	r22, r22
     e58:	77 27       	eor	r23, r23
     e5a:	6d 96       	adiw	r28, 0x1d	; 29
     e5c:	4c af       	std	Y+60, r20	; 0x3c
     e5e:	5d af       	std	Y+61, r21	; 0x3d
     e60:	6e af       	std	Y+62, r22	; 0x3e
     e62:	7f af       	std	Y+63, r23	; 0x3f
     e64:	6d 97       	sbiw	r28, 0x1d	; 29
     e66:	a9 a0       	ldd	r10, Y+33	; 0x21
     e68:	ba a0       	ldd	r11, Y+34	; 0x22
     e6a:	cb a0       	ldd	r12, Y+35	; 0x23
     e6c:	dc a0       	ldd	r13, Y+36	; 0x24
     e6e:	6f ef       	ldi	r22, 0xFF	; 255
     e70:	7f ef       	ldi	r23, 0xFF	; 255
     e72:	80 e0       	ldi	r24, 0x00	; 0
     e74:	90 e0       	ldi	r25, 0x00	; 0
     e76:	a6 22       	and	r10, r22
     e78:	b7 22       	and	r11, r23
     e7a:	c8 22       	and	r12, r24
     e7c:	d9 22       	and	r13, r25
     e7e:	89 a1       	ldd	r24, Y+33	; 0x21
     e80:	9a a1       	ldd	r25, Y+34	; 0x22
     e82:	ab a1       	ldd	r26, Y+35	; 0x23
     e84:	bc a1       	ldd	r27, Y+36	; 0x24
     e86:	1d 01       	movw	r2, r26
     e88:	44 24       	eor	r4, r4
     e8a:	55 24       	eor	r5, r5
     e8c:	c8 01       	movw	r24, r16
     e8e:	b7 01       	movw	r22, r14
     e90:	a6 01       	movw	r20, r12
     e92:	95 01       	movw	r18, r10
     e94:	0e 94 b5 2d 	call	0x5b6a	; 0x5b6a <__mulsi3>
     e98:	69 96       	adiw	r28, 0x19	; 25
     e9a:	6c af       	std	Y+60, r22	; 0x3c
     e9c:	7d af       	std	Y+61, r23	; 0x3d
     e9e:	8e af       	std	Y+62, r24	; 0x3e
     ea0:	9f af       	std	Y+63, r25	; 0x3f
     ea2:	69 97       	sbiw	r28, 0x19	; 25
     ea4:	c8 01       	movw	r24, r16
     ea6:	b7 01       	movw	r22, r14
     ea8:	a2 01       	movw	r20, r4
     eaa:	91 01       	movw	r18, r2
     eac:	0e 94 b5 2d 	call	0x5b6a	; 0x5b6a <__mulsi3>
     eb0:	3b 01       	movw	r6, r22
     eb2:	4c 01       	movw	r8, r24
     eb4:	6d 96       	adiw	r28, 0x1d	; 29
     eb6:	6c ad       	ldd	r22, Y+60	; 0x3c
     eb8:	7d ad       	ldd	r23, Y+61	; 0x3d
     eba:	8e ad       	ldd	r24, Y+62	; 0x3e
     ebc:	9f ad       	ldd	r25, Y+63	; 0x3f
     ebe:	6d 97       	sbiw	r28, 0x1d	; 29
     ec0:	a6 01       	movw	r20, r12
     ec2:	95 01       	movw	r18, r10
     ec4:	0e 94 b5 2d 	call	0x5b6a	; 0x5b6a <__mulsi3>
     ec8:	7b 01       	movw	r14, r22
     eca:	8c 01       	movw	r16, r24
     ecc:	6d 96       	adiw	r28, 0x1d	; 29
     ece:	6c ad       	ldd	r22, Y+60	; 0x3c
     ed0:	7d ad       	ldd	r23, Y+61	; 0x3d
     ed2:	8e ad       	ldd	r24, Y+62	; 0x3e
     ed4:	9f ad       	ldd	r25, Y+63	; 0x3f
     ed6:	6d 97       	sbiw	r28, 0x1d	; 29
     ed8:	a2 01       	movw	r20, r4
     eda:	91 01       	movw	r18, r2
     edc:	0e 94 b5 2d 	call	0x5b6a	; 0x5b6a <__mulsi3>
     ee0:	5b 01       	movw	r10, r22
     ee2:	6c 01       	movw	r12, r24
     ee4:	a8 01       	movw	r20, r16
     ee6:	97 01       	movw	r18, r14
     ee8:	26 0d       	add	r18, r6
     eea:	37 1d       	adc	r19, r7
     eec:	48 1d       	adc	r20, r8
     eee:	59 1d       	adc	r21, r9
     ef0:	69 96       	adiw	r28, 0x19	; 25
     ef2:	6c ac       	ldd	r6, Y+60	; 0x3c
     ef4:	7d ac       	ldd	r7, Y+61	; 0x3d
     ef6:	8e ac       	ldd	r8, Y+62	; 0x3e
     ef8:	9f ac       	ldd	r9, Y+63	; 0x3f
     efa:	69 97       	sbiw	r28, 0x19	; 25
     efc:	c4 01       	movw	r24, r8
     efe:	aa 27       	eor	r26, r26
     f00:	bb 27       	eor	r27, r27
     f02:	28 0f       	add	r18, r24
     f04:	39 1f       	adc	r19, r25
     f06:	4a 1f       	adc	r20, r26
     f08:	5b 1f       	adc	r21, r27
     f0a:	2e 15       	cp	r18, r14
     f0c:	3f 05       	cpc	r19, r15
     f0e:	40 07       	cpc	r20, r16
     f10:	51 07       	cpc	r21, r17
     f12:	48 f4       	brcc	.+18     	; 0xf26 <__stack+0x6c7>
     f14:	e1 2c       	mov	r14, r1
     f16:	f1 2c       	mov	r15, r1
     f18:	61 e0       	ldi	r22, 0x01	; 1
     f1a:	06 2f       	mov	r16, r22
     f1c:	11 2d       	mov	r17, r1
     f1e:	ae 0c       	add	r10, r14
     f20:	bf 1c       	adc	r11, r15
     f22:	c0 1e       	adc	r12, r16
     f24:	d1 1e       	adc	r13, r17
     f26:	ca 01       	movw	r24, r20
     f28:	aa 27       	eor	r26, r26
     f2a:	bb 27       	eor	r27, r27
     f2c:	bc 01       	movw	r22, r24
     f2e:	cd 01       	movw	r24, r26
     f30:	6a 0d       	add	r22, r10
     f32:	7b 1d       	adc	r23, r11
     f34:	8c 1d       	adc	r24, r12
     f36:	9d 1d       	adc	r25, r13
     f38:	69 8c       	ldd	r6, Y+25	; 0x19
     f3a:	7a 8c       	ldd	r7, Y+26	; 0x1a
     f3c:	8b 8c       	ldd	r8, Y+27	; 0x1b
     f3e:	9c 8c       	ldd	r9, Y+28	; 0x1c
     f40:	66 16       	cp	r6, r22
     f42:	77 06       	cpc	r7, r23
     f44:	88 06       	cpc	r8, r24
     f46:	99 06       	cpc	r9, r25
     f48:	40 f1       	brcs	.+80     	; 0xf9a <__stack+0x73b>
     f4a:	66 15       	cp	r22, r6
     f4c:	77 05       	cpc	r23, r7
     f4e:	88 05       	cpc	r24, r8
     f50:	99 05       	cpc	r25, r9
     f52:	09 f0       	breq	.+2      	; 0xf56 <__stack+0x6f7>
     f54:	43 c0       	rjmp	.+134    	; 0xfdc <__stack+0x77d>
     f56:	d9 01       	movw	r26, r18
     f58:	99 27       	eor	r25, r25
     f5a:	88 27       	eor	r24, r24
     f5c:	69 96       	adiw	r28, 0x19	; 25
     f5e:	2c ad       	ldd	r18, Y+60	; 0x3c
     f60:	3d ad       	ldd	r19, Y+61	; 0x3d
     f62:	4e ad       	ldd	r20, Y+62	; 0x3e
     f64:	5f ad       	ldd	r21, Y+63	; 0x3f
     f66:	69 97       	sbiw	r28, 0x19	; 25
     f68:	40 70       	andi	r20, 0x00	; 0
     f6a:	50 70       	andi	r21, 0x00	; 0
     f6c:	82 0f       	add	r24, r18
     f6e:	93 1f       	adc	r25, r19
     f70:	a4 1f       	adc	r26, r20
     f72:	b5 1f       	adc	r27, r21
     f74:	2d a5       	ldd	r18, Y+45	; 0x2d
     f76:	3e a5       	ldd	r19, Y+46	; 0x2e
     f78:	4f a5       	ldd	r20, Y+47	; 0x2f
     f7a:	58 a9       	ldd	r21, Y+48	; 0x30
     f7c:	6e 96       	adiw	r28, 0x1e	; 30
     f7e:	0f ac       	ldd	r0, Y+63	; 0x3f
     f80:	6e 97       	sbiw	r28, 0x1e	; 30
     f82:	04 c0       	rjmp	.+8      	; 0xf8c <__stack+0x72d>
     f84:	22 0f       	add	r18, r18
     f86:	33 1f       	adc	r19, r19
     f88:	44 1f       	adc	r20, r20
     f8a:	55 1f       	adc	r21, r21
     f8c:	0a 94       	dec	r0
     f8e:	d2 f7       	brpl	.-12     	; 0xf84 <__stack+0x725>
     f90:	28 17       	cp	r18, r24
     f92:	39 07       	cpc	r19, r25
     f94:	4a 07       	cpc	r20, r26
     f96:	5b 07       	cpc	r21, r27
     f98:	08 f5       	brcc	.+66     	; 0xfdc <__stack+0x77d>
     f9a:	09 a9       	ldd	r16, Y+49	; 0x31
     f9c:	1a a9       	ldd	r17, Y+50	; 0x32
     f9e:	2b a9       	ldd	r18, Y+51	; 0x33
     fa0:	3c a9       	ldd	r19, Y+52	; 0x34
     fa2:	01 50       	subi	r16, 0x01	; 1
     fa4:	10 40       	sbci	r17, 0x00	; 0
     fa6:	20 40       	sbci	r18, 0x00	; 0
     fa8:	30 40       	sbci	r19, 0x00	; 0
     faa:	09 ab       	std	Y+49, r16	; 0x31
     fac:	1a ab       	std	Y+50, r17	; 0x32
     fae:	2b ab       	std	Y+51, r18	; 0x33
     fb0:	3c ab       	std	Y+52, r19	; 0x34
     fb2:	14 c0       	rjmp	.+40     	; 0xfdc <__stack+0x77d>
     fb4:	66 24       	eor	r6, r6
     fb6:	77 24       	eor	r7, r7
     fb8:	43 01       	movw	r8, r6
     fba:	21 e0       	ldi	r18, 0x01	; 1
     fbc:	30 e0       	ldi	r19, 0x00	; 0
     fbe:	40 e0       	ldi	r20, 0x00	; 0
     fc0:	50 e0       	ldi	r21, 0x00	; 0
     fc2:	29 ab       	std	Y+49, r18	; 0x31
     fc4:	3a ab       	std	Y+50, r19	; 0x32
     fc6:	4b ab       	std	Y+51, r20	; 0x33
     fc8:	5c ab       	std	Y+52, r21	; 0x34
     fca:	0b c0       	rjmp	.+22     	; 0xfe2 <__stack+0x783>
     fcc:	66 24       	eor	r6, r6
     fce:	77 24       	eor	r7, r7
     fd0:	43 01       	movw	r8, r6
     fd2:	19 aa       	std	Y+49, r1	; 0x31
     fd4:	1a aa       	std	Y+50, r1	; 0x32
     fd6:	1b aa       	std	Y+51, r1	; 0x33
     fd8:	1c aa       	std	Y+52, r1	; 0x34
     fda:	03 c0       	rjmp	.+6      	; 0xfe2 <__stack+0x783>
     fdc:	66 24       	eor	r6, r6
     fde:	77 24       	eor	r7, r7
     fe0:	43 01       	movw	r8, r6
     fe2:	fe 01       	movw	r30, r28
     fe4:	71 96       	adiw	r30, 0x11	; 17
     fe6:	88 e0       	ldi	r24, 0x08	; 8
     fe8:	df 01       	movw	r26, r30
     fea:	1d 92       	st	X+, r1
     fec:	8a 95       	dec	r24
     fee:	e9 f7       	brne	.-6      	; 0xfea <__stack+0x78b>
     ff0:	a9 a8       	ldd	r10, Y+49	; 0x31
     ff2:	ba a8       	ldd	r11, Y+50	; 0x32
     ff4:	cb a8       	ldd	r12, Y+51	; 0x33
     ff6:	dc a8       	ldd	r13, Y+52	; 0x34
     ff8:	a9 8a       	std	Y+17, r10	; 0x11
     ffa:	ba 8a       	std	Y+18, r11	; 0x12
     ffc:	cb 8a       	std	Y+19, r12	; 0x13
     ffe:	dc 8a       	std	Y+20, r13	; 0x14
    1000:	6d 8a       	std	Y+21, r6	; 0x15
    1002:	7e 8a       	std	Y+22, r7	; 0x16
    1004:	8f 8a       	std	Y+23, r8	; 0x17
    1006:	98 8e       	std	Y+24, r9	; 0x18
    1008:	29 a9       	ldd	r18, Y+49	; 0x31
    100a:	3a 89       	ldd	r19, Y+18	; 0x12
    100c:	4b 89       	ldd	r20, Y+19	; 0x13
    100e:	5c 89       	ldd	r21, Y+20	; 0x14
    1010:	66 2d       	mov	r22, r6
    1012:	7e 89       	ldd	r23, Y+22	; 0x16
    1014:	8f 89       	ldd	r24, Y+23	; 0x17
    1016:	98 8d       	ldd	r25, Y+24	; 0x18
    1018:	c2 5a       	subi	r28, 0xA2	; 162
    101a:	df 4f       	sbci	r29, 0xFF	; 255
    101c:	e2 e1       	ldi	r30, 0x12	; 18
    101e:	0c 94 2d 2e 	jmp	0x5c5a	; 0x5c5a <__epilogue_restores__>

00001022 <__umoddi3>:
    1022:	ab e5       	ldi	r26, 0x5B	; 91
    1024:	b0 e0       	ldi	r27, 0x00	; 0
    1026:	e7 e1       	ldi	r30, 0x17	; 23
    1028:	f8 e0       	ldi	r31, 0x08	; 8
    102a:	0c 94 11 2e 	jmp	0x5c22	; 0x5c22 <__prologue_saves__>
    102e:	a8 e0       	ldi	r26, 0x08	; 8
    1030:	4e 01       	movw	r8, r28
    1032:	08 94       	sec
    1034:	81 1c       	adc	r8, r1
    1036:	91 1c       	adc	r9, r1
    1038:	f4 01       	movw	r30, r8
    103a:	6a 2e       	mov	r6, r26
    103c:	11 92       	st	Z+, r1
    103e:	6a 94       	dec	r6
    1040:	e9 f7       	brne	.-6      	; 0x103c <__umoddi3+0x1a>
    1042:	29 83       	std	Y+1, r18	; 0x01
    1044:	3a 83       	std	Y+2, r19	; 0x02
    1046:	4b 83       	std	Y+3, r20	; 0x03
    1048:	5c 83       	std	Y+4, r21	; 0x04
    104a:	6d 83       	std	Y+5, r22	; 0x05
    104c:	7e 83       	std	Y+6, r23	; 0x06
    104e:	8f 83       	std	Y+7, r24	; 0x07
    1050:	98 87       	std	Y+8, r25	; 0x08
    1052:	ce 01       	movw	r24, r28
    1054:	09 96       	adiw	r24, 0x09	; 9
    1056:	fc 01       	movw	r30, r24
    1058:	11 92       	st	Z+, r1
    105a:	aa 95       	dec	r26
    105c:	e9 f7       	brne	.-6      	; 0x1058 <__umoddi3+0x36>
    105e:	a9 86       	std	Y+9, r10	; 0x09
    1060:	ba 86       	std	Y+10, r11	; 0x0a
    1062:	cb 86       	std	Y+11, r12	; 0x0b
    1064:	dc 86       	std	Y+12, r13	; 0x0c
    1066:	ed 86       	std	Y+13, r14	; 0x0d
    1068:	fe 86       	std	Y+14, r15	; 0x0e
    106a:	0f 87       	std	Y+15, r16	; 0x0f
    106c:	18 8b       	std	Y+16, r17	; 0x10
    106e:	29 84       	ldd	r2, Y+9	; 0x09
    1070:	3a 84       	ldd	r3, Y+10	; 0x0a
    1072:	4b 84       	ldd	r4, Y+11	; 0x0b
    1074:	5c 84       	ldd	r5, Y+12	; 0x0c
    1076:	ad 84       	ldd	r10, Y+13	; 0x0d
    1078:	be 84       	ldd	r11, Y+14	; 0x0e
    107a:	cf 84       	ldd	r12, Y+15	; 0x0f
    107c:	d8 88       	ldd	r13, Y+16	; 0x10
    107e:	29 81       	ldd	r18, Y+1	; 0x01
    1080:	3a 81       	ldd	r19, Y+2	; 0x02
    1082:	4b 81       	ldd	r20, Y+3	; 0x03
    1084:	5c 81       	ldd	r21, Y+4	; 0x04
    1086:	69 96       	adiw	r28, 0x19	; 25
    1088:	2f af       	std	Y+63, r18	; 0x3f
    108a:	69 97       	sbiw	r28, 0x19	; 25
    108c:	6a 96       	adiw	r28, 0x1a	; 26
    108e:	3f af       	std	Y+63, r19	; 0x3f
    1090:	6a 97       	sbiw	r28, 0x1a	; 26
    1092:	6b 96       	adiw	r28, 0x1b	; 27
    1094:	4f af       	std	Y+63, r20	; 0x3f
    1096:	6b 97       	sbiw	r28, 0x1b	; 27
    1098:	6c 96       	adiw	r28, 0x1c	; 28
    109a:	5f af       	std	Y+63, r21	; 0x3f
    109c:	6c 97       	sbiw	r28, 0x1c	; 28
    109e:	6c 96       	adiw	r28, 0x1c	; 28
    10a0:	6c ac       	ldd	r6, Y+60	; 0x3c
    10a2:	7d ac       	ldd	r7, Y+61	; 0x3d
    10a4:	8e ac       	ldd	r8, Y+62	; 0x3e
    10a6:	9f ac       	ldd	r9, Y+63	; 0x3f
    10a8:	6c 97       	sbiw	r28, 0x1c	; 28
    10aa:	69 aa       	std	Y+49, r6	; 0x31
    10ac:	7a aa       	std	Y+50, r7	; 0x32
    10ae:	8b aa       	std	Y+51, r8	; 0x33
    10b0:	9c aa       	std	Y+52, r9	; 0x34
    10b2:	6d 81       	ldd	r22, Y+5	; 0x05
    10b4:	7e 81       	ldd	r23, Y+6	; 0x06
    10b6:	8f 81       	ldd	r24, Y+7	; 0x07
    10b8:	98 85       	ldd	r25, Y+8	; 0x08
    10ba:	3b 01       	movw	r6, r22
    10bc:	4c 01       	movw	r8, r24
    10be:	6d aa       	std	Y+53, r6	; 0x35
    10c0:	7e aa       	std	Y+54, r7	; 0x36
    10c2:	8f aa       	std	Y+55, r8	; 0x37
    10c4:	98 ae       	std	Y+56, r9	; 0x38
    10c6:	a1 14       	cp	r10, r1
    10c8:	b1 04       	cpc	r11, r1
    10ca:	c1 04       	cpc	r12, r1
    10cc:	d1 04       	cpc	r13, r1
    10ce:	09 f0       	breq	.+2      	; 0x10d2 <__umoddi3+0xb0>
    10d0:	04 c3       	rjmp	.+1544   	; 0x16da <__umoddi3+0x6b8>
    10d2:	62 14       	cp	r6, r2
    10d4:	73 04       	cpc	r7, r3
    10d6:	84 04       	cpc	r8, r4
    10d8:	95 04       	cpc	r9, r5
    10da:	08 f0       	brcs	.+2      	; 0x10de <__umoddi3+0xbc>
    10dc:	00 c1       	rjmp	.+512    	; 0x12de <__umoddi3+0x2bc>
    10de:	00 e0       	ldi	r16, 0x00	; 0
    10e0:	20 16       	cp	r2, r16
    10e2:	00 e0       	ldi	r16, 0x00	; 0
    10e4:	30 06       	cpc	r3, r16
    10e6:	01 e0       	ldi	r16, 0x01	; 1
    10e8:	40 06       	cpc	r4, r16
    10ea:	00 e0       	ldi	r16, 0x00	; 0
    10ec:	50 06       	cpc	r5, r16
    10ee:	88 f4       	brcc	.+34     	; 0x1112 <__umoddi3+0xf0>
    10f0:	1f ef       	ldi	r17, 0xFF	; 255
    10f2:	21 16       	cp	r2, r17
    10f4:	31 04       	cpc	r3, r1
    10f6:	41 04       	cpc	r4, r1
    10f8:	51 04       	cpc	r5, r1
    10fa:	39 f0       	breq	.+14     	; 0x110a <__umoddi3+0xe8>
    10fc:	30 f0       	brcs	.+12     	; 0x110a <__umoddi3+0xe8>
    10fe:	88 e0       	ldi	r24, 0x08	; 8
    1100:	e8 2e       	mov	r14, r24
    1102:	f1 2c       	mov	r15, r1
    1104:	01 2d       	mov	r16, r1
    1106:	11 2d       	mov	r17, r1
    1108:	18 c0       	rjmp	.+48     	; 0x113a <__umoddi3+0x118>
    110a:	ee 24       	eor	r14, r14
    110c:	ff 24       	eor	r15, r15
    110e:	87 01       	movw	r16, r14
    1110:	14 c0       	rjmp	.+40     	; 0x113a <__umoddi3+0x118>
    1112:	40 e0       	ldi	r20, 0x00	; 0
    1114:	24 16       	cp	r2, r20
    1116:	40 e0       	ldi	r20, 0x00	; 0
    1118:	34 06       	cpc	r3, r20
    111a:	40 e0       	ldi	r20, 0x00	; 0
    111c:	44 06       	cpc	r4, r20
    111e:	41 e0       	ldi	r20, 0x01	; 1
    1120:	54 06       	cpc	r5, r20
    1122:	30 f0       	brcs	.+12     	; 0x1130 <__umoddi3+0x10e>
    1124:	b8 e1       	ldi	r27, 0x18	; 24
    1126:	eb 2e       	mov	r14, r27
    1128:	f1 2c       	mov	r15, r1
    112a:	01 2d       	mov	r16, r1
    112c:	11 2d       	mov	r17, r1
    112e:	05 c0       	rjmp	.+10     	; 0x113a <__umoddi3+0x118>
    1130:	a0 e1       	ldi	r26, 0x10	; 16
    1132:	ea 2e       	mov	r14, r26
    1134:	f1 2c       	mov	r15, r1
    1136:	01 2d       	mov	r16, r1
    1138:	11 2d       	mov	r17, r1
    113a:	d2 01       	movw	r26, r4
    113c:	c1 01       	movw	r24, r2
    113e:	0e 2c       	mov	r0, r14
    1140:	04 c0       	rjmp	.+8      	; 0x114a <__umoddi3+0x128>
    1142:	b6 95       	lsr	r27
    1144:	a7 95       	ror	r26
    1146:	97 95       	ror	r25
    1148:	87 95       	ror	r24
    114a:	0a 94       	dec	r0
    114c:	d2 f7       	brpl	.-12     	; 0x1142 <__umoddi3+0x120>
    114e:	88 59       	subi	r24, 0x98	; 152
    1150:	9f 4f       	sbci	r25, 0xFF	; 255
    1152:	dc 01       	movw	r26, r24
    1154:	2c 91       	ld	r18, X
    1156:	80 e2       	ldi	r24, 0x20	; 32
    1158:	90 e0       	ldi	r25, 0x00	; 0
    115a:	a0 e0       	ldi	r26, 0x00	; 0
    115c:	b0 e0       	ldi	r27, 0x00	; 0
    115e:	8e 19       	sub	r24, r14
    1160:	9f 09       	sbc	r25, r15
    1162:	a0 0b       	sbc	r26, r16
    1164:	b1 0b       	sbc	r27, r17
    1166:	5c 01       	movw	r10, r24
    1168:	6d 01       	movw	r12, r26
    116a:	a2 1a       	sub	r10, r18
    116c:	b1 08       	sbc	r11, r1
    116e:	c1 08       	sbc	r12, r1
    1170:	d1 08       	sbc	r13, r1
    1172:	a9 ae       	std	Y+57, r10	; 0x39
    1174:	ba ae       	std	Y+58, r11	; 0x3a
    1176:	cb ae       	std	Y+59, r12	; 0x3b
    1178:	dc ae       	std	Y+60, r13	; 0x3c
    117a:	a1 14       	cp	r10, r1
    117c:	b1 04       	cpc	r11, r1
    117e:	c1 04       	cpc	r12, r1
    1180:	d1 04       	cpc	r13, r1
    1182:	09 f4       	brne	.+2      	; 0x1186 <__umoddi3+0x164>
    1184:	3f c0       	rjmp	.+126    	; 0x1204 <__umoddi3+0x1e2>
    1186:	69 ad       	ldd	r22, Y+57	; 0x39
    1188:	06 2e       	mov	r0, r22
    118a:	04 c0       	rjmp	.+8      	; 0x1194 <__umoddi3+0x172>
    118c:	22 0c       	add	r2, r2
    118e:	33 1c       	adc	r3, r3
    1190:	44 1c       	adc	r4, r4
    1192:	55 1c       	adc	r5, r5
    1194:	0a 94       	dec	r0
    1196:	d2 f7       	brpl	.-12     	; 0x118c <__umoddi3+0x16a>
    1198:	a4 01       	movw	r20, r8
    119a:	93 01       	movw	r18, r6
    119c:	06 2e       	mov	r0, r22
    119e:	04 c0       	rjmp	.+8      	; 0x11a8 <__umoddi3+0x186>
    11a0:	22 0f       	add	r18, r18
    11a2:	33 1f       	adc	r19, r19
    11a4:	44 1f       	adc	r20, r20
    11a6:	55 1f       	adc	r21, r21
    11a8:	0a 94       	dec	r0
    11aa:	d2 f7       	brpl	.-12     	; 0x11a0 <__umoddi3+0x17e>
    11ac:	80 e2       	ldi	r24, 0x20	; 32
    11ae:	90 e0       	ldi	r25, 0x00	; 0
    11b0:	8a 19       	sub	r24, r10
    11b2:	9b 09       	sbc	r25, r11
    11b4:	6c 96       	adiw	r28, 0x1c	; 28
    11b6:	cc ac       	ldd	r12, Y+60	; 0x3c
    11b8:	dd ac       	ldd	r13, Y+61	; 0x3d
    11ba:	ee ac       	ldd	r14, Y+62	; 0x3e
    11bc:	ff ac       	ldd	r15, Y+63	; 0x3f
    11be:	6c 97       	sbiw	r28, 0x1c	; 28
    11c0:	04 c0       	rjmp	.+8      	; 0x11ca <__umoddi3+0x1a8>
    11c2:	f6 94       	lsr	r15
    11c4:	e7 94       	ror	r14
    11c6:	d7 94       	ror	r13
    11c8:	c7 94       	ror	r12
    11ca:	8a 95       	dec	r24
    11cc:	d2 f7       	brpl	.-12     	; 0x11c2 <__umoddi3+0x1a0>
    11ce:	87 01       	movw	r16, r14
    11d0:	76 01       	movw	r14, r12
    11d2:	e2 2a       	or	r14, r18
    11d4:	f3 2a       	or	r15, r19
    11d6:	04 2b       	or	r16, r20
    11d8:	15 2b       	or	r17, r21
    11da:	ed aa       	std	Y+53, r14	; 0x35
    11dc:	fe aa       	std	Y+54, r15	; 0x36
    11de:	0f ab       	std	Y+55, r16	; 0x37
    11e0:	18 af       	std	Y+56, r17	; 0x38
    11e2:	6c 96       	adiw	r28, 0x1c	; 28
    11e4:	8c ad       	ldd	r24, Y+60	; 0x3c
    11e6:	9d ad       	ldd	r25, Y+61	; 0x3d
    11e8:	ae ad       	ldd	r26, Y+62	; 0x3e
    11ea:	bf ad       	ldd	r27, Y+63	; 0x3f
    11ec:	6c 97       	sbiw	r28, 0x1c	; 28
    11ee:	04 c0       	rjmp	.+8      	; 0x11f8 <__umoddi3+0x1d6>
    11f0:	88 0f       	add	r24, r24
    11f2:	99 1f       	adc	r25, r25
    11f4:	aa 1f       	adc	r26, r26
    11f6:	bb 1f       	adc	r27, r27
    11f8:	6a 95       	dec	r22
    11fa:	d2 f7       	brpl	.-12     	; 0x11f0 <__umoddi3+0x1ce>
    11fc:	89 ab       	std	Y+49, r24	; 0x31
    11fe:	9a ab       	std	Y+50, r25	; 0x32
    1200:	ab ab       	std	Y+51, r26	; 0x33
    1202:	bc ab       	std	Y+52, r27	; 0x34
    1204:	32 01       	movw	r6, r4
    1206:	88 24       	eor	r8, r8
    1208:	99 24       	eor	r9, r9
    120a:	b2 01       	movw	r22, r4
    120c:	a1 01       	movw	r20, r2
    120e:	60 70       	andi	r22, 0x00	; 0
    1210:	70 70       	andi	r23, 0x00	; 0
    1212:	21 96       	adiw	r28, 0x01	; 1
    1214:	4c af       	std	Y+60, r20	; 0x3c
    1216:	5d af       	std	Y+61, r21	; 0x3d
    1218:	6e af       	std	Y+62, r22	; 0x3e
    121a:	7f af       	std	Y+63, r23	; 0x3f
    121c:	21 97       	sbiw	r28, 0x01	; 1
    121e:	6d a9       	ldd	r22, Y+53	; 0x35
    1220:	7e a9       	ldd	r23, Y+54	; 0x36
    1222:	8f a9       	ldd	r24, Y+55	; 0x37
    1224:	98 ad       	ldd	r25, Y+56	; 0x38
    1226:	a4 01       	movw	r20, r8
    1228:	93 01       	movw	r18, r6
    122a:	0e 94 ef 2d 	call	0x5bde	; 0x5bde <__udivmodsi4>
    122e:	7b 01       	movw	r14, r22
    1230:	8c 01       	movw	r16, r24
    1232:	6d a9       	ldd	r22, Y+53	; 0x35
    1234:	7e a9       	ldd	r23, Y+54	; 0x36
    1236:	8f a9       	ldd	r24, Y+55	; 0x37
    1238:	98 ad       	ldd	r25, Y+56	; 0x38
    123a:	a4 01       	movw	r20, r8
    123c:	93 01       	movw	r18, r6
    123e:	0e 94 ef 2d 	call	0x5bde	; 0x5bde <__udivmodsi4>
    1242:	ca 01       	movw	r24, r20
    1244:	b9 01       	movw	r22, r18
    1246:	21 96       	adiw	r28, 0x01	; 1
    1248:	2c ad       	ldd	r18, Y+60	; 0x3c
    124a:	3d ad       	ldd	r19, Y+61	; 0x3d
    124c:	4e ad       	ldd	r20, Y+62	; 0x3e
    124e:	5f ad       	ldd	r21, Y+63	; 0x3f
    1250:	21 97       	sbiw	r28, 0x01	; 1
    1252:	0e 94 b5 2d 	call	0x5b6a	; 0x5b6a <__mulsi3>
    1256:	9b 01       	movw	r18, r22
    1258:	ac 01       	movw	r20, r24
    125a:	87 01       	movw	r16, r14
    125c:	ff 24       	eor	r15, r15
    125e:	ee 24       	eor	r14, r14
    1260:	a9 a8       	ldd	r10, Y+49	; 0x31
    1262:	ba a8       	ldd	r11, Y+50	; 0x32
    1264:	cb a8       	ldd	r12, Y+51	; 0x33
    1266:	dc a8       	ldd	r13, Y+52	; 0x34
    1268:	c6 01       	movw	r24, r12
    126a:	aa 27       	eor	r26, r26
    126c:	bb 27       	eor	r27, r27
    126e:	57 01       	movw	r10, r14
    1270:	68 01       	movw	r12, r16
    1272:	a8 2a       	or	r10, r24
    1274:	b9 2a       	or	r11, r25
    1276:	ca 2a       	or	r12, r26
    1278:	db 2a       	or	r13, r27
    127a:	a2 16       	cp	r10, r18
    127c:	b3 06       	cpc	r11, r19
    127e:	c4 06       	cpc	r12, r20
    1280:	d5 06       	cpc	r13, r21
    1282:	90 f4       	brcc	.+36     	; 0x12a8 <__umoddi3+0x286>
    1284:	a2 0c       	add	r10, r2
    1286:	b3 1c       	adc	r11, r3
    1288:	c4 1c       	adc	r12, r4
    128a:	d5 1c       	adc	r13, r5
    128c:	a2 14       	cp	r10, r2
    128e:	b3 04       	cpc	r11, r3
    1290:	c4 04       	cpc	r12, r4
    1292:	d5 04       	cpc	r13, r5
    1294:	48 f0       	brcs	.+18     	; 0x12a8 <__umoddi3+0x286>
    1296:	a2 16       	cp	r10, r18
    1298:	b3 06       	cpc	r11, r19
    129a:	c4 06       	cpc	r12, r20
    129c:	d5 06       	cpc	r13, r21
    129e:	20 f4       	brcc	.+8      	; 0x12a8 <__umoddi3+0x286>
    12a0:	a2 0c       	add	r10, r2
    12a2:	b3 1c       	adc	r11, r3
    12a4:	c4 1c       	adc	r12, r4
    12a6:	d5 1c       	adc	r13, r5
    12a8:	a2 1a       	sub	r10, r18
    12aa:	b3 0a       	sbc	r11, r19
    12ac:	c4 0a       	sbc	r12, r20
    12ae:	d5 0a       	sbc	r13, r21
    12b0:	c6 01       	movw	r24, r12
    12b2:	b5 01       	movw	r22, r10
    12b4:	a4 01       	movw	r20, r8
    12b6:	93 01       	movw	r18, r6
    12b8:	0e 94 ef 2d 	call	0x5bde	; 0x5bde <__udivmodsi4>
    12bc:	7b 01       	movw	r14, r22
    12be:	8c 01       	movw	r16, r24
    12c0:	c6 01       	movw	r24, r12
    12c2:	b5 01       	movw	r22, r10
    12c4:	a4 01       	movw	r20, r8
    12c6:	93 01       	movw	r18, r6
    12c8:	0e 94 ef 2d 	call	0x5bde	; 0x5bde <__udivmodsi4>
    12cc:	ca 01       	movw	r24, r20
    12ce:	b9 01       	movw	r22, r18
    12d0:	21 96       	adiw	r28, 0x01	; 1
    12d2:	2c ad       	ldd	r18, Y+60	; 0x3c
    12d4:	3d ad       	ldd	r19, Y+61	; 0x3d
    12d6:	4e ad       	ldd	r20, Y+62	; 0x3e
    12d8:	5f ad       	ldd	r21, Y+63	; 0x3f
    12da:	21 97       	sbiw	r28, 0x01	; 1
    12dc:	ba c1       	rjmp	.+884    	; 0x1652 <__umoddi3+0x630>
    12de:	21 14       	cp	r2, r1
    12e0:	31 04       	cpc	r3, r1
    12e2:	41 04       	cpc	r4, r1
    12e4:	51 04       	cpc	r5, r1
    12e6:	71 f4       	brne	.+28     	; 0x1304 <__umoddi3+0x2e2>
    12e8:	61 e0       	ldi	r22, 0x01	; 1
    12ea:	70 e0       	ldi	r23, 0x00	; 0
    12ec:	80 e0       	ldi	r24, 0x00	; 0
    12ee:	90 e0       	ldi	r25, 0x00	; 0
    12f0:	20 e0       	ldi	r18, 0x00	; 0
    12f2:	30 e0       	ldi	r19, 0x00	; 0
    12f4:	40 e0       	ldi	r20, 0x00	; 0
    12f6:	50 e0       	ldi	r21, 0x00	; 0
    12f8:	0e 94 ef 2d 	call	0x5bde	; 0x5bde <__udivmodsi4>
    12fc:	c9 01       	movw	r24, r18
    12fe:	da 01       	movw	r26, r20
    1300:	1c 01       	movw	r2, r24
    1302:	2d 01       	movw	r4, r26
    1304:	00 e0       	ldi	r16, 0x00	; 0
    1306:	20 16       	cp	r2, r16
    1308:	00 e0       	ldi	r16, 0x00	; 0
    130a:	30 06       	cpc	r3, r16
    130c:	01 e0       	ldi	r16, 0x01	; 1
    130e:	40 06       	cpc	r4, r16
    1310:	00 e0       	ldi	r16, 0x00	; 0
    1312:	50 06       	cpc	r5, r16
    1314:	88 f4       	brcc	.+34     	; 0x1338 <__umoddi3+0x316>
    1316:	1f ef       	ldi	r17, 0xFF	; 255
    1318:	21 16       	cp	r2, r17
    131a:	31 04       	cpc	r3, r1
    131c:	41 04       	cpc	r4, r1
    131e:	51 04       	cpc	r5, r1
    1320:	39 f0       	breq	.+14     	; 0x1330 <__umoddi3+0x30e>
    1322:	30 f0       	brcs	.+12     	; 0x1330 <__umoddi3+0x30e>
    1324:	68 e0       	ldi	r22, 0x08	; 8
    1326:	e6 2e       	mov	r14, r22
    1328:	f1 2c       	mov	r15, r1
    132a:	01 2d       	mov	r16, r1
    132c:	11 2d       	mov	r17, r1
    132e:	18 c0       	rjmp	.+48     	; 0x1360 <__umoddi3+0x33e>
    1330:	ee 24       	eor	r14, r14
    1332:	ff 24       	eor	r15, r15
    1334:	87 01       	movw	r16, r14
    1336:	14 c0       	rjmp	.+40     	; 0x1360 <__umoddi3+0x33e>
    1338:	40 e0       	ldi	r20, 0x00	; 0
    133a:	24 16       	cp	r2, r20
    133c:	40 e0       	ldi	r20, 0x00	; 0
    133e:	34 06       	cpc	r3, r20
    1340:	40 e0       	ldi	r20, 0x00	; 0
    1342:	44 06       	cpc	r4, r20
    1344:	41 e0       	ldi	r20, 0x01	; 1
    1346:	54 06       	cpc	r5, r20
    1348:	30 f0       	brcs	.+12     	; 0x1356 <__umoddi3+0x334>
    134a:	58 e1       	ldi	r21, 0x18	; 24
    134c:	e5 2e       	mov	r14, r21
    134e:	f1 2c       	mov	r15, r1
    1350:	01 2d       	mov	r16, r1
    1352:	11 2d       	mov	r17, r1
    1354:	05 c0       	rjmp	.+10     	; 0x1360 <__umoddi3+0x33e>
    1356:	40 e1       	ldi	r20, 0x10	; 16
    1358:	e4 2e       	mov	r14, r20
    135a:	f1 2c       	mov	r15, r1
    135c:	01 2d       	mov	r16, r1
    135e:	11 2d       	mov	r17, r1
    1360:	d2 01       	movw	r26, r4
    1362:	c1 01       	movw	r24, r2
    1364:	0e 2c       	mov	r0, r14
    1366:	04 c0       	rjmp	.+8      	; 0x1370 <__umoddi3+0x34e>
    1368:	b6 95       	lsr	r27
    136a:	a7 95       	ror	r26
    136c:	97 95       	ror	r25
    136e:	87 95       	ror	r24
    1370:	0a 94       	dec	r0
    1372:	d2 f7       	brpl	.-12     	; 0x1368 <__umoddi3+0x346>
    1374:	88 59       	subi	r24, 0x98	; 152
    1376:	9f 4f       	sbci	r25, 0xFF	; 255
    1378:	dc 01       	movw	r26, r24
    137a:	2c 91       	ld	r18, X
    137c:	30 e2       	ldi	r19, 0x20	; 32
    137e:	a3 2e       	mov	r10, r19
    1380:	b1 2c       	mov	r11, r1
    1382:	c1 2c       	mov	r12, r1
    1384:	d1 2c       	mov	r13, r1
    1386:	d6 01       	movw	r26, r12
    1388:	c5 01       	movw	r24, r10
    138a:	8e 19       	sub	r24, r14
    138c:	9f 09       	sbc	r25, r15
    138e:	a0 0b       	sbc	r26, r16
    1390:	b1 0b       	sbc	r27, r17
    1392:	7c 01       	movw	r14, r24
    1394:	8d 01       	movw	r16, r26
    1396:	e2 1a       	sub	r14, r18
    1398:	f1 08       	sbc	r15, r1
    139a:	01 09       	sbc	r16, r1
    139c:	11 09       	sbc	r17, r1
    139e:	e9 ae       	std	Y+57, r14	; 0x39
    13a0:	fa ae       	std	Y+58, r15	; 0x3a
    13a2:	0b af       	std	Y+59, r16	; 0x3b
    13a4:	1c af       	std	Y+60, r17	; 0x3c
    13a6:	e1 14       	cp	r14, r1
    13a8:	f1 04       	cpc	r15, r1
    13aa:	01 05       	cpc	r16, r1
    13ac:	11 05       	cpc	r17, r1
    13ae:	39 f4       	brne	.+14     	; 0x13be <__umoddi3+0x39c>
    13b0:	64 01       	movw	r12, r8
    13b2:	53 01       	movw	r10, r6
    13b4:	a2 18       	sub	r10, r2
    13b6:	b3 08       	sbc	r11, r3
    13b8:	c4 08       	sbc	r12, r4
    13ba:	d5 08       	sbc	r13, r5
    13bc:	e2 c0       	rjmp	.+452    	; 0x1582 <__umoddi3+0x560>
    13be:	f9 ac       	ldd	r15, Y+57	; 0x39
    13c0:	68 96       	adiw	r28, 0x18	; 24
    13c2:	ff ae       	std	Y+63, r15	; 0x3f
    13c4:	68 97       	sbiw	r28, 0x18	; 24
    13c6:	0f 2c       	mov	r0, r15
    13c8:	04 c0       	rjmp	.+8      	; 0x13d2 <__umoddi3+0x3b0>
    13ca:	22 0c       	add	r2, r2
    13cc:	33 1c       	adc	r3, r3
    13ce:	44 1c       	adc	r4, r4
    13d0:	55 1c       	adc	r5, r5
    13d2:	0a 94       	dec	r0
    13d4:	d2 f7       	brpl	.-12     	; 0x13ca <__umoddi3+0x3a8>
    13d6:	8a 2d       	mov	r24, r10
    13d8:	8f 19       	sub	r24, r15
    13da:	64 01       	movw	r12, r8
    13dc:	53 01       	movw	r10, r6
    13de:	08 2e       	mov	r0, r24
    13e0:	04 c0       	rjmp	.+8      	; 0x13ea <__umoddi3+0x3c8>
    13e2:	d6 94       	lsr	r13
    13e4:	c7 94       	ror	r12
    13e6:	b7 94       	ror	r11
    13e8:	a7 94       	ror	r10
    13ea:	0a 94       	dec	r0
    13ec:	d2 f7       	brpl	.-12     	; 0x13e2 <__umoddi3+0x3c0>
    13ee:	a4 01       	movw	r20, r8
    13f0:	93 01       	movw	r18, r6
    13f2:	04 c0       	rjmp	.+8      	; 0x13fc <__umoddi3+0x3da>
    13f4:	22 0f       	add	r18, r18
    13f6:	33 1f       	adc	r19, r19
    13f8:	44 1f       	adc	r20, r20
    13fa:	55 1f       	adc	r21, r21
    13fc:	fa 94       	dec	r15
    13fe:	d2 f7       	brpl	.-12     	; 0x13f4 <__umoddi3+0x3d2>
    1400:	6c 96       	adiw	r28, 0x1c	; 28
    1402:	6c ac       	ldd	r6, Y+60	; 0x3c
    1404:	7d ac       	ldd	r7, Y+61	; 0x3d
    1406:	8e ac       	ldd	r8, Y+62	; 0x3e
    1408:	9f ac       	ldd	r9, Y+63	; 0x3f
    140a:	6c 97       	sbiw	r28, 0x1c	; 28
    140c:	04 c0       	rjmp	.+8      	; 0x1416 <__umoddi3+0x3f4>
    140e:	96 94       	lsr	r9
    1410:	87 94       	ror	r8
    1412:	77 94       	ror	r7
    1414:	67 94       	ror	r6
    1416:	8a 95       	dec	r24
    1418:	d2 f7       	brpl	.-12     	; 0x140e <__umoddi3+0x3ec>
    141a:	84 01       	movw	r16, r8
    141c:	73 01       	movw	r14, r6
    141e:	e2 2a       	or	r14, r18
    1420:	f3 2a       	or	r15, r19
    1422:	04 2b       	or	r16, r20
    1424:	15 2b       	or	r17, r21
    1426:	ed a6       	std	Y+45, r14	; 0x2d
    1428:	fe a6       	std	Y+46, r15	; 0x2e
    142a:	0f a7       	std	Y+47, r16	; 0x2f
    142c:	18 ab       	std	Y+48, r17	; 0x30
    142e:	32 01       	movw	r6, r4
    1430:	88 24       	eor	r8, r8
    1432:	99 24       	eor	r9, r9
    1434:	b2 01       	movw	r22, r4
    1436:	a1 01       	movw	r20, r2
    1438:	60 70       	andi	r22, 0x00	; 0
    143a:	70 70       	andi	r23, 0x00	; 0
    143c:	25 96       	adiw	r28, 0x05	; 5
    143e:	4c af       	std	Y+60, r20	; 0x3c
    1440:	5d af       	std	Y+61, r21	; 0x3d
    1442:	6e af       	std	Y+62, r22	; 0x3e
    1444:	7f af       	std	Y+63, r23	; 0x3f
    1446:	25 97       	sbiw	r28, 0x05	; 5
    1448:	c6 01       	movw	r24, r12
    144a:	b5 01       	movw	r22, r10
    144c:	a4 01       	movw	r20, r8
    144e:	93 01       	movw	r18, r6
    1450:	0e 94 ef 2d 	call	0x5bde	; 0x5bde <__udivmodsi4>
    1454:	7b 01       	movw	r14, r22
    1456:	8c 01       	movw	r16, r24
    1458:	c6 01       	movw	r24, r12
    145a:	b5 01       	movw	r22, r10
    145c:	a4 01       	movw	r20, r8
    145e:	93 01       	movw	r18, r6
    1460:	0e 94 ef 2d 	call	0x5bde	; 0x5bde <__udivmodsi4>
    1464:	ca 01       	movw	r24, r20
    1466:	b9 01       	movw	r22, r18
    1468:	25 96       	adiw	r28, 0x05	; 5
    146a:	2c ad       	ldd	r18, Y+60	; 0x3c
    146c:	3d ad       	ldd	r19, Y+61	; 0x3d
    146e:	4e ad       	ldd	r20, Y+62	; 0x3e
    1470:	5f ad       	ldd	r21, Y+63	; 0x3f
    1472:	25 97       	sbiw	r28, 0x05	; 5
    1474:	0e 94 b5 2d 	call	0x5b6a	; 0x5b6a <__mulsi3>
    1478:	9b 01       	movw	r18, r22
    147a:	ac 01       	movw	r20, r24
    147c:	87 01       	movw	r16, r14
    147e:	ff 24       	eor	r15, r15
    1480:	ee 24       	eor	r14, r14
    1482:	ad a4       	ldd	r10, Y+45	; 0x2d
    1484:	be a4       	ldd	r11, Y+46	; 0x2e
    1486:	cf a4       	ldd	r12, Y+47	; 0x2f
    1488:	d8 a8       	ldd	r13, Y+48	; 0x30
    148a:	c6 01       	movw	r24, r12
    148c:	aa 27       	eor	r26, r26
    148e:	bb 27       	eor	r27, r27
    1490:	5c 01       	movw	r10, r24
    1492:	6d 01       	movw	r12, r26
    1494:	ae 28       	or	r10, r14
    1496:	bf 28       	or	r11, r15
    1498:	c0 2a       	or	r12, r16
    149a:	d1 2a       	or	r13, r17
    149c:	a2 16       	cp	r10, r18
    149e:	b3 06       	cpc	r11, r19
    14a0:	c4 06       	cpc	r12, r20
    14a2:	d5 06       	cpc	r13, r21
    14a4:	90 f4       	brcc	.+36     	; 0x14ca <__umoddi3+0x4a8>
    14a6:	a2 0c       	add	r10, r2
    14a8:	b3 1c       	adc	r11, r3
    14aa:	c4 1c       	adc	r12, r4
    14ac:	d5 1c       	adc	r13, r5
    14ae:	a2 14       	cp	r10, r2
    14b0:	b3 04       	cpc	r11, r3
    14b2:	c4 04       	cpc	r12, r4
    14b4:	d5 04       	cpc	r13, r5
    14b6:	48 f0       	brcs	.+18     	; 0x14ca <__umoddi3+0x4a8>
    14b8:	a2 16       	cp	r10, r18
    14ba:	b3 06       	cpc	r11, r19
    14bc:	c4 06       	cpc	r12, r20
    14be:	d5 06       	cpc	r13, r21
    14c0:	20 f4       	brcc	.+8      	; 0x14ca <__umoddi3+0x4a8>
    14c2:	a2 0c       	add	r10, r2
    14c4:	b3 1c       	adc	r11, r3
    14c6:	c4 1c       	adc	r12, r4
    14c8:	d5 1c       	adc	r13, r5
    14ca:	a2 1a       	sub	r10, r18
    14cc:	b3 0a       	sbc	r11, r19
    14ce:	c4 0a       	sbc	r12, r20
    14d0:	d5 0a       	sbc	r13, r21
    14d2:	c6 01       	movw	r24, r12
    14d4:	b5 01       	movw	r22, r10
    14d6:	a4 01       	movw	r20, r8
    14d8:	93 01       	movw	r18, r6
    14da:	0e 94 ef 2d 	call	0x5bde	; 0x5bde <__udivmodsi4>
    14de:	7b 01       	movw	r14, r22
    14e0:	8c 01       	movw	r16, r24
    14e2:	c6 01       	movw	r24, r12
    14e4:	b5 01       	movw	r22, r10
    14e6:	a4 01       	movw	r20, r8
    14e8:	93 01       	movw	r18, r6
    14ea:	0e 94 ef 2d 	call	0x5bde	; 0x5bde <__udivmodsi4>
    14ee:	ca 01       	movw	r24, r20
    14f0:	b9 01       	movw	r22, r18
    14f2:	25 96       	adiw	r28, 0x05	; 5
    14f4:	2c ad       	ldd	r18, Y+60	; 0x3c
    14f6:	3d ad       	ldd	r19, Y+61	; 0x3d
    14f8:	4e ad       	ldd	r20, Y+62	; 0x3e
    14fa:	5f ad       	ldd	r21, Y+63	; 0x3f
    14fc:	25 97       	sbiw	r28, 0x05	; 5
    14fe:	0e 94 b5 2d 	call	0x5b6a	; 0x5b6a <__mulsi3>
    1502:	9b 01       	movw	r18, r22
    1504:	ac 01       	movw	r20, r24
    1506:	87 01       	movw	r16, r14
    1508:	ff 24       	eor	r15, r15
    150a:	ee 24       	eor	r14, r14
    150c:	8d a5       	ldd	r24, Y+45	; 0x2d
    150e:	9e a5       	ldd	r25, Y+46	; 0x2e
    1510:	af a5       	ldd	r26, Y+47	; 0x2f
    1512:	b8 a9       	ldd	r27, Y+48	; 0x30
    1514:	a0 70       	andi	r26, 0x00	; 0
    1516:	b0 70       	andi	r27, 0x00	; 0
    1518:	57 01       	movw	r10, r14
    151a:	68 01       	movw	r12, r16
    151c:	a8 2a       	or	r10, r24
    151e:	b9 2a       	or	r11, r25
    1520:	ca 2a       	or	r12, r26
    1522:	db 2a       	or	r13, r27
    1524:	a2 16       	cp	r10, r18
    1526:	b3 06       	cpc	r11, r19
    1528:	c4 06       	cpc	r12, r20
    152a:	d5 06       	cpc	r13, r21
    152c:	90 f4       	brcc	.+36     	; 0x1552 <__umoddi3+0x530>
    152e:	a2 0c       	add	r10, r2
    1530:	b3 1c       	adc	r11, r3
    1532:	c4 1c       	adc	r12, r4
    1534:	d5 1c       	adc	r13, r5
    1536:	a2 14       	cp	r10, r2
    1538:	b3 04       	cpc	r11, r3
    153a:	c4 04       	cpc	r12, r4
    153c:	d5 04       	cpc	r13, r5
    153e:	48 f0       	brcs	.+18     	; 0x1552 <__umoddi3+0x530>
    1540:	a2 16       	cp	r10, r18
    1542:	b3 06       	cpc	r11, r19
    1544:	c4 06       	cpc	r12, r20
    1546:	d5 06       	cpc	r13, r21
    1548:	20 f4       	brcc	.+8      	; 0x1552 <__umoddi3+0x530>
    154a:	a2 0c       	add	r10, r2
    154c:	b3 1c       	adc	r11, r3
    154e:	c4 1c       	adc	r12, r4
    1550:	d5 1c       	adc	r13, r5
    1552:	6c 96       	adiw	r28, 0x1c	; 28
    1554:	ec ac       	ldd	r14, Y+60	; 0x3c
    1556:	fd ac       	ldd	r15, Y+61	; 0x3d
    1558:	0e ad       	ldd	r16, Y+62	; 0x3e
    155a:	1f ad       	ldd	r17, Y+63	; 0x3f
    155c:	6c 97       	sbiw	r28, 0x1c	; 28
    155e:	68 96       	adiw	r28, 0x18	; 24
    1560:	0f ac       	ldd	r0, Y+63	; 0x3f
    1562:	68 97       	sbiw	r28, 0x18	; 24
    1564:	04 c0       	rjmp	.+8      	; 0x156e <__umoddi3+0x54c>
    1566:	ee 0c       	add	r14, r14
    1568:	ff 1c       	adc	r15, r15
    156a:	00 1f       	adc	r16, r16
    156c:	11 1f       	adc	r17, r17
    156e:	0a 94       	dec	r0
    1570:	d2 f7       	brpl	.-12     	; 0x1566 <__umoddi3+0x544>
    1572:	e9 aa       	std	Y+49, r14	; 0x31
    1574:	fa aa       	std	Y+50, r15	; 0x32
    1576:	0b ab       	std	Y+51, r16	; 0x33
    1578:	1c ab       	std	Y+52, r17	; 0x34
    157a:	a2 1a       	sub	r10, r18
    157c:	b3 0a       	sbc	r11, r19
    157e:	c4 0a       	sbc	r12, r20
    1580:	d5 0a       	sbc	r13, r21
    1582:	32 01       	movw	r6, r4
    1584:	88 24       	eor	r8, r8
    1586:	99 24       	eor	r9, r9
    1588:	b2 01       	movw	r22, r4
    158a:	a1 01       	movw	r20, r2
    158c:	60 70       	andi	r22, 0x00	; 0
    158e:	70 70       	andi	r23, 0x00	; 0
    1590:	29 96       	adiw	r28, 0x09	; 9
    1592:	4c af       	std	Y+60, r20	; 0x3c
    1594:	5d af       	std	Y+61, r21	; 0x3d
    1596:	6e af       	std	Y+62, r22	; 0x3e
    1598:	7f af       	std	Y+63, r23	; 0x3f
    159a:	29 97       	sbiw	r28, 0x09	; 9
    159c:	c6 01       	movw	r24, r12
    159e:	b5 01       	movw	r22, r10
    15a0:	a4 01       	movw	r20, r8
    15a2:	93 01       	movw	r18, r6
    15a4:	0e 94 ef 2d 	call	0x5bde	; 0x5bde <__udivmodsi4>
    15a8:	7b 01       	movw	r14, r22
    15aa:	8c 01       	movw	r16, r24
    15ac:	c6 01       	movw	r24, r12
    15ae:	b5 01       	movw	r22, r10
    15b0:	a4 01       	movw	r20, r8
    15b2:	93 01       	movw	r18, r6
    15b4:	0e 94 ef 2d 	call	0x5bde	; 0x5bde <__udivmodsi4>
    15b8:	ca 01       	movw	r24, r20
    15ba:	b9 01       	movw	r22, r18
    15bc:	29 96       	adiw	r28, 0x09	; 9
    15be:	2c ad       	ldd	r18, Y+60	; 0x3c
    15c0:	3d ad       	ldd	r19, Y+61	; 0x3d
    15c2:	4e ad       	ldd	r20, Y+62	; 0x3e
    15c4:	5f ad       	ldd	r21, Y+63	; 0x3f
    15c6:	29 97       	sbiw	r28, 0x09	; 9
    15c8:	0e 94 b5 2d 	call	0x5b6a	; 0x5b6a <__mulsi3>
    15cc:	9b 01       	movw	r18, r22
    15ce:	ac 01       	movw	r20, r24
    15d0:	87 01       	movw	r16, r14
    15d2:	ff 24       	eor	r15, r15
    15d4:	ee 24       	eor	r14, r14
    15d6:	a9 a8       	ldd	r10, Y+49	; 0x31
    15d8:	ba a8       	ldd	r11, Y+50	; 0x32
    15da:	cb a8       	ldd	r12, Y+51	; 0x33
    15dc:	dc a8       	ldd	r13, Y+52	; 0x34
    15de:	c6 01       	movw	r24, r12
    15e0:	aa 27       	eor	r26, r26
    15e2:	bb 27       	eor	r27, r27
    15e4:	57 01       	movw	r10, r14
    15e6:	68 01       	movw	r12, r16
    15e8:	a8 2a       	or	r10, r24
    15ea:	b9 2a       	or	r11, r25
    15ec:	ca 2a       	or	r12, r26
    15ee:	db 2a       	or	r13, r27
    15f0:	a2 16       	cp	r10, r18
    15f2:	b3 06       	cpc	r11, r19
    15f4:	c4 06       	cpc	r12, r20
    15f6:	d5 06       	cpc	r13, r21
    15f8:	90 f4       	brcc	.+36     	; 0x161e <__umoddi3+0x5fc>
    15fa:	a2 0c       	add	r10, r2
    15fc:	b3 1c       	adc	r11, r3
    15fe:	c4 1c       	adc	r12, r4
    1600:	d5 1c       	adc	r13, r5
    1602:	a2 14       	cp	r10, r2
    1604:	b3 04       	cpc	r11, r3
    1606:	c4 04       	cpc	r12, r4
    1608:	d5 04       	cpc	r13, r5
    160a:	48 f0       	brcs	.+18     	; 0x161e <__umoddi3+0x5fc>
    160c:	a2 16       	cp	r10, r18
    160e:	b3 06       	cpc	r11, r19
    1610:	c4 06       	cpc	r12, r20
    1612:	d5 06       	cpc	r13, r21
    1614:	20 f4       	brcc	.+8      	; 0x161e <__umoddi3+0x5fc>
    1616:	a2 0c       	add	r10, r2
    1618:	b3 1c       	adc	r11, r3
    161a:	c4 1c       	adc	r12, r4
    161c:	d5 1c       	adc	r13, r5
    161e:	a2 1a       	sub	r10, r18
    1620:	b3 0a       	sbc	r11, r19
    1622:	c4 0a       	sbc	r12, r20
    1624:	d5 0a       	sbc	r13, r21
    1626:	c6 01       	movw	r24, r12
    1628:	b5 01       	movw	r22, r10
    162a:	a4 01       	movw	r20, r8
    162c:	93 01       	movw	r18, r6
    162e:	0e 94 ef 2d 	call	0x5bde	; 0x5bde <__udivmodsi4>
    1632:	7b 01       	movw	r14, r22
    1634:	8c 01       	movw	r16, r24
    1636:	c6 01       	movw	r24, r12
    1638:	b5 01       	movw	r22, r10
    163a:	a4 01       	movw	r20, r8
    163c:	93 01       	movw	r18, r6
    163e:	0e 94 ef 2d 	call	0x5bde	; 0x5bde <__udivmodsi4>
    1642:	ca 01       	movw	r24, r20
    1644:	b9 01       	movw	r22, r18
    1646:	29 96       	adiw	r28, 0x09	; 9
    1648:	2c ad       	ldd	r18, Y+60	; 0x3c
    164a:	3d ad       	ldd	r19, Y+61	; 0x3d
    164c:	4e ad       	ldd	r20, Y+62	; 0x3e
    164e:	5f ad       	ldd	r21, Y+63	; 0x3f
    1650:	29 97       	sbiw	r28, 0x09	; 9
    1652:	0e 94 b5 2d 	call	0x5b6a	; 0x5b6a <__mulsi3>
    1656:	9b 01       	movw	r18, r22
    1658:	ac 01       	movw	r20, r24
    165a:	87 01       	movw	r16, r14
    165c:	ff 24       	eor	r15, r15
    165e:	ee 24       	eor	r14, r14
    1660:	89 a9       	ldd	r24, Y+49	; 0x31
    1662:	9a a9       	ldd	r25, Y+50	; 0x32
    1664:	ab a9       	ldd	r26, Y+51	; 0x33
    1666:	bc a9       	ldd	r27, Y+52	; 0x34
    1668:	a0 70       	andi	r26, 0x00	; 0
    166a:	b0 70       	andi	r27, 0x00	; 0
    166c:	e8 2a       	or	r14, r24
    166e:	f9 2a       	or	r15, r25
    1670:	0a 2b       	or	r16, r26
    1672:	1b 2b       	or	r17, r27
    1674:	e2 16       	cp	r14, r18
    1676:	f3 06       	cpc	r15, r19
    1678:	04 07       	cpc	r16, r20
    167a:	15 07       	cpc	r17, r21
    167c:	90 f4       	brcc	.+36     	; 0x16a2 <__umoddi3+0x680>
    167e:	e2 0c       	add	r14, r2
    1680:	f3 1c       	adc	r15, r3
    1682:	04 1d       	adc	r16, r4
    1684:	15 1d       	adc	r17, r5
    1686:	e2 14       	cp	r14, r2
    1688:	f3 04       	cpc	r15, r3
    168a:	04 05       	cpc	r16, r4
    168c:	15 05       	cpc	r17, r5
    168e:	48 f0       	brcs	.+18     	; 0x16a2 <__umoddi3+0x680>
    1690:	e2 16       	cp	r14, r18
    1692:	f3 06       	cpc	r15, r19
    1694:	04 07       	cpc	r16, r20
    1696:	15 07       	cpc	r17, r21
    1698:	20 f4       	brcc	.+8      	; 0x16a2 <__umoddi3+0x680>
    169a:	e2 0c       	add	r14, r2
    169c:	f3 1c       	adc	r15, r3
    169e:	04 1d       	adc	r16, r4
    16a0:	15 1d       	adc	r17, r5
    16a2:	e2 1a       	sub	r14, r18
    16a4:	f3 0a       	sbc	r15, r19
    16a6:	04 0b       	sbc	r16, r20
    16a8:	15 0b       	sbc	r17, r21
    16aa:	d8 01       	movw	r26, r16
    16ac:	c7 01       	movw	r24, r14
    16ae:	09 ac       	ldd	r0, Y+57	; 0x39
    16b0:	04 c0       	rjmp	.+8      	; 0x16ba <__umoddi3+0x698>
    16b2:	b6 95       	lsr	r27
    16b4:	a7 95       	ror	r26
    16b6:	97 95       	ror	r25
    16b8:	87 95       	ror	r24
    16ba:	0a 94       	dec	r0
    16bc:	d2 f7       	brpl	.-12     	; 0x16b2 <__umoddi3+0x690>
    16be:	89 8b       	std	Y+17, r24	; 0x11
    16c0:	9a 8b       	std	Y+18, r25	; 0x12
    16c2:	ab 8b       	std	Y+19, r26	; 0x13
    16c4:	bc 8b       	std	Y+20, r27	; 0x14
    16c6:	1d 8a       	std	Y+21, r1	; 0x15
    16c8:	1e 8a       	std	Y+22, r1	; 0x16
    16ca:	1f 8a       	std	Y+23, r1	; 0x17
    16cc:	18 8e       	std	Y+24, r1	; 0x18
    16ce:	28 2f       	mov	r18, r24
    16d0:	3a 89       	ldd	r19, Y+18	; 0x12
    16d2:	4b 89       	ldd	r20, Y+19	; 0x13
    16d4:	5c 89       	ldd	r21, Y+20	; 0x14
    16d6:	6d 89       	ldd	r22, Y+21	; 0x15
    16d8:	0c c3       	rjmp	.+1560   	; 0x1cf2 <__umoddi3+0xcd0>
    16da:	6a 14       	cp	r6, r10
    16dc:	7b 04       	cpc	r7, r11
    16de:	8c 04       	cpc	r8, r12
    16e0:	9d 04       	cpc	r9, r13
    16e2:	08 f4       	brcc	.+2      	; 0x16e6 <__umoddi3+0x6c4>
    16e4:	09 c3       	rjmp	.+1554   	; 0x1cf8 <__umoddi3+0xcd6>
    16e6:	00 e0       	ldi	r16, 0x00	; 0
    16e8:	a0 16       	cp	r10, r16
    16ea:	00 e0       	ldi	r16, 0x00	; 0
    16ec:	b0 06       	cpc	r11, r16
    16ee:	01 e0       	ldi	r16, 0x01	; 1
    16f0:	c0 06       	cpc	r12, r16
    16f2:	00 e0       	ldi	r16, 0x00	; 0
    16f4:	d0 06       	cpc	r13, r16
    16f6:	88 f4       	brcc	.+34     	; 0x171a <__umoddi3+0x6f8>
    16f8:	1f ef       	ldi	r17, 0xFF	; 255
    16fa:	a1 16       	cp	r10, r17
    16fc:	b1 04       	cpc	r11, r1
    16fe:	c1 04       	cpc	r12, r1
    1700:	d1 04       	cpc	r13, r1
    1702:	39 f0       	breq	.+14     	; 0x1712 <__umoddi3+0x6f0>
    1704:	30 f0       	brcs	.+12     	; 0x1712 <__umoddi3+0x6f0>
    1706:	28 e0       	ldi	r18, 0x08	; 8
    1708:	e2 2e       	mov	r14, r18
    170a:	f1 2c       	mov	r15, r1
    170c:	01 2d       	mov	r16, r1
    170e:	11 2d       	mov	r17, r1
    1710:	18 c0       	rjmp	.+48     	; 0x1742 <__umoddi3+0x720>
    1712:	ee 24       	eor	r14, r14
    1714:	ff 24       	eor	r15, r15
    1716:	87 01       	movw	r16, r14
    1718:	14 c0       	rjmp	.+40     	; 0x1742 <__umoddi3+0x720>
    171a:	40 e0       	ldi	r20, 0x00	; 0
    171c:	a4 16       	cp	r10, r20
    171e:	40 e0       	ldi	r20, 0x00	; 0
    1720:	b4 06       	cpc	r11, r20
    1722:	40 e0       	ldi	r20, 0x00	; 0
    1724:	c4 06       	cpc	r12, r20
    1726:	41 e0       	ldi	r20, 0x01	; 1
    1728:	d4 06       	cpc	r13, r20
    172a:	30 f0       	brcs	.+12     	; 0x1738 <__umoddi3+0x716>
    172c:	98 e1       	ldi	r25, 0x18	; 24
    172e:	e9 2e       	mov	r14, r25
    1730:	f1 2c       	mov	r15, r1
    1732:	01 2d       	mov	r16, r1
    1734:	11 2d       	mov	r17, r1
    1736:	05 c0       	rjmp	.+10     	; 0x1742 <__umoddi3+0x720>
    1738:	80 e1       	ldi	r24, 0x10	; 16
    173a:	e8 2e       	mov	r14, r24
    173c:	f1 2c       	mov	r15, r1
    173e:	01 2d       	mov	r16, r1
    1740:	11 2d       	mov	r17, r1
    1742:	d6 01       	movw	r26, r12
    1744:	c5 01       	movw	r24, r10
    1746:	0e 2c       	mov	r0, r14
    1748:	04 c0       	rjmp	.+8      	; 0x1752 <__umoddi3+0x730>
    174a:	b6 95       	lsr	r27
    174c:	a7 95       	ror	r26
    174e:	97 95       	ror	r25
    1750:	87 95       	ror	r24
    1752:	0a 94       	dec	r0
    1754:	d2 f7       	brpl	.-12     	; 0x174a <__umoddi3+0x728>
    1756:	88 59       	subi	r24, 0x98	; 152
    1758:	9f 4f       	sbci	r25, 0xFF	; 255
    175a:	dc 01       	movw	r26, r24
    175c:	2c 91       	ld	r18, X
    175e:	80 e2       	ldi	r24, 0x20	; 32
    1760:	90 e0       	ldi	r25, 0x00	; 0
    1762:	a0 e0       	ldi	r26, 0x00	; 0
    1764:	b0 e0       	ldi	r27, 0x00	; 0
    1766:	8e 19       	sub	r24, r14
    1768:	9f 09       	sbc	r25, r15
    176a:	a0 0b       	sbc	r26, r16
    176c:	b1 0b       	sbc	r27, r17
    176e:	82 1b       	sub	r24, r18
    1770:	91 09       	sbc	r25, r1
    1772:	a1 09       	sbc	r26, r1
    1774:	b1 09       	sbc	r27, r1
    1776:	00 97       	sbiw	r24, 0x00	; 0
    1778:	a1 05       	cpc	r26, r1
    177a:	b1 05       	cpc	r27, r1
    177c:	09 f0       	breq	.+2      	; 0x1780 <__umoddi3+0x75e>
    177e:	4f c0       	rjmp	.+158    	; 0x181e <__umoddi3+0x7fc>
    1780:	a6 14       	cp	r10, r6
    1782:	b7 04       	cpc	r11, r7
    1784:	c8 04       	cpc	r12, r8
    1786:	d9 04       	cpc	r13, r9
    1788:	58 f0       	brcs	.+22     	; 0x17a0 <__umoddi3+0x77e>
    178a:	6c 96       	adiw	r28, 0x1c	; 28
    178c:	ec ac       	ldd	r14, Y+60	; 0x3c
    178e:	fd ac       	ldd	r15, Y+61	; 0x3d
    1790:	0e ad       	ldd	r16, Y+62	; 0x3e
    1792:	1f ad       	ldd	r17, Y+63	; 0x3f
    1794:	6c 97       	sbiw	r28, 0x1c	; 28
    1796:	e2 14       	cp	r14, r2
    1798:	f3 04       	cpc	r15, r3
    179a:	04 05       	cpc	r16, r4
    179c:	15 05       	cpc	r17, r5
    179e:	68 f1       	brcs	.+90     	; 0x17fa <__umoddi3+0x7d8>
    17a0:	6c 96       	adiw	r28, 0x1c	; 28
    17a2:	ec ac       	ldd	r14, Y+60	; 0x3c
    17a4:	fd ac       	ldd	r15, Y+61	; 0x3d
    17a6:	0e ad       	ldd	r16, Y+62	; 0x3e
    17a8:	1f ad       	ldd	r17, Y+63	; 0x3f
    17aa:	6c 97       	sbiw	r28, 0x1c	; 28
    17ac:	e2 18       	sub	r14, r2
    17ae:	f3 08       	sbc	r15, r3
    17b0:	04 09       	sbc	r16, r4
    17b2:	15 09       	sbc	r17, r5
    17b4:	a4 01       	movw	r20, r8
    17b6:	93 01       	movw	r18, r6
    17b8:	2a 19       	sub	r18, r10
    17ba:	3b 09       	sbc	r19, r11
    17bc:	4c 09       	sbc	r20, r12
    17be:	5d 09       	sbc	r21, r13
    17c0:	aa 24       	eor	r10, r10
    17c2:	bb 24       	eor	r11, r11
    17c4:	65 01       	movw	r12, r10
    17c6:	6c 96       	adiw	r28, 0x1c	; 28
    17c8:	6c ad       	ldd	r22, Y+60	; 0x3c
    17ca:	7d ad       	ldd	r23, Y+61	; 0x3d
    17cc:	8e ad       	ldd	r24, Y+62	; 0x3e
    17ce:	9f ad       	ldd	r25, Y+63	; 0x3f
    17d0:	6c 97       	sbiw	r28, 0x1c	; 28
    17d2:	6e 15       	cp	r22, r14
    17d4:	7f 05       	cpc	r23, r15
    17d6:	80 07       	cpc	r24, r16
    17d8:	91 07       	cpc	r25, r17
    17da:	28 f4       	brcc	.+10     	; 0x17e6 <__umoddi3+0x7c4>
    17dc:	b1 e0       	ldi	r27, 0x01	; 1
    17de:	ab 2e       	mov	r10, r27
    17e0:	b1 2c       	mov	r11, r1
    17e2:	c1 2c       	mov	r12, r1
    17e4:	d1 2c       	mov	r13, r1
    17e6:	da 01       	movw	r26, r20
    17e8:	c9 01       	movw	r24, r18
    17ea:	8a 19       	sub	r24, r10
    17ec:	9b 09       	sbc	r25, r11
    17ee:	ac 09       	sbc	r26, r12
    17f0:	bd 09       	sbc	r27, r13
    17f2:	8d ab       	std	Y+53, r24	; 0x35
    17f4:	9e ab       	std	Y+54, r25	; 0x36
    17f6:	af ab       	std	Y+55, r26	; 0x37
    17f8:	b8 af       	std	Y+56, r27	; 0x38
    17fa:	e9 8a       	std	Y+17, r14	; 0x11
    17fc:	fa 8a       	std	Y+18, r15	; 0x12
    17fe:	0b 8b       	std	Y+19, r16	; 0x13
    1800:	1c 8b       	std	Y+20, r17	; 0x14
    1802:	6d a8       	ldd	r6, Y+53	; 0x35
    1804:	7e a8       	ldd	r7, Y+54	; 0x36
    1806:	8f a8       	ldd	r8, Y+55	; 0x37
    1808:	98 ac       	ldd	r9, Y+56	; 0x38
    180a:	6d 8a       	std	Y+21, r6	; 0x15
    180c:	7e 8a       	std	Y+22, r7	; 0x16
    180e:	8f 8a       	std	Y+23, r8	; 0x17
    1810:	98 8e       	std	Y+24, r9	; 0x18
    1812:	2e 2d       	mov	r18, r14
    1814:	3a 89       	ldd	r19, Y+18	; 0x12
    1816:	4b 89       	ldd	r20, Y+19	; 0x13
    1818:	5c 89       	ldd	r21, Y+20	; 0x14
    181a:	6d a9       	ldd	r22, Y+53	; 0x35
    181c:	6a c2       	rjmp	.+1236   	; 0x1cf2 <__umoddi3+0xcd0>
    181e:	67 96       	adiw	r28, 0x17	; 23
    1820:	8f af       	std	Y+63, r24	; 0x3f
    1822:	67 97       	sbiw	r28, 0x17	; 23
    1824:	a6 01       	movw	r20, r12
    1826:	95 01       	movw	r18, r10
    1828:	08 2e       	mov	r0, r24
    182a:	04 c0       	rjmp	.+8      	; 0x1834 <__umoddi3+0x812>
    182c:	22 0f       	add	r18, r18
    182e:	33 1f       	adc	r19, r19
    1830:	44 1f       	adc	r20, r20
    1832:	55 1f       	adc	r21, r21
    1834:	0a 94       	dec	r0
    1836:	d2 f7       	brpl	.-12     	; 0x182c <__umoddi3+0x80a>
    1838:	a0 e2       	ldi	r26, 0x20	; 32
    183a:	aa 2e       	mov	r10, r26
    183c:	a8 1a       	sub	r10, r24
    183e:	66 96       	adiw	r28, 0x16	; 22
    1840:	af ae       	std	Y+63, r10	; 0x3f
    1842:	66 97       	sbiw	r28, 0x16	; 22
    1844:	d2 01       	movw	r26, r4
    1846:	c1 01       	movw	r24, r2
    1848:	04 c0       	rjmp	.+8      	; 0x1852 <__umoddi3+0x830>
    184a:	b6 95       	lsr	r27
    184c:	a7 95       	ror	r26
    184e:	97 95       	ror	r25
    1850:	87 95       	ror	r24
    1852:	aa 94       	dec	r10
    1854:	d2 f7       	brpl	.-12     	; 0x184a <__umoddi3+0x828>
    1856:	6c 01       	movw	r12, r24
    1858:	7d 01       	movw	r14, r26
    185a:	c2 2a       	or	r12, r18
    185c:	d3 2a       	or	r13, r19
    185e:	e4 2a       	or	r14, r20
    1860:	f5 2a       	or	r15, r21
    1862:	c9 a6       	std	Y+41, r12	; 0x29
    1864:	da a6       	std	Y+42, r13	; 0x2a
    1866:	eb a6       	std	Y+43, r14	; 0x2b
    1868:	fc a6       	std	Y+44, r15	; 0x2c
    186a:	82 01       	movw	r16, r4
    186c:	71 01       	movw	r14, r2
    186e:	67 96       	adiw	r28, 0x17	; 23
    1870:	0f ac       	ldd	r0, Y+63	; 0x3f
    1872:	67 97       	sbiw	r28, 0x17	; 23
    1874:	04 c0       	rjmp	.+8      	; 0x187e <__umoddi3+0x85c>
    1876:	ee 0c       	add	r14, r14
    1878:	ff 1c       	adc	r15, r15
    187a:	00 1f       	adc	r16, r16
    187c:	11 1f       	adc	r17, r17
    187e:	0a 94       	dec	r0
    1880:	d2 f7       	brpl	.-12     	; 0x1876 <__umoddi3+0x854>
    1882:	ed a2       	std	Y+37, r14	; 0x25
    1884:	fe a2       	std	Y+38, r15	; 0x26
    1886:	0f a3       	std	Y+39, r16	; 0x27
    1888:	18 a7       	std	Y+40, r17	; 0x28
    188a:	64 01       	movw	r12, r8
    188c:	53 01       	movw	r10, r6
    188e:	66 96       	adiw	r28, 0x16	; 22
    1890:	0f ac       	ldd	r0, Y+63	; 0x3f
    1892:	66 97       	sbiw	r28, 0x16	; 22
    1894:	04 c0       	rjmp	.+8      	; 0x189e <__umoddi3+0x87c>
    1896:	d6 94       	lsr	r13
    1898:	c7 94       	ror	r12
    189a:	b7 94       	ror	r11
    189c:	a7 94       	ror	r10
    189e:	0a 94       	dec	r0
    18a0:	d2 f7       	brpl	.-12     	; 0x1896 <__umoddi3+0x874>
    18a2:	a4 01       	movw	r20, r8
    18a4:	93 01       	movw	r18, r6
    18a6:	67 96       	adiw	r28, 0x17	; 23
    18a8:	0f ac       	ldd	r0, Y+63	; 0x3f
    18aa:	67 97       	sbiw	r28, 0x17	; 23
    18ac:	04 c0       	rjmp	.+8      	; 0x18b6 <__umoddi3+0x894>
    18ae:	22 0f       	add	r18, r18
    18b0:	33 1f       	adc	r19, r19
    18b2:	44 1f       	adc	r20, r20
    18b4:	55 1f       	adc	r21, r21
    18b6:	0a 94       	dec	r0
    18b8:	d2 f7       	brpl	.-12     	; 0x18ae <__umoddi3+0x88c>
    18ba:	6c 96       	adiw	r28, 0x1c	; 28
    18bc:	8c ad       	ldd	r24, Y+60	; 0x3c
    18be:	9d ad       	ldd	r25, Y+61	; 0x3d
    18c0:	ae ad       	ldd	r26, Y+62	; 0x3e
    18c2:	bf ad       	ldd	r27, Y+63	; 0x3f
    18c4:	6c 97       	sbiw	r28, 0x1c	; 28
    18c6:	66 96       	adiw	r28, 0x16	; 22
    18c8:	0f ac       	ldd	r0, Y+63	; 0x3f
    18ca:	66 97       	sbiw	r28, 0x16	; 22
    18cc:	04 c0       	rjmp	.+8      	; 0x18d6 <__umoddi3+0x8b4>
    18ce:	b6 95       	lsr	r27
    18d0:	a7 95       	ror	r26
    18d2:	97 95       	ror	r25
    18d4:	87 95       	ror	r24
    18d6:	0a 94       	dec	r0
    18d8:	d2 f7       	brpl	.-12     	; 0x18ce <__umoddi3+0x8ac>
    18da:	3c 01       	movw	r6, r24
    18dc:	4d 01       	movw	r8, r26
    18de:	62 2a       	or	r6, r18
    18e0:	73 2a       	or	r7, r19
    18e2:	84 2a       	or	r8, r20
    18e4:	95 2a       	or	r9, r21
    18e6:	69 a2       	std	Y+33, r6	; 0x21
    18e8:	7a a2       	std	Y+34, r7	; 0x22
    18ea:	8b a2       	std	Y+35, r8	; 0x23
    18ec:	9c a2       	std	Y+36, r9	; 0x24
    18ee:	6c 96       	adiw	r28, 0x1c	; 28
    18f0:	ec ac       	ldd	r14, Y+60	; 0x3c
    18f2:	fd ac       	ldd	r15, Y+61	; 0x3d
    18f4:	0e ad       	ldd	r16, Y+62	; 0x3e
    18f6:	1f ad       	ldd	r17, Y+63	; 0x3f
    18f8:	6c 97       	sbiw	r28, 0x1c	; 28
    18fa:	67 96       	adiw	r28, 0x17	; 23
    18fc:	0f ac       	ldd	r0, Y+63	; 0x3f
    18fe:	67 97       	sbiw	r28, 0x17	; 23
    1900:	04 c0       	rjmp	.+8      	; 0x190a <__umoddi3+0x8e8>
    1902:	ee 0c       	add	r14, r14
    1904:	ff 1c       	adc	r15, r15
    1906:	00 1f       	adc	r16, r16
    1908:	11 1f       	adc	r17, r17
    190a:	0a 94       	dec	r0
    190c:	d2 f7       	brpl	.-12     	; 0x1902 <__umoddi3+0x8e0>
    190e:	ed 8e       	std	Y+29, r14	; 0x1d
    1910:	fe 8e       	std	Y+30, r15	; 0x1e
    1912:	0f 8f       	std	Y+31, r16	; 0x1f
    1914:	18 a3       	std	Y+32, r17	; 0x20
    1916:	49 a5       	ldd	r20, Y+41	; 0x29
    1918:	5a a5       	ldd	r21, Y+42	; 0x2a
    191a:	6b a5       	ldd	r22, Y+43	; 0x2b
    191c:	7c a5       	ldd	r23, Y+44	; 0x2c
    191e:	3b 01       	movw	r6, r22
    1920:	88 24       	eor	r8, r8
    1922:	99 24       	eor	r9, r9
    1924:	60 70       	andi	r22, 0x00	; 0
    1926:	70 70       	andi	r23, 0x00	; 0
    1928:	2d 96       	adiw	r28, 0x0d	; 13
    192a:	4c af       	std	Y+60, r20	; 0x3c
    192c:	5d af       	std	Y+61, r21	; 0x3d
    192e:	6e af       	std	Y+62, r22	; 0x3e
    1930:	7f af       	std	Y+63, r23	; 0x3f
    1932:	2d 97       	sbiw	r28, 0x0d	; 13
    1934:	c6 01       	movw	r24, r12
    1936:	b5 01       	movw	r22, r10
    1938:	a4 01       	movw	r20, r8
    193a:	93 01       	movw	r18, r6
    193c:	0e 94 ef 2d 	call	0x5bde	; 0x5bde <__udivmodsi4>
    1940:	7b 01       	movw	r14, r22
    1942:	8c 01       	movw	r16, r24
    1944:	c6 01       	movw	r24, r12
    1946:	b5 01       	movw	r22, r10
    1948:	a4 01       	movw	r20, r8
    194a:	93 01       	movw	r18, r6
    194c:	0e 94 ef 2d 	call	0x5bde	; 0x5bde <__udivmodsi4>
    1950:	c9 01       	movw	r24, r18
    1952:	da 01       	movw	r26, r20
    1954:	1c 01       	movw	r2, r24
    1956:	2d 01       	movw	r4, r26
    1958:	c2 01       	movw	r24, r4
    195a:	b1 01       	movw	r22, r2
    195c:	2d 96       	adiw	r28, 0x0d	; 13
    195e:	2c ad       	ldd	r18, Y+60	; 0x3c
    1960:	3d ad       	ldd	r19, Y+61	; 0x3d
    1962:	4e ad       	ldd	r20, Y+62	; 0x3e
    1964:	5f ad       	ldd	r21, Y+63	; 0x3f
    1966:	2d 97       	sbiw	r28, 0x0d	; 13
    1968:	0e 94 b5 2d 	call	0x5b6a	; 0x5b6a <__mulsi3>
    196c:	9b 01       	movw	r18, r22
    196e:	ac 01       	movw	r20, r24
    1970:	87 01       	movw	r16, r14
    1972:	ff 24       	eor	r15, r15
    1974:	ee 24       	eor	r14, r14
    1976:	a9 a0       	ldd	r10, Y+33	; 0x21
    1978:	ba a0       	ldd	r11, Y+34	; 0x22
    197a:	cb a0       	ldd	r12, Y+35	; 0x23
    197c:	dc a0       	ldd	r13, Y+36	; 0x24
    197e:	c6 01       	movw	r24, r12
    1980:	aa 27       	eor	r26, r26
    1982:	bb 27       	eor	r27, r27
    1984:	57 01       	movw	r10, r14
    1986:	68 01       	movw	r12, r16
    1988:	a8 2a       	or	r10, r24
    198a:	b9 2a       	or	r11, r25
    198c:	ca 2a       	or	r12, r26
    198e:	db 2a       	or	r13, r27
    1990:	a2 16       	cp	r10, r18
    1992:	b3 06       	cpc	r11, r19
    1994:	c4 06       	cpc	r12, r20
    1996:	d5 06       	cpc	r13, r21
    1998:	00 f5       	brcc	.+64     	; 0x19da <__umoddi3+0x9b8>
    199a:	08 94       	sec
    199c:	21 08       	sbc	r2, r1
    199e:	31 08       	sbc	r3, r1
    19a0:	41 08       	sbc	r4, r1
    19a2:	51 08       	sbc	r5, r1
    19a4:	e9 a4       	ldd	r14, Y+41	; 0x29
    19a6:	fa a4       	ldd	r15, Y+42	; 0x2a
    19a8:	0b a5       	ldd	r16, Y+43	; 0x2b
    19aa:	1c a5       	ldd	r17, Y+44	; 0x2c
    19ac:	ae 0c       	add	r10, r14
    19ae:	bf 1c       	adc	r11, r15
    19b0:	c0 1e       	adc	r12, r16
    19b2:	d1 1e       	adc	r13, r17
    19b4:	ae 14       	cp	r10, r14
    19b6:	bf 04       	cpc	r11, r15
    19b8:	c0 06       	cpc	r12, r16
    19ba:	d1 06       	cpc	r13, r17
    19bc:	70 f0       	brcs	.+28     	; 0x19da <__umoddi3+0x9b8>
    19be:	a2 16       	cp	r10, r18
    19c0:	b3 06       	cpc	r11, r19
    19c2:	c4 06       	cpc	r12, r20
    19c4:	d5 06       	cpc	r13, r21
    19c6:	48 f4       	brcc	.+18     	; 0x19da <__umoddi3+0x9b8>
    19c8:	08 94       	sec
    19ca:	21 08       	sbc	r2, r1
    19cc:	31 08       	sbc	r3, r1
    19ce:	41 08       	sbc	r4, r1
    19d0:	51 08       	sbc	r5, r1
    19d2:	ae 0c       	add	r10, r14
    19d4:	bf 1c       	adc	r11, r15
    19d6:	c0 1e       	adc	r12, r16
    19d8:	d1 1e       	adc	r13, r17
    19da:	a2 1a       	sub	r10, r18
    19dc:	b3 0a       	sbc	r11, r19
    19de:	c4 0a       	sbc	r12, r20
    19e0:	d5 0a       	sbc	r13, r21
    19e2:	c6 01       	movw	r24, r12
    19e4:	b5 01       	movw	r22, r10
    19e6:	a4 01       	movw	r20, r8
    19e8:	93 01       	movw	r18, r6
    19ea:	0e 94 ef 2d 	call	0x5bde	; 0x5bde <__udivmodsi4>
    19ee:	7b 01       	movw	r14, r22
    19f0:	8c 01       	movw	r16, r24
    19f2:	c6 01       	movw	r24, r12
    19f4:	b5 01       	movw	r22, r10
    19f6:	a4 01       	movw	r20, r8
    19f8:	93 01       	movw	r18, r6
    19fa:	0e 94 ef 2d 	call	0x5bde	; 0x5bde <__udivmodsi4>
    19fe:	c9 01       	movw	r24, r18
    1a00:	da 01       	movw	r26, r20
    1a02:	3c 01       	movw	r6, r24
    1a04:	4d 01       	movw	r8, r26
    1a06:	c4 01       	movw	r24, r8
    1a08:	b3 01       	movw	r22, r6
    1a0a:	2d 96       	adiw	r28, 0x0d	; 13
    1a0c:	2c ad       	ldd	r18, Y+60	; 0x3c
    1a0e:	3d ad       	ldd	r19, Y+61	; 0x3d
    1a10:	4e ad       	ldd	r20, Y+62	; 0x3e
    1a12:	5f ad       	ldd	r21, Y+63	; 0x3f
    1a14:	2d 97       	sbiw	r28, 0x0d	; 13
    1a16:	0e 94 b5 2d 	call	0x5b6a	; 0x5b6a <__mulsi3>
    1a1a:	9b 01       	movw	r18, r22
    1a1c:	ac 01       	movw	r20, r24
    1a1e:	87 01       	movw	r16, r14
    1a20:	ff 24       	eor	r15, r15
    1a22:	ee 24       	eor	r14, r14
    1a24:	89 a1       	ldd	r24, Y+33	; 0x21
    1a26:	9a a1       	ldd	r25, Y+34	; 0x22
    1a28:	ab a1       	ldd	r26, Y+35	; 0x23
    1a2a:	bc a1       	ldd	r27, Y+36	; 0x24
    1a2c:	a0 70       	andi	r26, 0x00	; 0
    1a2e:	b0 70       	andi	r27, 0x00	; 0
    1a30:	57 01       	movw	r10, r14
    1a32:	68 01       	movw	r12, r16
    1a34:	a8 2a       	or	r10, r24
    1a36:	b9 2a       	or	r11, r25
    1a38:	ca 2a       	or	r12, r26
    1a3a:	db 2a       	or	r13, r27
    1a3c:	a2 16       	cp	r10, r18
    1a3e:	b3 06       	cpc	r11, r19
    1a40:	c4 06       	cpc	r12, r20
    1a42:	d5 06       	cpc	r13, r21
    1a44:	00 f5       	brcc	.+64     	; 0x1a86 <__umoddi3+0xa64>
    1a46:	08 94       	sec
    1a48:	61 08       	sbc	r6, r1
    1a4a:	71 08       	sbc	r7, r1
    1a4c:	81 08       	sbc	r8, r1
    1a4e:	91 08       	sbc	r9, r1
    1a50:	69 a5       	ldd	r22, Y+41	; 0x29
    1a52:	7a a5       	ldd	r23, Y+42	; 0x2a
    1a54:	8b a5       	ldd	r24, Y+43	; 0x2b
    1a56:	9c a5       	ldd	r25, Y+44	; 0x2c
    1a58:	a6 0e       	add	r10, r22
    1a5a:	b7 1e       	adc	r11, r23
    1a5c:	c8 1e       	adc	r12, r24
    1a5e:	d9 1e       	adc	r13, r25
    1a60:	a6 16       	cp	r10, r22
    1a62:	b7 06       	cpc	r11, r23
    1a64:	c8 06       	cpc	r12, r24
    1a66:	d9 06       	cpc	r13, r25
    1a68:	70 f0       	brcs	.+28     	; 0x1a86 <__umoddi3+0xa64>
    1a6a:	a2 16       	cp	r10, r18
    1a6c:	b3 06       	cpc	r11, r19
    1a6e:	c4 06       	cpc	r12, r20
    1a70:	d5 06       	cpc	r13, r21
    1a72:	48 f4       	brcc	.+18     	; 0x1a86 <__umoddi3+0xa64>
    1a74:	08 94       	sec
    1a76:	61 08       	sbc	r6, r1
    1a78:	71 08       	sbc	r7, r1
    1a7a:	81 08       	sbc	r8, r1
    1a7c:	91 08       	sbc	r9, r1
    1a7e:	a6 0e       	add	r10, r22
    1a80:	b7 1e       	adc	r11, r23
    1a82:	c8 1e       	adc	r12, r24
    1a84:	d9 1e       	adc	r13, r25
    1a86:	d6 01       	movw	r26, r12
    1a88:	c5 01       	movw	r24, r10
    1a8a:	82 1b       	sub	r24, r18
    1a8c:	93 0b       	sbc	r25, r19
    1a8e:	a4 0b       	sbc	r26, r20
    1a90:	b5 0b       	sbc	r27, r21
    1a92:	89 8f       	std	Y+25, r24	; 0x19
    1a94:	9a 8f       	std	Y+26, r25	; 0x1a
    1a96:	ab 8f       	std	Y+27, r26	; 0x1b
    1a98:	bc 8f       	std	Y+28, r27	; 0x1c
    1a9a:	d1 01       	movw	r26, r2
    1a9c:	99 27       	eor	r25, r25
    1a9e:	88 27       	eor	r24, r24
    1aa0:	84 01       	movw	r16, r8
    1aa2:	73 01       	movw	r14, r6
    1aa4:	e8 2a       	or	r14, r24
    1aa6:	f9 2a       	or	r15, r25
    1aa8:	0a 2b       	or	r16, r26
    1aaa:	1b 2b       	or	r17, r27
    1aac:	4f ef       	ldi	r20, 0xFF	; 255
    1aae:	a4 2e       	mov	r10, r20
    1ab0:	4f ef       	ldi	r20, 0xFF	; 255
    1ab2:	b4 2e       	mov	r11, r20
    1ab4:	c1 2c       	mov	r12, r1
    1ab6:	d1 2c       	mov	r13, r1
    1ab8:	ae 20       	and	r10, r14
    1aba:	bf 20       	and	r11, r15
    1abc:	c0 22       	and	r12, r16
    1abe:	d1 22       	and	r13, r17
    1ac0:	78 01       	movw	r14, r16
    1ac2:	00 27       	eor	r16, r16
    1ac4:	11 27       	eor	r17, r17
    1ac6:	6d a0       	ldd	r6, Y+37	; 0x25
    1ac8:	7e a0       	ldd	r7, Y+38	; 0x26
    1aca:	8f a0       	ldd	r8, Y+39	; 0x27
    1acc:	98 a4       	ldd	r9, Y+40	; 0x28
    1ace:	4f ef       	ldi	r20, 0xFF	; 255
    1ad0:	5f ef       	ldi	r21, 0xFF	; 255
    1ad2:	60 e0       	ldi	r22, 0x00	; 0
    1ad4:	70 e0       	ldi	r23, 0x00	; 0
    1ad6:	64 22       	and	r6, r20
    1ad8:	75 22       	and	r7, r21
    1ada:	86 22       	and	r8, r22
    1adc:	97 22       	and	r9, r23
    1ade:	8d a1       	ldd	r24, Y+37	; 0x25
    1ae0:	9e a1       	ldd	r25, Y+38	; 0x26
    1ae2:	af a1       	ldd	r26, Y+39	; 0x27
    1ae4:	b8 a5       	ldd	r27, Y+40	; 0x28
    1ae6:	bd 01       	movw	r22, r26
    1ae8:	88 27       	eor	r24, r24
    1aea:	99 27       	eor	r25, r25
    1aec:	65 96       	adiw	r28, 0x15	; 21
    1aee:	6c af       	std	Y+60, r22	; 0x3c
    1af0:	7d af       	std	Y+61, r23	; 0x3d
    1af2:	8e af       	std	Y+62, r24	; 0x3e
    1af4:	9f af       	std	Y+63, r25	; 0x3f
    1af6:	65 97       	sbiw	r28, 0x15	; 21
    1af8:	c6 01       	movw	r24, r12
    1afa:	b5 01       	movw	r22, r10
    1afc:	a4 01       	movw	r20, r8
    1afe:	93 01       	movw	r18, r6
    1b00:	0e 94 b5 2d 	call	0x5b6a	; 0x5b6a <__mulsi3>
    1b04:	61 96       	adiw	r28, 0x11	; 17
    1b06:	6c af       	std	Y+60, r22	; 0x3c
    1b08:	7d af       	std	Y+61, r23	; 0x3d
    1b0a:	8e af       	std	Y+62, r24	; 0x3e
    1b0c:	9f af       	std	Y+63, r25	; 0x3f
    1b0e:	61 97       	sbiw	r28, 0x11	; 17
    1b10:	c6 01       	movw	r24, r12
    1b12:	b5 01       	movw	r22, r10
    1b14:	65 96       	adiw	r28, 0x15	; 21
    1b16:	2c ad       	ldd	r18, Y+60	; 0x3c
    1b18:	3d ad       	ldd	r19, Y+61	; 0x3d
    1b1a:	4e ad       	ldd	r20, Y+62	; 0x3e
    1b1c:	5f ad       	ldd	r21, Y+63	; 0x3f
    1b1e:	65 97       	sbiw	r28, 0x15	; 21
    1b20:	0e 94 b5 2d 	call	0x5b6a	; 0x5b6a <__mulsi3>
    1b24:	1b 01       	movw	r2, r22
    1b26:	2c 01       	movw	r4, r24
    1b28:	c8 01       	movw	r24, r16
    1b2a:	b7 01       	movw	r22, r14
    1b2c:	a4 01       	movw	r20, r8
    1b2e:	93 01       	movw	r18, r6
    1b30:	0e 94 b5 2d 	call	0x5b6a	; 0x5b6a <__mulsi3>
    1b34:	5b 01       	movw	r10, r22
    1b36:	6c 01       	movw	r12, r24
    1b38:	c8 01       	movw	r24, r16
    1b3a:	b7 01       	movw	r22, r14
    1b3c:	65 96       	adiw	r28, 0x15	; 21
    1b3e:	2c ad       	ldd	r18, Y+60	; 0x3c
    1b40:	3d ad       	ldd	r19, Y+61	; 0x3d
    1b42:	4e ad       	ldd	r20, Y+62	; 0x3e
    1b44:	5f ad       	ldd	r21, Y+63	; 0x3f
    1b46:	65 97       	sbiw	r28, 0x15	; 21
    1b48:	0e 94 b5 2d 	call	0x5b6a	; 0x5b6a <__mulsi3>
    1b4c:	7b 01       	movw	r14, r22
    1b4e:	8c 01       	movw	r16, r24
    1b50:	a6 01       	movw	r20, r12
    1b52:	95 01       	movw	r18, r10
    1b54:	22 0d       	add	r18, r2
    1b56:	33 1d       	adc	r19, r3
    1b58:	44 1d       	adc	r20, r4
    1b5a:	55 1d       	adc	r21, r5
    1b5c:	61 96       	adiw	r28, 0x11	; 17
    1b5e:	6c ac       	ldd	r6, Y+60	; 0x3c
    1b60:	7d ac       	ldd	r7, Y+61	; 0x3d
    1b62:	8e ac       	ldd	r8, Y+62	; 0x3e
    1b64:	9f ac       	ldd	r9, Y+63	; 0x3f
    1b66:	61 97       	sbiw	r28, 0x11	; 17
    1b68:	c4 01       	movw	r24, r8
    1b6a:	aa 27       	eor	r26, r26
    1b6c:	bb 27       	eor	r27, r27
    1b6e:	28 0f       	add	r18, r24
    1b70:	39 1f       	adc	r19, r25
    1b72:	4a 1f       	adc	r20, r26
    1b74:	5b 1f       	adc	r21, r27
    1b76:	2a 15       	cp	r18, r10
    1b78:	3b 05       	cpc	r19, r11
    1b7a:	4c 05       	cpc	r20, r12
    1b7c:	5d 05       	cpc	r21, r13
    1b7e:	48 f4       	brcc	.+18     	; 0x1b92 <__umoddi3+0xb70>
    1b80:	81 2c       	mov	r8, r1
    1b82:	91 2c       	mov	r9, r1
    1b84:	e1 e0       	ldi	r30, 0x01	; 1
    1b86:	ae 2e       	mov	r10, r30
    1b88:	b1 2c       	mov	r11, r1
    1b8a:	e8 0c       	add	r14, r8
    1b8c:	f9 1c       	adc	r15, r9
    1b8e:	0a 1d       	adc	r16, r10
    1b90:	1b 1d       	adc	r17, r11
    1b92:	ca 01       	movw	r24, r20
    1b94:	aa 27       	eor	r26, r26
    1b96:	bb 27       	eor	r27, r27
    1b98:	57 01       	movw	r10, r14
    1b9a:	68 01       	movw	r12, r16
    1b9c:	a8 0e       	add	r10, r24
    1b9e:	b9 1e       	adc	r11, r25
    1ba0:	ca 1e       	adc	r12, r26
    1ba2:	db 1e       	adc	r13, r27
    1ba4:	a9 01       	movw	r20, r18
    1ba6:	33 27       	eor	r19, r19
    1ba8:	22 27       	eor	r18, r18
    1baa:	61 96       	adiw	r28, 0x11	; 17
    1bac:	8c ad       	ldd	r24, Y+60	; 0x3c
    1bae:	9d ad       	ldd	r25, Y+61	; 0x3d
    1bb0:	ae ad       	ldd	r26, Y+62	; 0x3e
    1bb2:	bf ad       	ldd	r27, Y+63	; 0x3f
    1bb4:	61 97       	sbiw	r28, 0x11	; 17
    1bb6:	a0 70       	andi	r26, 0x00	; 0
    1bb8:	b0 70       	andi	r27, 0x00	; 0
    1bba:	28 0f       	add	r18, r24
    1bbc:	39 1f       	adc	r19, r25
    1bbe:	4a 1f       	adc	r20, r26
    1bc0:	5b 1f       	adc	r21, r27
    1bc2:	e9 8c       	ldd	r14, Y+25	; 0x19
    1bc4:	fa 8c       	ldd	r15, Y+26	; 0x1a
    1bc6:	0b 8d       	ldd	r16, Y+27	; 0x1b
    1bc8:	1c 8d       	ldd	r17, Y+28	; 0x1c
    1bca:	ea 14       	cp	r14, r10
    1bcc:	fb 04       	cpc	r15, r11
    1bce:	0c 05       	cpc	r16, r12
    1bd0:	1d 05       	cpc	r17, r13
    1bd2:	70 f0       	brcs	.+28     	; 0x1bf0 <__umoddi3+0xbce>
    1bd4:	ae 14       	cp	r10, r14
    1bd6:	bf 04       	cpc	r11, r15
    1bd8:	c0 06       	cpc	r12, r16
    1bda:	d1 06       	cpc	r13, r17
    1bdc:	69 f5       	brne	.+90     	; 0x1c38 <__umoddi3+0xc16>
    1bde:	6d 8d       	ldd	r22, Y+29	; 0x1d
    1be0:	7e 8d       	ldd	r23, Y+30	; 0x1e
    1be2:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1be4:	98 a1       	ldd	r25, Y+32	; 0x20
    1be6:	62 17       	cp	r22, r18
    1be8:	73 07       	cpc	r23, r19
    1bea:	84 07       	cpc	r24, r20
    1bec:	95 07       	cpc	r25, r21
    1bee:	20 f5       	brcc	.+72     	; 0x1c38 <__umoddi3+0xc16>
    1bf0:	da 01       	movw	r26, r20
    1bf2:	c9 01       	movw	r24, r18
    1bf4:	6d a0       	ldd	r6, Y+37	; 0x25
    1bf6:	7e a0       	ldd	r7, Y+38	; 0x26
    1bf8:	8f a0       	ldd	r8, Y+39	; 0x27
    1bfa:	98 a4       	ldd	r9, Y+40	; 0x28
    1bfc:	86 19       	sub	r24, r6
    1bfe:	97 09       	sbc	r25, r7
    1c00:	a8 09       	sbc	r26, r8
    1c02:	b9 09       	sbc	r27, r9
    1c04:	e9 a4       	ldd	r14, Y+41	; 0x29
    1c06:	fa a4       	ldd	r15, Y+42	; 0x2a
    1c08:	0b a5       	ldd	r16, Y+43	; 0x2b
    1c0a:	1c a5       	ldd	r17, Y+44	; 0x2c
    1c0c:	ae 18       	sub	r10, r14
    1c0e:	bf 08       	sbc	r11, r15
    1c10:	c0 0a       	sbc	r12, r16
    1c12:	d1 0a       	sbc	r13, r17
    1c14:	ee 24       	eor	r14, r14
    1c16:	ff 24       	eor	r15, r15
    1c18:	87 01       	movw	r16, r14
    1c1a:	28 17       	cp	r18, r24
    1c1c:	39 07       	cpc	r19, r25
    1c1e:	4a 07       	cpc	r20, r26
    1c20:	5b 07       	cpc	r21, r27
    1c22:	28 f4       	brcc	.+10     	; 0x1c2e <__umoddi3+0xc0c>
    1c24:	21 e0       	ldi	r18, 0x01	; 1
    1c26:	e2 2e       	mov	r14, r18
    1c28:	f1 2c       	mov	r15, r1
    1c2a:	01 2d       	mov	r16, r1
    1c2c:	11 2d       	mov	r17, r1
    1c2e:	ae 18       	sub	r10, r14
    1c30:	bf 08       	sbc	r11, r15
    1c32:	c0 0a       	sbc	r12, r16
    1c34:	d1 0a       	sbc	r13, r17
    1c36:	02 c0       	rjmp	.+4      	; 0x1c3c <__umoddi3+0xc1a>
    1c38:	da 01       	movw	r26, r20
    1c3a:	c9 01       	movw	r24, r18
    1c3c:	6d 8c       	ldd	r6, Y+29	; 0x1d
    1c3e:	7e 8c       	ldd	r7, Y+30	; 0x1e
    1c40:	8f 8c       	ldd	r8, Y+31	; 0x1f
    1c42:	98 a0       	ldd	r9, Y+32	; 0x20
    1c44:	68 1a       	sub	r6, r24
    1c46:	79 0a       	sbc	r7, r25
    1c48:	8a 0a       	sbc	r8, r26
    1c4a:	9b 0a       	sbc	r9, r27
    1c4c:	49 8d       	ldd	r20, Y+25	; 0x19
    1c4e:	5a 8d       	ldd	r21, Y+26	; 0x1a
    1c50:	6b 8d       	ldd	r22, Y+27	; 0x1b
    1c52:	7c 8d       	ldd	r23, Y+28	; 0x1c
    1c54:	4a 19       	sub	r20, r10
    1c56:	5b 09       	sbc	r21, r11
    1c58:	6c 09       	sbc	r22, r12
    1c5a:	7d 09       	sbc	r23, r13
    1c5c:	5a 01       	movw	r10, r20
    1c5e:	6b 01       	movw	r12, r22
    1c60:	22 24       	eor	r2, r2
    1c62:	33 24       	eor	r3, r3
    1c64:	21 01       	movw	r4, r2
    1c66:	6d 8d       	ldd	r22, Y+29	; 0x1d
    1c68:	7e 8d       	ldd	r23, Y+30	; 0x1e
    1c6a:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1c6c:	98 a1       	ldd	r25, Y+32	; 0x20
    1c6e:	66 15       	cp	r22, r6
    1c70:	77 05       	cpc	r23, r7
    1c72:	88 05       	cpc	r24, r8
    1c74:	99 05       	cpc	r25, r9
    1c76:	28 f4       	brcc	.+10     	; 0x1c82 <__umoddi3+0xc60>
    1c78:	81 e0       	ldi	r24, 0x01	; 1
    1c7a:	28 2e       	mov	r2, r24
    1c7c:	31 2c       	mov	r3, r1
    1c7e:	41 2c       	mov	r4, r1
    1c80:	51 2c       	mov	r5, r1
    1c82:	86 01       	movw	r16, r12
    1c84:	75 01       	movw	r14, r10
    1c86:	e2 18       	sub	r14, r2
    1c88:	f3 08       	sbc	r15, r3
    1c8a:	04 09       	sbc	r16, r4
    1c8c:	15 09       	sbc	r17, r5
    1c8e:	a8 01       	movw	r20, r16
    1c90:	97 01       	movw	r18, r14
    1c92:	66 96       	adiw	r28, 0x16	; 22
    1c94:	0f ac       	ldd	r0, Y+63	; 0x3f
    1c96:	66 97       	sbiw	r28, 0x16	; 22
    1c98:	04 c0       	rjmp	.+8      	; 0x1ca2 <__umoddi3+0xc80>
    1c9a:	22 0f       	add	r18, r18
    1c9c:	33 1f       	adc	r19, r19
    1c9e:	44 1f       	adc	r20, r20
    1ca0:	55 1f       	adc	r21, r21
    1ca2:	0a 94       	dec	r0
    1ca4:	d2 f7       	brpl	.-12     	; 0x1c9a <__umoddi3+0xc78>
    1ca6:	d4 01       	movw	r26, r8
    1ca8:	c3 01       	movw	r24, r6
    1caa:	67 96       	adiw	r28, 0x17	; 23
    1cac:	0f ac       	ldd	r0, Y+63	; 0x3f
    1cae:	67 97       	sbiw	r28, 0x17	; 23
    1cb0:	04 c0       	rjmp	.+8      	; 0x1cba <__umoddi3+0xc98>
    1cb2:	b6 95       	lsr	r27
    1cb4:	a7 95       	ror	r26
    1cb6:	97 95       	ror	r25
    1cb8:	87 95       	ror	r24
    1cba:	0a 94       	dec	r0
    1cbc:	d2 f7       	brpl	.-12     	; 0x1cb2 <__umoddi3+0xc90>
    1cbe:	28 2b       	or	r18, r24
    1cc0:	39 2b       	or	r19, r25
    1cc2:	4a 2b       	or	r20, r26
    1cc4:	5b 2b       	or	r21, r27
    1cc6:	29 8b       	std	Y+17, r18	; 0x11
    1cc8:	3a 8b       	std	Y+18, r19	; 0x12
    1cca:	4b 8b       	std	Y+19, r20	; 0x13
    1ccc:	5c 8b       	std	Y+20, r21	; 0x14
    1cce:	67 96       	adiw	r28, 0x17	; 23
    1cd0:	0f ac       	ldd	r0, Y+63	; 0x3f
    1cd2:	67 97       	sbiw	r28, 0x17	; 23
    1cd4:	04 c0       	rjmp	.+8      	; 0x1cde <__umoddi3+0xcbc>
    1cd6:	16 95       	lsr	r17
    1cd8:	07 95       	ror	r16
    1cda:	f7 94       	ror	r15
    1cdc:	e7 94       	ror	r14
    1cde:	0a 94       	dec	r0
    1ce0:	d2 f7       	brpl	.-12     	; 0x1cd6 <__umoddi3+0xcb4>
    1ce2:	ed 8a       	std	Y+21, r14	; 0x15
    1ce4:	fe 8a       	std	Y+22, r15	; 0x16
    1ce6:	0f 8b       	std	Y+23, r16	; 0x17
    1ce8:	18 8f       	std	Y+24, r17	; 0x18
    1cea:	3a 89       	ldd	r19, Y+18	; 0x12
    1cec:	4b 89       	ldd	r20, Y+19	; 0x13
    1cee:	5c 89       	ldd	r21, Y+20	; 0x14
    1cf0:	6e 2d       	mov	r22, r14
    1cf2:	7e 89       	ldd	r23, Y+22	; 0x16
    1cf4:	8f 89       	ldd	r24, Y+23	; 0x17
    1cf6:	98 8d       	ldd	r25, Y+24	; 0x18
    1cf8:	c5 5a       	subi	r28, 0xA5	; 165
    1cfa:	df 4f       	sbci	r29, 0xFF	; 255
    1cfc:	e2 e1       	ldi	r30, 0x12	; 18
    1cfe:	0c 94 2d 2e 	jmp	0x5c5a	; 0x5c5a <__epilogue_restores__>

00001d02 <_fpadd_parts>:
    1d02:	a0 e0       	ldi	r26, 0x00	; 0
    1d04:	b0 e0       	ldi	r27, 0x00	; 0
    1d06:	e7 e8       	ldi	r30, 0x87	; 135
    1d08:	fe e0       	ldi	r31, 0x0E	; 14
    1d0a:	0c 94 11 2e 	jmp	0x5c22	; 0x5c22 <__prologue_saves__>
    1d0e:	dc 01       	movw	r26, r24
    1d10:	2b 01       	movw	r4, r22
    1d12:	fa 01       	movw	r30, r20
    1d14:	9c 91       	ld	r25, X
    1d16:	92 30       	cpi	r25, 0x02	; 2
    1d18:	08 f4       	brcc	.+2      	; 0x1d1c <_fpadd_parts+0x1a>
    1d1a:	39 c1       	rjmp	.+626    	; 0x1f8e <_fpadd_parts+0x28c>
    1d1c:	eb 01       	movw	r28, r22
    1d1e:	88 81       	ld	r24, Y
    1d20:	82 30       	cpi	r24, 0x02	; 2
    1d22:	08 f4       	brcc	.+2      	; 0x1d26 <_fpadd_parts+0x24>
    1d24:	33 c1       	rjmp	.+614    	; 0x1f8c <_fpadd_parts+0x28a>
    1d26:	94 30       	cpi	r25, 0x04	; 4
    1d28:	69 f4       	brne	.+26     	; 0x1d44 <_fpadd_parts+0x42>
    1d2a:	84 30       	cpi	r24, 0x04	; 4
    1d2c:	09 f0       	breq	.+2      	; 0x1d30 <_fpadd_parts+0x2e>
    1d2e:	2f c1       	rjmp	.+606    	; 0x1f8e <_fpadd_parts+0x28c>
    1d30:	11 96       	adiw	r26, 0x01	; 1
    1d32:	9c 91       	ld	r25, X
    1d34:	11 97       	sbiw	r26, 0x01	; 1
    1d36:	89 81       	ldd	r24, Y+1	; 0x01
    1d38:	98 17       	cp	r25, r24
    1d3a:	09 f4       	brne	.+2      	; 0x1d3e <_fpadd_parts+0x3c>
    1d3c:	28 c1       	rjmp	.+592    	; 0x1f8e <_fpadd_parts+0x28c>
    1d3e:	a0 e6       	ldi	r26, 0x60	; 96
    1d40:	b0 e0       	ldi	r27, 0x00	; 0
    1d42:	25 c1       	rjmp	.+586    	; 0x1f8e <_fpadd_parts+0x28c>
    1d44:	84 30       	cpi	r24, 0x04	; 4
    1d46:	09 f4       	brne	.+2      	; 0x1d4a <_fpadd_parts+0x48>
    1d48:	21 c1       	rjmp	.+578    	; 0x1f8c <_fpadd_parts+0x28a>
    1d4a:	82 30       	cpi	r24, 0x02	; 2
    1d4c:	a9 f4       	brne	.+42     	; 0x1d78 <_fpadd_parts+0x76>
    1d4e:	92 30       	cpi	r25, 0x02	; 2
    1d50:	09 f0       	breq	.+2      	; 0x1d54 <_fpadd_parts+0x52>
    1d52:	1d c1       	rjmp	.+570    	; 0x1f8e <_fpadd_parts+0x28c>
    1d54:	9a 01       	movw	r18, r20
    1d56:	ad 01       	movw	r20, r26
    1d58:	88 e0       	ldi	r24, 0x08	; 8
    1d5a:	ea 01       	movw	r28, r20
    1d5c:	09 90       	ld	r0, Y+
    1d5e:	ae 01       	movw	r20, r28
    1d60:	e9 01       	movw	r28, r18
    1d62:	09 92       	st	Y+, r0
    1d64:	9e 01       	movw	r18, r28
    1d66:	81 50       	subi	r24, 0x01	; 1
    1d68:	c1 f7       	brne	.-16     	; 0x1d5a <_fpadd_parts+0x58>
    1d6a:	e2 01       	movw	r28, r4
    1d6c:	89 81       	ldd	r24, Y+1	; 0x01
    1d6e:	11 96       	adiw	r26, 0x01	; 1
    1d70:	9c 91       	ld	r25, X
    1d72:	89 23       	and	r24, r25
    1d74:	81 83       	std	Z+1, r24	; 0x01
    1d76:	08 c1       	rjmp	.+528    	; 0x1f88 <_fpadd_parts+0x286>
    1d78:	92 30       	cpi	r25, 0x02	; 2
    1d7a:	09 f4       	brne	.+2      	; 0x1d7e <_fpadd_parts+0x7c>
    1d7c:	07 c1       	rjmp	.+526    	; 0x1f8c <_fpadd_parts+0x28a>
    1d7e:	12 96       	adiw	r26, 0x02	; 2
    1d80:	2d 90       	ld	r2, X+
    1d82:	3c 90       	ld	r3, X
    1d84:	13 97       	sbiw	r26, 0x03	; 3
    1d86:	eb 01       	movw	r28, r22
    1d88:	8a 81       	ldd	r24, Y+2	; 0x02
    1d8a:	9b 81       	ldd	r25, Y+3	; 0x03
    1d8c:	14 96       	adiw	r26, 0x04	; 4
    1d8e:	ad 90       	ld	r10, X+
    1d90:	bd 90       	ld	r11, X+
    1d92:	cd 90       	ld	r12, X+
    1d94:	dc 90       	ld	r13, X
    1d96:	17 97       	sbiw	r26, 0x07	; 7
    1d98:	ec 80       	ldd	r14, Y+4	; 0x04
    1d9a:	fd 80       	ldd	r15, Y+5	; 0x05
    1d9c:	0e 81       	ldd	r16, Y+6	; 0x06
    1d9e:	1f 81       	ldd	r17, Y+7	; 0x07
    1da0:	91 01       	movw	r18, r2
    1da2:	28 1b       	sub	r18, r24
    1da4:	39 0b       	sbc	r19, r25
    1da6:	b9 01       	movw	r22, r18
    1da8:	37 ff       	sbrs	r19, 7
    1daa:	04 c0       	rjmp	.+8      	; 0x1db4 <_fpadd_parts+0xb2>
    1dac:	66 27       	eor	r22, r22
    1dae:	77 27       	eor	r23, r23
    1db0:	62 1b       	sub	r22, r18
    1db2:	73 0b       	sbc	r23, r19
    1db4:	60 32       	cpi	r22, 0x20	; 32
    1db6:	71 05       	cpc	r23, r1
    1db8:	0c f0       	brlt	.+2      	; 0x1dbc <_fpadd_parts+0xba>
    1dba:	61 c0       	rjmp	.+194    	; 0x1e7e <_fpadd_parts+0x17c>
    1dbc:	12 16       	cp	r1, r18
    1dbe:	13 06       	cpc	r1, r19
    1dc0:	6c f5       	brge	.+90     	; 0x1e1c <_fpadd_parts+0x11a>
    1dc2:	37 01       	movw	r6, r14
    1dc4:	48 01       	movw	r8, r16
    1dc6:	06 2e       	mov	r0, r22
    1dc8:	04 c0       	rjmp	.+8      	; 0x1dd2 <_fpadd_parts+0xd0>
    1dca:	96 94       	lsr	r9
    1dcc:	87 94       	ror	r8
    1dce:	77 94       	ror	r7
    1dd0:	67 94       	ror	r6
    1dd2:	0a 94       	dec	r0
    1dd4:	d2 f7       	brpl	.-12     	; 0x1dca <_fpadd_parts+0xc8>
    1dd6:	21 e0       	ldi	r18, 0x01	; 1
    1dd8:	30 e0       	ldi	r19, 0x00	; 0
    1dda:	40 e0       	ldi	r20, 0x00	; 0
    1ddc:	50 e0       	ldi	r21, 0x00	; 0
    1dde:	04 c0       	rjmp	.+8      	; 0x1de8 <_fpadd_parts+0xe6>
    1de0:	22 0f       	add	r18, r18
    1de2:	33 1f       	adc	r19, r19
    1de4:	44 1f       	adc	r20, r20
    1de6:	55 1f       	adc	r21, r21
    1de8:	6a 95       	dec	r22
    1dea:	d2 f7       	brpl	.-12     	; 0x1de0 <_fpadd_parts+0xde>
    1dec:	21 50       	subi	r18, 0x01	; 1
    1dee:	30 40       	sbci	r19, 0x00	; 0
    1df0:	40 40       	sbci	r20, 0x00	; 0
    1df2:	50 40       	sbci	r21, 0x00	; 0
    1df4:	2e 21       	and	r18, r14
    1df6:	3f 21       	and	r19, r15
    1df8:	40 23       	and	r20, r16
    1dfa:	51 23       	and	r21, r17
    1dfc:	21 15       	cp	r18, r1
    1dfe:	31 05       	cpc	r19, r1
    1e00:	41 05       	cpc	r20, r1
    1e02:	51 05       	cpc	r21, r1
    1e04:	21 f0       	breq	.+8      	; 0x1e0e <_fpadd_parts+0x10c>
    1e06:	21 e0       	ldi	r18, 0x01	; 1
    1e08:	30 e0       	ldi	r19, 0x00	; 0
    1e0a:	40 e0       	ldi	r20, 0x00	; 0
    1e0c:	50 e0       	ldi	r21, 0x00	; 0
    1e0e:	79 01       	movw	r14, r18
    1e10:	8a 01       	movw	r16, r20
    1e12:	e6 28       	or	r14, r6
    1e14:	f7 28       	or	r15, r7
    1e16:	08 29       	or	r16, r8
    1e18:	19 29       	or	r17, r9
    1e1a:	3c c0       	rjmp	.+120    	; 0x1e94 <_fpadd_parts+0x192>
    1e1c:	23 2b       	or	r18, r19
    1e1e:	d1 f1       	breq	.+116    	; 0x1e94 <_fpadd_parts+0x192>
    1e20:	26 0e       	add	r2, r22
    1e22:	37 1e       	adc	r3, r23
    1e24:	35 01       	movw	r6, r10
    1e26:	46 01       	movw	r8, r12
    1e28:	06 2e       	mov	r0, r22
    1e2a:	04 c0       	rjmp	.+8      	; 0x1e34 <_fpadd_parts+0x132>
    1e2c:	96 94       	lsr	r9
    1e2e:	87 94       	ror	r8
    1e30:	77 94       	ror	r7
    1e32:	67 94       	ror	r6
    1e34:	0a 94       	dec	r0
    1e36:	d2 f7       	brpl	.-12     	; 0x1e2c <_fpadd_parts+0x12a>
    1e38:	21 e0       	ldi	r18, 0x01	; 1
    1e3a:	30 e0       	ldi	r19, 0x00	; 0
    1e3c:	40 e0       	ldi	r20, 0x00	; 0
    1e3e:	50 e0       	ldi	r21, 0x00	; 0
    1e40:	04 c0       	rjmp	.+8      	; 0x1e4a <_fpadd_parts+0x148>
    1e42:	22 0f       	add	r18, r18
    1e44:	33 1f       	adc	r19, r19
    1e46:	44 1f       	adc	r20, r20
    1e48:	55 1f       	adc	r21, r21
    1e4a:	6a 95       	dec	r22
    1e4c:	d2 f7       	brpl	.-12     	; 0x1e42 <_fpadd_parts+0x140>
    1e4e:	21 50       	subi	r18, 0x01	; 1
    1e50:	30 40       	sbci	r19, 0x00	; 0
    1e52:	40 40       	sbci	r20, 0x00	; 0
    1e54:	50 40       	sbci	r21, 0x00	; 0
    1e56:	2a 21       	and	r18, r10
    1e58:	3b 21       	and	r19, r11
    1e5a:	4c 21       	and	r20, r12
    1e5c:	5d 21       	and	r21, r13
    1e5e:	21 15       	cp	r18, r1
    1e60:	31 05       	cpc	r19, r1
    1e62:	41 05       	cpc	r20, r1
    1e64:	51 05       	cpc	r21, r1
    1e66:	21 f0       	breq	.+8      	; 0x1e70 <_fpadd_parts+0x16e>
    1e68:	21 e0       	ldi	r18, 0x01	; 1
    1e6a:	30 e0       	ldi	r19, 0x00	; 0
    1e6c:	40 e0       	ldi	r20, 0x00	; 0
    1e6e:	50 e0       	ldi	r21, 0x00	; 0
    1e70:	59 01       	movw	r10, r18
    1e72:	6a 01       	movw	r12, r20
    1e74:	a6 28       	or	r10, r6
    1e76:	b7 28       	or	r11, r7
    1e78:	c8 28       	or	r12, r8
    1e7a:	d9 28       	or	r13, r9
    1e7c:	0b c0       	rjmp	.+22     	; 0x1e94 <_fpadd_parts+0x192>
    1e7e:	82 15       	cp	r24, r2
    1e80:	93 05       	cpc	r25, r3
    1e82:	2c f0       	brlt	.+10     	; 0x1e8e <_fpadd_parts+0x18c>
    1e84:	1c 01       	movw	r2, r24
    1e86:	aa 24       	eor	r10, r10
    1e88:	bb 24       	eor	r11, r11
    1e8a:	65 01       	movw	r12, r10
    1e8c:	03 c0       	rjmp	.+6      	; 0x1e94 <_fpadd_parts+0x192>
    1e8e:	ee 24       	eor	r14, r14
    1e90:	ff 24       	eor	r15, r15
    1e92:	87 01       	movw	r16, r14
    1e94:	11 96       	adiw	r26, 0x01	; 1
    1e96:	9c 91       	ld	r25, X
    1e98:	d2 01       	movw	r26, r4
    1e9a:	11 96       	adiw	r26, 0x01	; 1
    1e9c:	8c 91       	ld	r24, X
    1e9e:	98 17       	cp	r25, r24
    1ea0:	09 f4       	brne	.+2      	; 0x1ea4 <_fpadd_parts+0x1a2>
    1ea2:	45 c0       	rjmp	.+138    	; 0x1f2e <_fpadd_parts+0x22c>
    1ea4:	99 23       	and	r25, r25
    1ea6:	39 f0       	breq	.+14     	; 0x1eb6 <_fpadd_parts+0x1b4>
    1ea8:	a8 01       	movw	r20, r16
    1eaa:	97 01       	movw	r18, r14
    1eac:	2a 19       	sub	r18, r10
    1eae:	3b 09       	sbc	r19, r11
    1eb0:	4c 09       	sbc	r20, r12
    1eb2:	5d 09       	sbc	r21, r13
    1eb4:	06 c0       	rjmp	.+12     	; 0x1ec2 <_fpadd_parts+0x1c0>
    1eb6:	a6 01       	movw	r20, r12
    1eb8:	95 01       	movw	r18, r10
    1eba:	2e 19       	sub	r18, r14
    1ebc:	3f 09       	sbc	r19, r15
    1ebe:	40 0b       	sbc	r20, r16
    1ec0:	51 0b       	sbc	r21, r17
    1ec2:	57 fd       	sbrc	r21, 7
    1ec4:	08 c0       	rjmp	.+16     	; 0x1ed6 <_fpadd_parts+0x1d4>
    1ec6:	11 82       	std	Z+1, r1	; 0x01
    1ec8:	33 82       	std	Z+3, r3	; 0x03
    1eca:	22 82       	std	Z+2, r2	; 0x02
    1ecc:	24 83       	std	Z+4, r18	; 0x04
    1ece:	35 83       	std	Z+5, r19	; 0x05
    1ed0:	46 83       	std	Z+6, r20	; 0x06
    1ed2:	57 83       	std	Z+7, r21	; 0x07
    1ed4:	1d c0       	rjmp	.+58     	; 0x1f10 <_fpadd_parts+0x20e>
    1ed6:	81 e0       	ldi	r24, 0x01	; 1
    1ed8:	81 83       	std	Z+1, r24	; 0x01
    1eda:	33 82       	std	Z+3, r3	; 0x03
    1edc:	22 82       	std	Z+2, r2	; 0x02
    1ede:	88 27       	eor	r24, r24
    1ee0:	99 27       	eor	r25, r25
    1ee2:	dc 01       	movw	r26, r24
    1ee4:	82 1b       	sub	r24, r18
    1ee6:	93 0b       	sbc	r25, r19
    1ee8:	a4 0b       	sbc	r26, r20
    1eea:	b5 0b       	sbc	r27, r21
    1eec:	84 83       	std	Z+4, r24	; 0x04
    1eee:	95 83       	std	Z+5, r25	; 0x05
    1ef0:	a6 83       	std	Z+6, r26	; 0x06
    1ef2:	b7 83       	std	Z+7, r27	; 0x07
    1ef4:	0d c0       	rjmp	.+26     	; 0x1f10 <_fpadd_parts+0x20e>
    1ef6:	22 0f       	add	r18, r18
    1ef8:	33 1f       	adc	r19, r19
    1efa:	44 1f       	adc	r20, r20
    1efc:	55 1f       	adc	r21, r21
    1efe:	24 83       	std	Z+4, r18	; 0x04
    1f00:	35 83       	std	Z+5, r19	; 0x05
    1f02:	46 83       	std	Z+6, r20	; 0x06
    1f04:	57 83       	std	Z+7, r21	; 0x07
    1f06:	82 81       	ldd	r24, Z+2	; 0x02
    1f08:	93 81       	ldd	r25, Z+3	; 0x03
    1f0a:	01 97       	sbiw	r24, 0x01	; 1
    1f0c:	93 83       	std	Z+3, r25	; 0x03
    1f0e:	82 83       	std	Z+2, r24	; 0x02
    1f10:	24 81       	ldd	r18, Z+4	; 0x04
    1f12:	35 81       	ldd	r19, Z+5	; 0x05
    1f14:	46 81       	ldd	r20, Z+6	; 0x06
    1f16:	57 81       	ldd	r21, Z+7	; 0x07
    1f18:	da 01       	movw	r26, r20
    1f1a:	c9 01       	movw	r24, r18
    1f1c:	01 97       	sbiw	r24, 0x01	; 1
    1f1e:	a1 09       	sbc	r26, r1
    1f20:	b1 09       	sbc	r27, r1
    1f22:	8f 5f       	subi	r24, 0xFF	; 255
    1f24:	9f 4f       	sbci	r25, 0xFF	; 255
    1f26:	af 4f       	sbci	r26, 0xFF	; 255
    1f28:	bf 43       	sbci	r27, 0x3F	; 63
    1f2a:	28 f3       	brcs	.-54     	; 0x1ef6 <_fpadd_parts+0x1f4>
    1f2c:	0b c0       	rjmp	.+22     	; 0x1f44 <_fpadd_parts+0x242>
    1f2e:	91 83       	std	Z+1, r25	; 0x01
    1f30:	33 82       	std	Z+3, r3	; 0x03
    1f32:	22 82       	std	Z+2, r2	; 0x02
    1f34:	ea 0c       	add	r14, r10
    1f36:	fb 1c       	adc	r15, r11
    1f38:	0c 1d       	adc	r16, r12
    1f3a:	1d 1d       	adc	r17, r13
    1f3c:	e4 82       	std	Z+4, r14	; 0x04
    1f3e:	f5 82       	std	Z+5, r15	; 0x05
    1f40:	06 83       	std	Z+6, r16	; 0x06
    1f42:	17 83       	std	Z+7, r17	; 0x07
    1f44:	83 e0       	ldi	r24, 0x03	; 3
    1f46:	80 83       	st	Z, r24
    1f48:	24 81       	ldd	r18, Z+4	; 0x04
    1f4a:	35 81       	ldd	r19, Z+5	; 0x05
    1f4c:	46 81       	ldd	r20, Z+6	; 0x06
    1f4e:	57 81       	ldd	r21, Z+7	; 0x07
    1f50:	57 ff       	sbrs	r21, 7
    1f52:	1a c0       	rjmp	.+52     	; 0x1f88 <_fpadd_parts+0x286>
    1f54:	c9 01       	movw	r24, r18
    1f56:	aa 27       	eor	r26, r26
    1f58:	97 fd       	sbrc	r25, 7
    1f5a:	a0 95       	com	r26
    1f5c:	ba 2f       	mov	r27, r26
    1f5e:	81 70       	andi	r24, 0x01	; 1
    1f60:	90 70       	andi	r25, 0x00	; 0
    1f62:	a0 70       	andi	r26, 0x00	; 0
    1f64:	b0 70       	andi	r27, 0x00	; 0
    1f66:	56 95       	lsr	r21
    1f68:	47 95       	ror	r20
    1f6a:	37 95       	ror	r19
    1f6c:	27 95       	ror	r18
    1f6e:	82 2b       	or	r24, r18
    1f70:	93 2b       	or	r25, r19
    1f72:	a4 2b       	or	r26, r20
    1f74:	b5 2b       	or	r27, r21
    1f76:	84 83       	std	Z+4, r24	; 0x04
    1f78:	95 83       	std	Z+5, r25	; 0x05
    1f7a:	a6 83       	std	Z+6, r26	; 0x06
    1f7c:	b7 83       	std	Z+7, r27	; 0x07
    1f7e:	82 81       	ldd	r24, Z+2	; 0x02
    1f80:	93 81       	ldd	r25, Z+3	; 0x03
    1f82:	01 96       	adiw	r24, 0x01	; 1
    1f84:	93 83       	std	Z+3, r25	; 0x03
    1f86:	82 83       	std	Z+2, r24	; 0x02
    1f88:	df 01       	movw	r26, r30
    1f8a:	01 c0       	rjmp	.+2      	; 0x1f8e <_fpadd_parts+0x28c>
    1f8c:	d2 01       	movw	r26, r4
    1f8e:	cd 01       	movw	r24, r26
    1f90:	cd b7       	in	r28, 0x3d	; 61
    1f92:	de b7       	in	r29, 0x3e	; 62
    1f94:	e2 e1       	ldi	r30, 0x12	; 18
    1f96:	0c 94 2d 2e 	jmp	0x5c5a	; 0x5c5a <__epilogue_restores__>

00001f9a <__subsf3>:
    1f9a:	a0 e2       	ldi	r26, 0x20	; 32
    1f9c:	b0 e0       	ldi	r27, 0x00	; 0
    1f9e:	e3 ed       	ldi	r30, 0xD3	; 211
    1fa0:	ff e0       	ldi	r31, 0x0F	; 15
    1fa2:	0c 94 1d 2e 	jmp	0x5c3a	; 0x5c3a <__prologue_saves__+0x18>
    1fa6:	69 83       	std	Y+1, r22	; 0x01
    1fa8:	7a 83       	std	Y+2, r23	; 0x02
    1faa:	8b 83       	std	Y+3, r24	; 0x03
    1fac:	9c 83       	std	Y+4, r25	; 0x04
    1fae:	2d 83       	std	Y+5, r18	; 0x05
    1fb0:	3e 83       	std	Y+6, r19	; 0x06
    1fb2:	4f 83       	std	Y+7, r20	; 0x07
    1fb4:	58 87       	std	Y+8, r21	; 0x08
    1fb6:	e9 e0       	ldi	r30, 0x09	; 9
    1fb8:	ee 2e       	mov	r14, r30
    1fba:	f1 2c       	mov	r15, r1
    1fbc:	ec 0e       	add	r14, r28
    1fbe:	fd 1e       	adc	r15, r29
    1fc0:	ce 01       	movw	r24, r28
    1fc2:	01 96       	adiw	r24, 0x01	; 1
    1fc4:	b7 01       	movw	r22, r14
    1fc6:	0e 94 52 14 	call	0x28a4	; 0x28a4 <__unpack_f>
    1fca:	8e 01       	movw	r16, r28
    1fcc:	0f 5e       	subi	r16, 0xEF	; 239
    1fce:	1f 4f       	sbci	r17, 0xFF	; 255
    1fd0:	ce 01       	movw	r24, r28
    1fd2:	05 96       	adiw	r24, 0x05	; 5
    1fd4:	b8 01       	movw	r22, r16
    1fd6:	0e 94 52 14 	call	0x28a4	; 0x28a4 <__unpack_f>
    1fda:	8a 89       	ldd	r24, Y+18	; 0x12
    1fdc:	91 e0       	ldi	r25, 0x01	; 1
    1fde:	89 27       	eor	r24, r25
    1fe0:	8a 8b       	std	Y+18, r24	; 0x12
    1fe2:	c7 01       	movw	r24, r14
    1fe4:	b8 01       	movw	r22, r16
    1fe6:	ae 01       	movw	r20, r28
    1fe8:	47 5e       	subi	r20, 0xE7	; 231
    1fea:	5f 4f       	sbci	r21, 0xFF	; 255
    1fec:	0e 94 81 0e 	call	0x1d02	; 0x1d02 <_fpadd_parts>
    1ff0:	0e 94 7d 13 	call	0x26fa	; 0x26fa <__pack_f>
    1ff4:	a0 96       	adiw	r28, 0x20	; 32
    1ff6:	e6 e0       	ldi	r30, 0x06	; 6
    1ff8:	0c 94 39 2e 	jmp	0x5c72	; 0x5c72 <__epilogue_restores__+0x18>

00001ffc <__addsf3>:
    1ffc:	a0 e2       	ldi	r26, 0x20	; 32
    1ffe:	b0 e0       	ldi	r27, 0x00	; 0
    2000:	e4 e0       	ldi	r30, 0x04	; 4
    2002:	f0 e1       	ldi	r31, 0x10	; 16
    2004:	0c 94 1d 2e 	jmp	0x5c3a	; 0x5c3a <__prologue_saves__+0x18>
    2008:	69 83       	std	Y+1, r22	; 0x01
    200a:	7a 83       	std	Y+2, r23	; 0x02
    200c:	8b 83       	std	Y+3, r24	; 0x03
    200e:	9c 83       	std	Y+4, r25	; 0x04
    2010:	2d 83       	std	Y+5, r18	; 0x05
    2012:	3e 83       	std	Y+6, r19	; 0x06
    2014:	4f 83       	std	Y+7, r20	; 0x07
    2016:	58 87       	std	Y+8, r21	; 0x08
    2018:	f9 e0       	ldi	r31, 0x09	; 9
    201a:	ef 2e       	mov	r14, r31
    201c:	f1 2c       	mov	r15, r1
    201e:	ec 0e       	add	r14, r28
    2020:	fd 1e       	adc	r15, r29
    2022:	ce 01       	movw	r24, r28
    2024:	01 96       	adiw	r24, 0x01	; 1
    2026:	b7 01       	movw	r22, r14
    2028:	0e 94 52 14 	call	0x28a4	; 0x28a4 <__unpack_f>
    202c:	8e 01       	movw	r16, r28
    202e:	0f 5e       	subi	r16, 0xEF	; 239
    2030:	1f 4f       	sbci	r17, 0xFF	; 255
    2032:	ce 01       	movw	r24, r28
    2034:	05 96       	adiw	r24, 0x05	; 5
    2036:	b8 01       	movw	r22, r16
    2038:	0e 94 52 14 	call	0x28a4	; 0x28a4 <__unpack_f>
    203c:	c7 01       	movw	r24, r14
    203e:	b8 01       	movw	r22, r16
    2040:	ae 01       	movw	r20, r28
    2042:	47 5e       	subi	r20, 0xE7	; 231
    2044:	5f 4f       	sbci	r21, 0xFF	; 255
    2046:	0e 94 81 0e 	call	0x1d02	; 0x1d02 <_fpadd_parts>
    204a:	0e 94 7d 13 	call	0x26fa	; 0x26fa <__pack_f>
    204e:	a0 96       	adiw	r28, 0x20	; 32
    2050:	e6 e0       	ldi	r30, 0x06	; 6
    2052:	0c 94 39 2e 	jmp	0x5c72	; 0x5c72 <__epilogue_restores__+0x18>

00002056 <__mulsf3>:
    2056:	a0 e2       	ldi	r26, 0x20	; 32
    2058:	b0 e0       	ldi	r27, 0x00	; 0
    205a:	e1 e3       	ldi	r30, 0x31	; 49
    205c:	f0 e1       	ldi	r31, 0x10	; 16
    205e:	0c 94 11 2e 	jmp	0x5c22	; 0x5c22 <__prologue_saves__>
    2062:	69 83       	std	Y+1, r22	; 0x01
    2064:	7a 83       	std	Y+2, r23	; 0x02
    2066:	8b 83       	std	Y+3, r24	; 0x03
    2068:	9c 83       	std	Y+4, r25	; 0x04
    206a:	2d 83       	std	Y+5, r18	; 0x05
    206c:	3e 83       	std	Y+6, r19	; 0x06
    206e:	4f 83       	std	Y+7, r20	; 0x07
    2070:	58 87       	std	Y+8, r21	; 0x08
    2072:	ce 01       	movw	r24, r28
    2074:	01 96       	adiw	r24, 0x01	; 1
    2076:	be 01       	movw	r22, r28
    2078:	67 5f       	subi	r22, 0xF7	; 247
    207a:	7f 4f       	sbci	r23, 0xFF	; 255
    207c:	0e 94 52 14 	call	0x28a4	; 0x28a4 <__unpack_f>
    2080:	ce 01       	movw	r24, r28
    2082:	05 96       	adiw	r24, 0x05	; 5
    2084:	be 01       	movw	r22, r28
    2086:	6f 5e       	subi	r22, 0xEF	; 239
    2088:	7f 4f       	sbci	r23, 0xFF	; 255
    208a:	0e 94 52 14 	call	0x28a4	; 0x28a4 <__unpack_f>
    208e:	99 85       	ldd	r25, Y+9	; 0x09
    2090:	92 30       	cpi	r25, 0x02	; 2
    2092:	88 f0       	brcs	.+34     	; 0x20b6 <__mulsf3+0x60>
    2094:	89 89       	ldd	r24, Y+17	; 0x11
    2096:	82 30       	cpi	r24, 0x02	; 2
    2098:	c8 f0       	brcs	.+50     	; 0x20cc <__mulsf3+0x76>
    209a:	94 30       	cpi	r25, 0x04	; 4
    209c:	19 f4       	brne	.+6      	; 0x20a4 <__mulsf3+0x4e>
    209e:	82 30       	cpi	r24, 0x02	; 2
    20a0:	51 f4       	brne	.+20     	; 0x20b6 <__mulsf3+0x60>
    20a2:	04 c0       	rjmp	.+8      	; 0x20ac <__mulsf3+0x56>
    20a4:	84 30       	cpi	r24, 0x04	; 4
    20a6:	29 f4       	brne	.+10     	; 0x20b2 <__mulsf3+0x5c>
    20a8:	92 30       	cpi	r25, 0x02	; 2
    20aa:	81 f4       	brne	.+32     	; 0x20cc <__mulsf3+0x76>
    20ac:	80 e6       	ldi	r24, 0x60	; 96
    20ae:	90 e0       	ldi	r25, 0x00	; 0
    20b0:	c6 c0       	rjmp	.+396    	; 0x223e <__mulsf3+0x1e8>
    20b2:	92 30       	cpi	r25, 0x02	; 2
    20b4:	49 f4       	brne	.+18     	; 0x20c8 <__mulsf3+0x72>
    20b6:	20 e0       	ldi	r18, 0x00	; 0
    20b8:	9a 85       	ldd	r25, Y+10	; 0x0a
    20ba:	8a 89       	ldd	r24, Y+18	; 0x12
    20bc:	98 13       	cpse	r25, r24
    20be:	21 e0       	ldi	r18, 0x01	; 1
    20c0:	2a 87       	std	Y+10, r18	; 0x0a
    20c2:	ce 01       	movw	r24, r28
    20c4:	09 96       	adiw	r24, 0x09	; 9
    20c6:	bb c0       	rjmp	.+374    	; 0x223e <__mulsf3+0x1e8>
    20c8:	82 30       	cpi	r24, 0x02	; 2
    20ca:	49 f4       	brne	.+18     	; 0x20de <__mulsf3+0x88>
    20cc:	20 e0       	ldi	r18, 0x00	; 0
    20ce:	9a 85       	ldd	r25, Y+10	; 0x0a
    20d0:	8a 89       	ldd	r24, Y+18	; 0x12
    20d2:	98 13       	cpse	r25, r24
    20d4:	21 e0       	ldi	r18, 0x01	; 1
    20d6:	2a 8b       	std	Y+18, r18	; 0x12
    20d8:	ce 01       	movw	r24, r28
    20da:	41 96       	adiw	r24, 0x11	; 17
    20dc:	b0 c0       	rjmp	.+352    	; 0x223e <__mulsf3+0x1e8>
    20de:	2d 84       	ldd	r2, Y+13	; 0x0d
    20e0:	3e 84       	ldd	r3, Y+14	; 0x0e
    20e2:	4f 84       	ldd	r4, Y+15	; 0x0f
    20e4:	58 88       	ldd	r5, Y+16	; 0x10
    20e6:	6d 88       	ldd	r6, Y+21	; 0x15
    20e8:	7e 88       	ldd	r7, Y+22	; 0x16
    20ea:	8f 88       	ldd	r8, Y+23	; 0x17
    20ec:	98 8c       	ldd	r9, Y+24	; 0x18
    20ee:	ee 24       	eor	r14, r14
    20f0:	ff 24       	eor	r15, r15
    20f2:	87 01       	movw	r16, r14
    20f4:	aa 24       	eor	r10, r10
    20f6:	bb 24       	eor	r11, r11
    20f8:	65 01       	movw	r12, r10
    20fa:	40 e0       	ldi	r20, 0x00	; 0
    20fc:	50 e0       	ldi	r21, 0x00	; 0
    20fe:	60 e0       	ldi	r22, 0x00	; 0
    2100:	70 e0       	ldi	r23, 0x00	; 0
    2102:	e0 e0       	ldi	r30, 0x00	; 0
    2104:	f0 e0       	ldi	r31, 0x00	; 0
    2106:	c1 01       	movw	r24, r2
    2108:	81 70       	andi	r24, 0x01	; 1
    210a:	90 70       	andi	r25, 0x00	; 0
    210c:	89 2b       	or	r24, r25
    210e:	e9 f0       	breq	.+58     	; 0x214a <__mulsf3+0xf4>
    2110:	e6 0c       	add	r14, r6
    2112:	f7 1c       	adc	r15, r7
    2114:	08 1d       	adc	r16, r8
    2116:	19 1d       	adc	r17, r9
    2118:	9a 01       	movw	r18, r20
    211a:	ab 01       	movw	r20, r22
    211c:	2a 0d       	add	r18, r10
    211e:	3b 1d       	adc	r19, r11
    2120:	4c 1d       	adc	r20, r12
    2122:	5d 1d       	adc	r21, r13
    2124:	80 e0       	ldi	r24, 0x00	; 0
    2126:	90 e0       	ldi	r25, 0x00	; 0
    2128:	a0 e0       	ldi	r26, 0x00	; 0
    212a:	b0 e0       	ldi	r27, 0x00	; 0
    212c:	e6 14       	cp	r14, r6
    212e:	f7 04       	cpc	r15, r7
    2130:	08 05       	cpc	r16, r8
    2132:	19 05       	cpc	r17, r9
    2134:	20 f4       	brcc	.+8      	; 0x213e <__mulsf3+0xe8>
    2136:	81 e0       	ldi	r24, 0x01	; 1
    2138:	90 e0       	ldi	r25, 0x00	; 0
    213a:	a0 e0       	ldi	r26, 0x00	; 0
    213c:	b0 e0       	ldi	r27, 0x00	; 0
    213e:	ba 01       	movw	r22, r20
    2140:	a9 01       	movw	r20, r18
    2142:	48 0f       	add	r20, r24
    2144:	59 1f       	adc	r21, r25
    2146:	6a 1f       	adc	r22, r26
    2148:	7b 1f       	adc	r23, r27
    214a:	aa 0c       	add	r10, r10
    214c:	bb 1c       	adc	r11, r11
    214e:	cc 1c       	adc	r12, r12
    2150:	dd 1c       	adc	r13, r13
    2152:	97 fe       	sbrs	r9, 7
    2154:	08 c0       	rjmp	.+16     	; 0x2166 <__mulsf3+0x110>
    2156:	81 e0       	ldi	r24, 0x01	; 1
    2158:	90 e0       	ldi	r25, 0x00	; 0
    215a:	a0 e0       	ldi	r26, 0x00	; 0
    215c:	b0 e0       	ldi	r27, 0x00	; 0
    215e:	a8 2a       	or	r10, r24
    2160:	b9 2a       	or	r11, r25
    2162:	ca 2a       	or	r12, r26
    2164:	db 2a       	or	r13, r27
    2166:	31 96       	adiw	r30, 0x01	; 1
    2168:	e0 32       	cpi	r30, 0x20	; 32
    216a:	f1 05       	cpc	r31, r1
    216c:	49 f0       	breq	.+18     	; 0x2180 <__mulsf3+0x12a>
    216e:	66 0c       	add	r6, r6
    2170:	77 1c       	adc	r7, r7
    2172:	88 1c       	adc	r8, r8
    2174:	99 1c       	adc	r9, r9
    2176:	56 94       	lsr	r5
    2178:	47 94       	ror	r4
    217a:	37 94       	ror	r3
    217c:	27 94       	ror	r2
    217e:	c3 cf       	rjmp	.-122    	; 0x2106 <__mulsf3+0xb0>
    2180:	fa 85       	ldd	r31, Y+10	; 0x0a
    2182:	ea 89       	ldd	r30, Y+18	; 0x12
    2184:	2b 89       	ldd	r18, Y+19	; 0x13
    2186:	3c 89       	ldd	r19, Y+20	; 0x14
    2188:	8b 85       	ldd	r24, Y+11	; 0x0b
    218a:	9c 85       	ldd	r25, Y+12	; 0x0c
    218c:	28 0f       	add	r18, r24
    218e:	39 1f       	adc	r19, r25
    2190:	2e 5f       	subi	r18, 0xFE	; 254
    2192:	3f 4f       	sbci	r19, 0xFF	; 255
    2194:	17 c0       	rjmp	.+46     	; 0x21c4 <__mulsf3+0x16e>
    2196:	ca 01       	movw	r24, r20
    2198:	81 70       	andi	r24, 0x01	; 1
    219a:	90 70       	andi	r25, 0x00	; 0
    219c:	89 2b       	or	r24, r25
    219e:	61 f0       	breq	.+24     	; 0x21b8 <__mulsf3+0x162>
    21a0:	16 95       	lsr	r17
    21a2:	07 95       	ror	r16
    21a4:	f7 94       	ror	r15
    21a6:	e7 94       	ror	r14
    21a8:	80 e0       	ldi	r24, 0x00	; 0
    21aa:	90 e0       	ldi	r25, 0x00	; 0
    21ac:	a0 e0       	ldi	r26, 0x00	; 0
    21ae:	b0 e8       	ldi	r27, 0x80	; 128
    21b0:	e8 2a       	or	r14, r24
    21b2:	f9 2a       	or	r15, r25
    21b4:	0a 2b       	or	r16, r26
    21b6:	1b 2b       	or	r17, r27
    21b8:	76 95       	lsr	r23
    21ba:	67 95       	ror	r22
    21bc:	57 95       	ror	r21
    21be:	47 95       	ror	r20
    21c0:	2f 5f       	subi	r18, 0xFF	; 255
    21c2:	3f 4f       	sbci	r19, 0xFF	; 255
    21c4:	77 fd       	sbrc	r23, 7
    21c6:	e7 cf       	rjmp	.-50     	; 0x2196 <__mulsf3+0x140>
    21c8:	0c c0       	rjmp	.+24     	; 0x21e2 <__mulsf3+0x18c>
    21ca:	44 0f       	add	r20, r20
    21cc:	55 1f       	adc	r21, r21
    21ce:	66 1f       	adc	r22, r22
    21d0:	77 1f       	adc	r23, r23
    21d2:	17 fd       	sbrc	r17, 7
    21d4:	41 60       	ori	r20, 0x01	; 1
    21d6:	ee 0c       	add	r14, r14
    21d8:	ff 1c       	adc	r15, r15
    21da:	00 1f       	adc	r16, r16
    21dc:	11 1f       	adc	r17, r17
    21de:	21 50       	subi	r18, 0x01	; 1
    21e0:	30 40       	sbci	r19, 0x00	; 0
    21e2:	40 30       	cpi	r20, 0x00	; 0
    21e4:	90 e0       	ldi	r25, 0x00	; 0
    21e6:	59 07       	cpc	r21, r25
    21e8:	90 e0       	ldi	r25, 0x00	; 0
    21ea:	69 07       	cpc	r22, r25
    21ec:	90 e4       	ldi	r25, 0x40	; 64
    21ee:	79 07       	cpc	r23, r25
    21f0:	60 f3       	brcs	.-40     	; 0x21ca <__mulsf3+0x174>
    21f2:	2b 8f       	std	Y+27, r18	; 0x1b
    21f4:	3c 8f       	std	Y+28, r19	; 0x1c
    21f6:	db 01       	movw	r26, r22
    21f8:	ca 01       	movw	r24, r20
    21fa:	8f 77       	andi	r24, 0x7F	; 127
    21fc:	90 70       	andi	r25, 0x00	; 0
    21fe:	a0 70       	andi	r26, 0x00	; 0
    2200:	b0 70       	andi	r27, 0x00	; 0
    2202:	80 34       	cpi	r24, 0x40	; 64
    2204:	91 05       	cpc	r25, r1
    2206:	a1 05       	cpc	r26, r1
    2208:	b1 05       	cpc	r27, r1
    220a:	61 f4       	brne	.+24     	; 0x2224 <__mulsf3+0x1ce>
    220c:	47 fd       	sbrc	r20, 7
    220e:	0a c0       	rjmp	.+20     	; 0x2224 <__mulsf3+0x1ce>
    2210:	e1 14       	cp	r14, r1
    2212:	f1 04       	cpc	r15, r1
    2214:	01 05       	cpc	r16, r1
    2216:	11 05       	cpc	r17, r1
    2218:	29 f0       	breq	.+10     	; 0x2224 <__mulsf3+0x1ce>
    221a:	40 5c       	subi	r20, 0xC0	; 192
    221c:	5f 4f       	sbci	r21, 0xFF	; 255
    221e:	6f 4f       	sbci	r22, 0xFF	; 255
    2220:	7f 4f       	sbci	r23, 0xFF	; 255
    2222:	40 78       	andi	r20, 0x80	; 128
    2224:	1a 8e       	std	Y+26, r1	; 0x1a
    2226:	fe 17       	cp	r31, r30
    2228:	11 f0       	breq	.+4      	; 0x222e <__mulsf3+0x1d8>
    222a:	81 e0       	ldi	r24, 0x01	; 1
    222c:	8a 8f       	std	Y+26, r24	; 0x1a
    222e:	4d 8f       	std	Y+29, r20	; 0x1d
    2230:	5e 8f       	std	Y+30, r21	; 0x1e
    2232:	6f 8f       	std	Y+31, r22	; 0x1f
    2234:	78 a3       	std	Y+32, r23	; 0x20
    2236:	83 e0       	ldi	r24, 0x03	; 3
    2238:	89 8f       	std	Y+25, r24	; 0x19
    223a:	ce 01       	movw	r24, r28
    223c:	49 96       	adiw	r24, 0x19	; 25
    223e:	0e 94 7d 13 	call	0x26fa	; 0x26fa <__pack_f>
    2242:	a0 96       	adiw	r28, 0x20	; 32
    2244:	e2 e1       	ldi	r30, 0x12	; 18
    2246:	0c 94 2d 2e 	jmp	0x5c5a	; 0x5c5a <__epilogue_restores__>

0000224a <__divsf3>:
    224a:	a8 e1       	ldi	r26, 0x18	; 24
    224c:	b0 e0       	ldi	r27, 0x00	; 0
    224e:	eb e2       	ldi	r30, 0x2B	; 43
    2250:	f1 e1       	ldi	r31, 0x11	; 17
    2252:	0c 94 19 2e 	jmp	0x5c32	; 0x5c32 <__prologue_saves__+0x10>
    2256:	69 83       	std	Y+1, r22	; 0x01
    2258:	7a 83       	std	Y+2, r23	; 0x02
    225a:	8b 83       	std	Y+3, r24	; 0x03
    225c:	9c 83       	std	Y+4, r25	; 0x04
    225e:	2d 83       	std	Y+5, r18	; 0x05
    2260:	3e 83       	std	Y+6, r19	; 0x06
    2262:	4f 83       	std	Y+7, r20	; 0x07
    2264:	58 87       	std	Y+8, r21	; 0x08
    2266:	b9 e0       	ldi	r27, 0x09	; 9
    2268:	eb 2e       	mov	r14, r27
    226a:	f1 2c       	mov	r15, r1
    226c:	ec 0e       	add	r14, r28
    226e:	fd 1e       	adc	r15, r29
    2270:	ce 01       	movw	r24, r28
    2272:	01 96       	adiw	r24, 0x01	; 1
    2274:	b7 01       	movw	r22, r14
    2276:	0e 94 52 14 	call	0x28a4	; 0x28a4 <__unpack_f>
    227a:	8e 01       	movw	r16, r28
    227c:	0f 5e       	subi	r16, 0xEF	; 239
    227e:	1f 4f       	sbci	r17, 0xFF	; 255
    2280:	ce 01       	movw	r24, r28
    2282:	05 96       	adiw	r24, 0x05	; 5
    2284:	b8 01       	movw	r22, r16
    2286:	0e 94 52 14 	call	0x28a4	; 0x28a4 <__unpack_f>
    228a:	29 85       	ldd	r18, Y+9	; 0x09
    228c:	22 30       	cpi	r18, 0x02	; 2
    228e:	08 f4       	brcc	.+2      	; 0x2292 <__divsf3+0x48>
    2290:	7e c0       	rjmp	.+252    	; 0x238e <__divsf3+0x144>
    2292:	39 89       	ldd	r19, Y+17	; 0x11
    2294:	32 30       	cpi	r19, 0x02	; 2
    2296:	10 f4       	brcc	.+4      	; 0x229c <__divsf3+0x52>
    2298:	b8 01       	movw	r22, r16
    229a:	7c c0       	rjmp	.+248    	; 0x2394 <__divsf3+0x14a>
    229c:	8a 85       	ldd	r24, Y+10	; 0x0a
    229e:	9a 89       	ldd	r25, Y+18	; 0x12
    22a0:	89 27       	eor	r24, r25
    22a2:	8a 87       	std	Y+10, r24	; 0x0a
    22a4:	24 30       	cpi	r18, 0x04	; 4
    22a6:	11 f0       	breq	.+4      	; 0x22ac <__divsf3+0x62>
    22a8:	22 30       	cpi	r18, 0x02	; 2
    22aa:	31 f4       	brne	.+12     	; 0x22b8 <__divsf3+0x6e>
    22ac:	23 17       	cp	r18, r19
    22ae:	09 f0       	breq	.+2      	; 0x22b2 <__divsf3+0x68>
    22b0:	6e c0       	rjmp	.+220    	; 0x238e <__divsf3+0x144>
    22b2:	60 e6       	ldi	r22, 0x60	; 96
    22b4:	70 e0       	ldi	r23, 0x00	; 0
    22b6:	6e c0       	rjmp	.+220    	; 0x2394 <__divsf3+0x14a>
    22b8:	34 30       	cpi	r19, 0x04	; 4
    22ba:	39 f4       	brne	.+14     	; 0x22ca <__divsf3+0x80>
    22bc:	1d 86       	std	Y+13, r1	; 0x0d
    22be:	1e 86       	std	Y+14, r1	; 0x0e
    22c0:	1f 86       	std	Y+15, r1	; 0x0f
    22c2:	18 8a       	std	Y+16, r1	; 0x10
    22c4:	1c 86       	std	Y+12, r1	; 0x0c
    22c6:	1b 86       	std	Y+11, r1	; 0x0b
    22c8:	04 c0       	rjmp	.+8      	; 0x22d2 <__divsf3+0x88>
    22ca:	32 30       	cpi	r19, 0x02	; 2
    22cc:	21 f4       	brne	.+8      	; 0x22d6 <__divsf3+0x8c>
    22ce:	84 e0       	ldi	r24, 0x04	; 4
    22d0:	89 87       	std	Y+9, r24	; 0x09
    22d2:	b7 01       	movw	r22, r14
    22d4:	5f c0       	rjmp	.+190    	; 0x2394 <__divsf3+0x14a>
    22d6:	2b 85       	ldd	r18, Y+11	; 0x0b
    22d8:	3c 85       	ldd	r19, Y+12	; 0x0c
    22da:	8b 89       	ldd	r24, Y+19	; 0x13
    22dc:	9c 89       	ldd	r25, Y+20	; 0x14
    22de:	28 1b       	sub	r18, r24
    22e0:	39 0b       	sbc	r19, r25
    22e2:	3c 87       	std	Y+12, r19	; 0x0c
    22e4:	2b 87       	std	Y+11, r18	; 0x0b
    22e6:	ed 84       	ldd	r14, Y+13	; 0x0d
    22e8:	fe 84       	ldd	r15, Y+14	; 0x0e
    22ea:	0f 85       	ldd	r16, Y+15	; 0x0f
    22ec:	18 89       	ldd	r17, Y+16	; 0x10
    22ee:	ad 88       	ldd	r10, Y+21	; 0x15
    22f0:	be 88       	ldd	r11, Y+22	; 0x16
    22f2:	cf 88       	ldd	r12, Y+23	; 0x17
    22f4:	d8 8c       	ldd	r13, Y+24	; 0x18
    22f6:	ea 14       	cp	r14, r10
    22f8:	fb 04       	cpc	r15, r11
    22fa:	0c 05       	cpc	r16, r12
    22fc:	1d 05       	cpc	r17, r13
    22fe:	40 f4       	brcc	.+16     	; 0x2310 <__divsf3+0xc6>
    2300:	ee 0c       	add	r14, r14
    2302:	ff 1c       	adc	r15, r15
    2304:	00 1f       	adc	r16, r16
    2306:	11 1f       	adc	r17, r17
    2308:	21 50       	subi	r18, 0x01	; 1
    230a:	30 40       	sbci	r19, 0x00	; 0
    230c:	3c 87       	std	Y+12, r19	; 0x0c
    230e:	2b 87       	std	Y+11, r18	; 0x0b
    2310:	20 e0       	ldi	r18, 0x00	; 0
    2312:	30 e0       	ldi	r19, 0x00	; 0
    2314:	40 e0       	ldi	r20, 0x00	; 0
    2316:	50 e0       	ldi	r21, 0x00	; 0
    2318:	80 e0       	ldi	r24, 0x00	; 0
    231a:	90 e0       	ldi	r25, 0x00	; 0
    231c:	a0 e0       	ldi	r26, 0x00	; 0
    231e:	b0 e4       	ldi	r27, 0x40	; 64
    2320:	60 e0       	ldi	r22, 0x00	; 0
    2322:	70 e0       	ldi	r23, 0x00	; 0
    2324:	ea 14       	cp	r14, r10
    2326:	fb 04       	cpc	r15, r11
    2328:	0c 05       	cpc	r16, r12
    232a:	1d 05       	cpc	r17, r13
    232c:	40 f0       	brcs	.+16     	; 0x233e <__divsf3+0xf4>
    232e:	28 2b       	or	r18, r24
    2330:	39 2b       	or	r19, r25
    2332:	4a 2b       	or	r20, r26
    2334:	5b 2b       	or	r21, r27
    2336:	ea 18       	sub	r14, r10
    2338:	fb 08       	sbc	r15, r11
    233a:	0c 09       	sbc	r16, r12
    233c:	1d 09       	sbc	r17, r13
    233e:	b6 95       	lsr	r27
    2340:	a7 95       	ror	r26
    2342:	97 95       	ror	r25
    2344:	87 95       	ror	r24
    2346:	ee 0c       	add	r14, r14
    2348:	ff 1c       	adc	r15, r15
    234a:	00 1f       	adc	r16, r16
    234c:	11 1f       	adc	r17, r17
    234e:	6f 5f       	subi	r22, 0xFF	; 255
    2350:	7f 4f       	sbci	r23, 0xFF	; 255
    2352:	6f 31       	cpi	r22, 0x1F	; 31
    2354:	71 05       	cpc	r23, r1
    2356:	31 f7       	brne	.-52     	; 0x2324 <__divsf3+0xda>
    2358:	da 01       	movw	r26, r20
    235a:	c9 01       	movw	r24, r18
    235c:	8f 77       	andi	r24, 0x7F	; 127
    235e:	90 70       	andi	r25, 0x00	; 0
    2360:	a0 70       	andi	r26, 0x00	; 0
    2362:	b0 70       	andi	r27, 0x00	; 0
    2364:	80 34       	cpi	r24, 0x40	; 64
    2366:	91 05       	cpc	r25, r1
    2368:	a1 05       	cpc	r26, r1
    236a:	b1 05       	cpc	r27, r1
    236c:	61 f4       	brne	.+24     	; 0x2386 <__divsf3+0x13c>
    236e:	27 fd       	sbrc	r18, 7
    2370:	0a c0       	rjmp	.+20     	; 0x2386 <__divsf3+0x13c>
    2372:	e1 14       	cp	r14, r1
    2374:	f1 04       	cpc	r15, r1
    2376:	01 05       	cpc	r16, r1
    2378:	11 05       	cpc	r17, r1
    237a:	29 f0       	breq	.+10     	; 0x2386 <__divsf3+0x13c>
    237c:	20 5c       	subi	r18, 0xC0	; 192
    237e:	3f 4f       	sbci	r19, 0xFF	; 255
    2380:	4f 4f       	sbci	r20, 0xFF	; 255
    2382:	5f 4f       	sbci	r21, 0xFF	; 255
    2384:	20 78       	andi	r18, 0x80	; 128
    2386:	2d 87       	std	Y+13, r18	; 0x0d
    2388:	3e 87       	std	Y+14, r19	; 0x0e
    238a:	4f 87       	std	Y+15, r20	; 0x0f
    238c:	58 8b       	std	Y+16, r21	; 0x10
    238e:	be 01       	movw	r22, r28
    2390:	67 5f       	subi	r22, 0xF7	; 247
    2392:	7f 4f       	sbci	r23, 0xFF	; 255
    2394:	cb 01       	movw	r24, r22
    2396:	0e 94 7d 13 	call	0x26fa	; 0x26fa <__pack_f>
    239a:	68 96       	adiw	r28, 0x18	; 24
    239c:	ea e0       	ldi	r30, 0x0A	; 10
    239e:	0c 94 35 2e 	jmp	0x5c6a	; 0x5c6a <__epilogue_restores__+0x10>

000023a2 <__gtsf2>:
    23a2:	a8 e1       	ldi	r26, 0x18	; 24
    23a4:	b0 e0       	ldi	r27, 0x00	; 0
    23a6:	e7 ed       	ldi	r30, 0xD7	; 215
    23a8:	f1 e1       	ldi	r31, 0x11	; 17
    23aa:	0c 94 1d 2e 	jmp	0x5c3a	; 0x5c3a <__prologue_saves__+0x18>
    23ae:	69 83       	std	Y+1, r22	; 0x01
    23b0:	7a 83       	std	Y+2, r23	; 0x02
    23b2:	8b 83       	std	Y+3, r24	; 0x03
    23b4:	9c 83       	std	Y+4, r25	; 0x04
    23b6:	2d 83       	std	Y+5, r18	; 0x05
    23b8:	3e 83       	std	Y+6, r19	; 0x06
    23ba:	4f 83       	std	Y+7, r20	; 0x07
    23bc:	58 87       	std	Y+8, r21	; 0x08
    23be:	89 e0       	ldi	r24, 0x09	; 9
    23c0:	e8 2e       	mov	r14, r24
    23c2:	f1 2c       	mov	r15, r1
    23c4:	ec 0e       	add	r14, r28
    23c6:	fd 1e       	adc	r15, r29
    23c8:	ce 01       	movw	r24, r28
    23ca:	01 96       	adiw	r24, 0x01	; 1
    23cc:	b7 01       	movw	r22, r14
    23ce:	0e 94 52 14 	call	0x28a4	; 0x28a4 <__unpack_f>
    23d2:	8e 01       	movw	r16, r28
    23d4:	0f 5e       	subi	r16, 0xEF	; 239
    23d6:	1f 4f       	sbci	r17, 0xFF	; 255
    23d8:	ce 01       	movw	r24, r28
    23da:	05 96       	adiw	r24, 0x05	; 5
    23dc:	b8 01       	movw	r22, r16
    23de:	0e 94 52 14 	call	0x28a4	; 0x28a4 <__unpack_f>
    23e2:	89 85       	ldd	r24, Y+9	; 0x09
    23e4:	82 30       	cpi	r24, 0x02	; 2
    23e6:	40 f0       	brcs	.+16     	; 0x23f8 <__gtsf2+0x56>
    23e8:	89 89       	ldd	r24, Y+17	; 0x11
    23ea:	82 30       	cpi	r24, 0x02	; 2
    23ec:	28 f0       	brcs	.+10     	; 0x23f8 <__gtsf2+0x56>
    23ee:	c7 01       	movw	r24, r14
    23f0:	b8 01       	movw	r22, r16
    23f2:	0e 94 ca 14 	call	0x2994	; 0x2994 <__fpcmp_parts_f>
    23f6:	01 c0       	rjmp	.+2      	; 0x23fa <__gtsf2+0x58>
    23f8:	8f ef       	ldi	r24, 0xFF	; 255
    23fa:	68 96       	adiw	r28, 0x18	; 24
    23fc:	e6 e0       	ldi	r30, 0x06	; 6
    23fe:	0c 94 39 2e 	jmp	0x5c72	; 0x5c72 <__epilogue_restores__+0x18>

00002402 <__gesf2>:
    2402:	a8 e1       	ldi	r26, 0x18	; 24
    2404:	b0 e0       	ldi	r27, 0x00	; 0
    2406:	e7 e0       	ldi	r30, 0x07	; 7
    2408:	f2 e1       	ldi	r31, 0x12	; 18
    240a:	0c 94 1d 2e 	jmp	0x5c3a	; 0x5c3a <__prologue_saves__+0x18>
    240e:	69 83       	std	Y+1, r22	; 0x01
    2410:	7a 83       	std	Y+2, r23	; 0x02
    2412:	8b 83       	std	Y+3, r24	; 0x03
    2414:	9c 83       	std	Y+4, r25	; 0x04
    2416:	2d 83       	std	Y+5, r18	; 0x05
    2418:	3e 83       	std	Y+6, r19	; 0x06
    241a:	4f 83       	std	Y+7, r20	; 0x07
    241c:	58 87       	std	Y+8, r21	; 0x08
    241e:	89 e0       	ldi	r24, 0x09	; 9
    2420:	e8 2e       	mov	r14, r24
    2422:	f1 2c       	mov	r15, r1
    2424:	ec 0e       	add	r14, r28
    2426:	fd 1e       	adc	r15, r29
    2428:	ce 01       	movw	r24, r28
    242a:	01 96       	adiw	r24, 0x01	; 1
    242c:	b7 01       	movw	r22, r14
    242e:	0e 94 52 14 	call	0x28a4	; 0x28a4 <__unpack_f>
    2432:	8e 01       	movw	r16, r28
    2434:	0f 5e       	subi	r16, 0xEF	; 239
    2436:	1f 4f       	sbci	r17, 0xFF	; 255
    2438:	ce 01       	movw	r24, r28
    243a:	05 96       	adiw	r24, 0x05	; 5
    243c:	b8 01       	movw	r22, r16
    243e:	0e 94 52 14 	call	0x28a4	; 0x28a4 <__unpack_f>
    2442:	89 85       	ldd	r24, Y+9	; 0x09
    2444:	82 30       	cpi	r24, 0x02	; 2
    2446:	40 f0       	brcs	.+16     	; 0x2458 <__gesf2+0x56>
    2448:	89 89       	ldd	r24, Y+17	; 0x11
    244a:	82 30       	cpi	r24, 0x02	; 2
    244c:	28 f0       	brcs	.+10     	; 0x2458 <__gesf2+0x56>
    244e:	c7 01       	movw	r24, r14
    2450:	b8 01       	movw	r22, r16
    2452:	0e 94 ca 14 	call	0x2994	; 0x2994 <__fpcmp_parts_f>
    2456:	01 c0       	rjmp	.+2      	; 0x245a <__gesf2+0x58>
    2458:	8f ef       	ldi	r24, 0xFF	; 255
    245a:	68 96       	adiw	r28, 0x18	; 24
    245c:	e6 e0       	ldi	r30, 0x06	; 6
    245e:	0c 94 39 2e 	jmp	0x5c72	; 0x5c72 <__epilogue_restores__+0x18>

00002462 <__ltsf2>:
    2462:	a8 e1       	ldi	r26, 0x18	; 24
    2464:	b0 e0       	ldi	r27, 0x00	; 0
    2466:	e7 e3       	ldi	r30, 0x37	; 55
    2468:	f2 e1       	ldi	r31, 0x12	; 18
    246a:	0c 94 1d 2e 	jmp	0x5c3a	; 0x5c3a <__prologue_saves__+0x18>
    246e:	69 83       	std	Y+1, r22	; 0x01
    2470:	7a 83       	std	Y+2, r23	; 0x02
    2472:	8b 83       	std	Y+3, r24	; 0x03
    2474:	9c 83       	std	Y+4, r25	; 0x04
    2476:	2d 83       	std	Y+5, r18	; 0x05
    2478:	3e 83       	std	Y+6, r19	; 0x06
    247a:	4f 83       	std	Y+7, r20	; 0x07
    247c:	58 87       	std	Y+8, r21	; 0x08
    247e:	89 e0       	ldi	r24, 0x09	; 9
    2480:	e8 2e       	mov	r14, r24
    2482:	f1 2c       	mov	r15, r1
    2484:	ec 0e       	add	r14, r28
    2486:	fd 1e       	adc	r15, r29
    2488:	ce 01       	movw	r24, r28
    248a:	01 96       	adiw	r24, 0x01	; 1
    248c:	b7 01       	movw	r22, r14
    248e:	0e 94 52 14 	call	0x28a4	; 0x28a4 <__unpack_f>
    2492:	8e 01       	movw	r16, r28
    2494:	0f 5e       	subi	r16, 0xEF	; 239
    2496:	1f 4f       	sbci	r17, 0xFF	; 255
    2498:	ce 01       	movw	r24, r28
    249a:	05 96       	adiw	r24, 0x05	; 5
    249c:	b8 01       	movw	r22, r16
    249e:	0e 94 52 14 	call	0x28a4	; 0x28a4 <__unpack_f>
    24a2:	89 85       	ldd	r24, Y+9	; 0x09
    24a4:	82 30       	cpi	r24, 0x02	; 2
    24a6:	40 f0       	brcs	.+16     	; 0x24b8 <__ltsf2+0x56>
    24a8:	89 89       	ldd	r24, Y+17	; 0x11
    24aa:	82 30       	cpi	r24, 0x02	; 2
    24ac:	28 f0       	brcs	.+10     	; 0x24b8 <__ltsf2+0x56>
    24ae:	c7 01       	movw	r24, r14
    24b0:	b8 01       	movw	r22, r16
    24b2:	0e 94 ca 14 	call	0x2994	; 0x2994 <__fpcmp_parts_f>
    24b6:	01 c0       	rjmp	.+2      	; 0x24ba <__ltsf2+0x58>
    24b8:	81 e0       	ldi	r24, 0x01	; 1
    24ba:	68 96       	adiw	r28, 0x18	; 24
    24bc:	e6 e0       	ldi	r30, 0x06	; 6
    24be:	0c 94 39 2e 	jmp	0x5c72	; 0x5c72 <__epilogue_restores__+0x18>

000024c2 <__fixsfsi>:
    24c2:	ac e0       	ldi	r26, 0x0C	; 12
    24c4:	b0 e0       	ldi	r27, 0x00	; 0
    24c6:	e7 e6       	ldi	r30, 0x67	; 103
    24c8:	f2 e1       	ldi	r31, 0x12	; 18
    24ca:	0c 94 21 2e 	jmp	0x5c42	; 0x5c42 <__prologue_saves__+0x20>
    24ce:	69 83       	std	Y+1, r22	; 0x01
    24d0:	7a 83       	std	Y+2, r23	; 0x02
    24d2:	8b 83       	std	Y+3, r24	; 0x03
    24d4:	9c 83       	std	Y+4, r25	; 0x04
    24d6:	ce 01       	movw	r24, r28
    24d8:	01 96       	adiw	r24, 0x01	; 1
    24da:	be 01       	movw	r22, r28
    24dc:	6b 5f       	subi	r22, 0xFB	; 251
    24de:	7f 4f       	sbci	r23, 0xFF	; 255
    24e0:	0e 94 52 14 	call	0x28a4	; 0x28a4 <__unpack_f>
    24e4:	8d 81       	ldd	r24, Y+5	; 0x05
    24e6:	82 30       	cpi	r24, 0x02	; 2
    24e8:	61 f1       	breq	.+88     	; 0x2542 <__fixsfsi+0x80>
    24ea:	82 30       	cpi	r24, 0x02	; 2
    24ec:	50 f1       	brcs	.+84     	; 0x2542 <__fixsfsi+0x80>
    24ee:	84 30       	cpi	r24, 0x04	; 4
    24f0:	21 f4       	brne	.+8      	; 0x24fa <__fixsfsi+0x38>
    24f2:	8e 81       	ldd	r24, Y+6	; 0x06
    24f4:	88 23       	and	r24, r24
    24f6:	51 f1       	breq	.+84     	; 0x254c <__fixsfsi+0x8a>
    24f8:	2e c0       	rjmp	.+92     	; 0x2556 <__fixsfsi+0x94>
    24fa:	2f 81       	ldd	r18, Y+7	; 0x07
    24fc:	38 85       	ldd	r19, Y+8	; 0x08
    24fe:	37 fd       	sbrc	r19, 7
    2500:	20 c0       	rjmp	.+64     	; 0x2542 <__fixsfsi+0x80>
    2502:	6e 81       	ldd	r22, Y+6	; 0x06
    2504:	2f 31       	cpi	r18, 0x1F	; 31
    2506:	31 05       	cpc	r19, r1
    2508:	1c f0       	brlt	.+6      	; 0x2510 <__fixsfsi+0x4e>
    250a:	66 23       	and	r22, r22
    250c:	f9 f0       	breq	.+62     	; 0x254c <__fixsfsi+0x8a>
    250e:	23 c0       	rjmp	.+70     	; 0x2556 <__fixsfsi+0x94>
    2510:	8e e1       	ldi	r24, 0x1E	; 30
    2512:	90 e0       	ldi	r25, 0x00	; 0
    2514:	82 1b       	sub	r24, r18
    2516:	93 0b       	sbc	r25, r19
    2518:	29 85       	ldd	r18, Y+9	; 0x09
    251a:	3a 85       	ldd	r19, Y+10	; 0x0a
    251c:	4b 85       	ldd	r20, Y+11	; 0x0b
    251e:	5c 85       	ldd	r21, Y+12	; 0x0c
    2520:	04 c0       	rjmp	.+8      	; 0x252a <__fixsfsi+0x68>
    2522:	56 95       	lsr	r21
    2524:	47 95       	ror	r20
    2526:	37 95       	ror	r19
    2528:	27 95       	ror	r18
    252a:	8a 95       	dec	r24
    252c:	d2 f7       	brpl	.-12     	; 0x2522 <__fixsfsi+0x60>
    252e:	66 23       	and	r22, r22
    2530:	b1 f0       	breq	.+44     	; 0x255e <__fixsfsi+0x9c>
    2532:	50 95       	com	r21
    2534:	40 95       	com	r20
    2536:	30 95       	com	r19
    2538:	21 95       	neg	r18
    253a:	3f 4f       	sbci	r19, 0xFF	; 255
    253c:	4f 4f       	sbci	r20, 0xFF	; 255
    253e:	5f 4f       	sbci	r21, 0xFF	; 255
    2540:	0e c0       	rjmp	.+28     	; 0x255e <__fixsfsi+0x9c>
    2542:	20 e0       	ldi	r18, 0x00	; 0
    2544:	30 e0       	ldi	r19, 0x00	; 0
    2546:	40 e0       	ldi	r20, 0x00	; 0
    2548:	50 e0       	ldi	r21, 0x00	; 0
    254a:	09 c0       	rjmp	.+18     	; 0x255e <__fixsfsi+0x9c>
    254c:	2f ef       	ldi	r18, 0xFF	; 255
    254e:	3f ef       	ldi	r19, 0xFF	; 255
    2550:	4f ef       	ldi	r20, 0xFF	; 255
    2552:	5f e7       	ldi	r21, 0x7F	; 127
    2554:	04 c0       	rjmp	.+8      	; 0x255e <__fixsfsi+0x9c>
    2556:	20 e0       	ldi	r18, 0x00	; 0
    2558:	30 e0       	ldi	r19, 0x00	; 0
    255a:	40 e0       	ldi	r20, 0x00	; 0
    255c:	50 e8       	ldi	r21, 0x80	; 128
    255e:	b9 01       	movw	r22, r18
    2560:	ca 01       	movw	r24, r20
    2562:	2c 96       	adiw	r28, 0x0c	; 12
    2564:	e2 e0       	ldi	r30, 0x02	; 2
    2566:	0c 94 3d 2e 	jmp	0x5c7a	; 0x5c7a <__epilogue_restores__+0x20>

0000256a <__floatunsisf>:
    256a:	a8 e0       	ldi	r26, 0x08	; 8
    256c:	b0 e0       	ldi	r27, 0x00	; 0
    256e:	eb eb       	ldi	r30, 0xBB	; 187
    2570:	f2 e1       	ldi	r31, 0x12	; 18
    2572:	0c 94 19 2e 	jmp	0x5c32	; 0x5c32 <__prologue_saves__+0x10>
    2576:	7b 01       	movw	r14, r22
    2578:	8c 01       	movw	r16, r24
    257a:	61 15       	cp	r22, r1
    257c:	71 05       	cpc	r23, r1
    257e:	81 05       	cpc	r24, r1
    2580:	91 05       	cpc	r25, r1
    2582:	19 f4       	brne	.+6      	; 0x258a <__floatunsisf+0x20>
    2584:	82 e0       	ldi	r24, 0x02	; 2
    2586:	89 83       	std	Y+1, r24	; 0x01
    2588:	60 c0       	rjmp	.+192    	; 0x264a <__floatunsisf+0xe0>
    258a:	83 e0       	ldi	r24, 0x03	; 3
    258c:	89 83       	std	Y+1, r24	; 0x01
    258e:	8e e1       	ldi	r24, 0x1E	; 30
    2590:	c8 2e       	mov	r12, r24
    2592:	d1 2c       	mov	r13, r1
    2594:	dc 82       	std	Y+4, r13	; 0x04
    2596:	cb 82       	std	Y+3, r12	; 0x03
    2598:	ed 82       	std	Y+5, r14	; 0x05
    259a:	fe 82       	std	Y+6, r15	; 0x06
    259c:	0f 83       	std	Y+7, r16	; 0x07
    259e:	18 87       	std	Y+8, r17	; 0x08
    25a0:	c8 01       	movw	r24, r16
    25a2:	b7 01       	movw	r22, r14
    25a4:	0e 94 2e 13 	call	0x265c	; 0x265c <__clzsi2>
    25a8:	fc 01       	movw	r30, r24
    25aa:	31 97       	sbiw	r30, 0x01	; 1
    25ac:	f7 ff       	sbrs	r31, 7
    25ae:	3b c0       	rjmp	.+118    	; 0x2626 <__floatunsisf+0xbc>
    25b0:	22 27       	eor	r18, r18
    25b2:	33 27       	eor	r19, r19
    25b4:	2e 1b       	sub	r18, r30
    25b6:	3f 0b       	sbc	r19, r31
    25b8:	57 01       	movw	r10, r14
    25ba:	68 01       	movw	r12, r16
    25bc:	02 2e       	mov	r0, r18
    25be:	04 c0       	rjmp	.+8      	; 0x25c8 <__floatunsisf+0x5e>
    25c0:	d6 94       	lsr	r13
    25c2:	c7 94       	ror	r12
    25c4:	b7 94       	ror	r11
    25c6:	a7 94       	ror	r10
    25c8:	0a 94       	dec	r0
    25ca:	d2 f7       	brpl	.-12     	; 0x25c0 <__floatunsisf+0x56>
    25cc:	40 e0       	ldi	r20, 0x00	; 0
    25ce:	50 e0       	ldi	r21, 0x00	; 0
    25d0:	60 e0       	ldi	r22, 0x00	; 0
    25d2:	70 e0       	ldi	r23, 0x00	; 0
    25d4:	81 e0       	ldi	r24, 0x01	; 1
    25d6:	90 e0       	ldi	r25, 0x00	; 0
    25d8:	a0 e0       	ldi	r26, 0x00	; 0
    25da:	b0 e0       	ldi	r27, 0x00	; 0
    25dc:	04 c0       	rjmp	.+8      	; 0x25e6 <__floatunsisf+0x7c>
    25de:	88 0f       	add	r24, r24
    25e0:	99 1f       	adc	r25, r25
    25e2:	aa 1f       	adc	r26, r26
    25e4:	bb 1f       	adc	r27, r27
    25e6:	2a 95       	dec	r18
    25e8:	d2 f7       	brpl	.-12     	; 0x25de <__floatunsisf+0x74>
    25ea:	01 97       	sbiw	r24, 0x01	; 1
    25ec:	a1 09       	sbc	r26, r1
    25ee:	b1 09       	sbc	r27, r1
    25f0:	8e 21       	and	r24, r14
    25f2:	9f 21       	and	r25, r15
    25f4:	a0 23       	and	r26, r16
    25f6:	b1 23       	and	r27, r17
    25f8:	00 97       	sbiw	r24, 0x00	; 0
    25fa:	a1 05       	cpc	r26, r1
    25fc:	b1 05       	cpc	r27, r1
    25fe:	21 f0       	breq	.+8      	; 0x2608 <__floatunsisf+0x9e>
    2600:	41 e0       	ldi	r20, 0x01	; 1
    2602:	50 e0       	ldi	r21, 0x00	; 0
    2604:	60 e0       	ldi	r22, 0x00	; 0
    2606:	70 e0       	ldi	r23, 0x00	; 0
    2608:	4a 29       	or	r20, r10
    260a:	5b 29       	or	r21, r11
    260c:	6c 29       	or	r22, r12
    260e:	7d 29       	or	r23, r13
    2610:	4d 83       	std	Y+5, r20	; 0x05
    2612:	5e 83       	std	Y+6, r21	; 0x06
    2614:	6f 83       	std	Y+7, r22	; 0x07
    2616:	78 87       	std	Y+8, r23	; 0x08
    2618:	8e e1       	ldi	r24, 0x1E	; 30
    261a:	90 e0       	ldi	r25, 0x00	; 0
    261c:	8e 1b       	sub	r24, r30
    261e:	9f 0b       	sbc	r25, r31
    2620:	9c 83       	std	Y+4, r25	; 0x04
    2622:	8b 83       	std	Y+3, r24	; 0x03
    2624:	12 c0       	rjmp	.+36     	; 0x264a <__floatunsisf+0xe0>
    2626:	30 97       	sbiw	r30, 0x00	; 0
    2628:	81 f0       	breq	.+32     	; 0x264a <__floatunsisf+0xe0>
    262a:	0e 2e       	mov	r0, r30
    262c:	04 c0       	rjmp	.+8      	; 0x2636 <__floatunsisf+0xcc>
    262e:	ee 0c       	add	r14, r14
    2630:	ff 1c       	adc	r15, r15
    2632:	00 1f       	adc	r16, r16
    2634:	11 1f       	adc	r17, r17
    2636:	0a 94       	dec	r0
    2638:	d2 f7       	brpl	.-12     	; 0x262e <__floatunsisf+0xc4>
    263a:	ed 82       	std	Y+5, r14	; 0x05
    263c:	fe 82       	std	Y+6, r15	; 0x06
    263e:	0f 83       	std	Y+7, r16	; 0x07
    2640:	18 87       	std	Y+8, r17	; 0x08
    2642:	ce 1a       	sub	r12, r30
    2644:	df 0a       	sbc	r13, r31
    2646:	dc 82       	std	Y+4, r13	; 0x04
    2648:	cb 82       	std	Y+3, r12	; 0x03
    264a:	1a 82       	std	Y+2, r1	; 0x02
    264c:	ce 01       	movw	r24, r28
    264e:	01 96       	adiw	r24, 0x01	; 1
    2650:	0e 94 7d 13 	call	0x26fa	; 0x26fa <__pack_f>
    2654:	28 96       	adiw	r28, 0x08	; 8
    2656:	ea e0       	ldi	r30, 0x0A	; 10
    2658:	0c 94 35 2e 	jmp	0x5c6a	; 0x5c6a <__epilogue_restores__+0x10>

0000265c <__clzsi2>:
    265c:	ef 92       	push	r14
    265e:	ff 92       	push	r15
    2660:	0f 93       	push	r16
    2662:	1f 93       	push	r17
    2664:	7b 01       	movw	r14, r22
    2666:	8c 01       	movw	r16, r24
    2668:	80 e0       	ldi	r24, 0x00	; 0
    266a:	e8 16       	cp	r14, r24
    266c:	80 e0       	ldi	r24, 0x00	; 0
    266e:	f8 06       	cpc	r15, r24
    2670:	81 e0       	ldi	r24, 0x01	; 1
    2672:	08 07       	cpc	r16, r24
    2674:	80 e0       	ldi	r24, 0x00	; 0
    2676:	18 07       	cpc	r17, r24
    2678:	88 f4       	brcc	.+34     	; 0x269c <__clzsi2+0x40>
    267a:	8f ef       	ldi	r24, 0xFF	; 255
    267c:	e8 16       	cp	r14, r24
    267e:	f1 04       	cpc	r15, r1
    2680:	01 05       	cpc	r16, r1
    2682:	11 05       	cpc	r17, r1
    2684:	31 f0       	breq	.+12     	; 0x2692 <__clzsi2+0x36>
    2686:	28 f0       	brcs	.+10     	; 0x2692 <__clzsi2+0x36>
    2688:	88 e0       	ldi	r24, 0x08	; 8
    268a:	90 e0       	ldi	r25, 0x00	; 0
    268c:	a0 e0       	ldi	r26, 0x00	; 0
    268e:	b0 e0       	ldi	r27, 0x00	; 0
    2690:	17 c0       	rjmp	.+46     	; 0x26c0 <__clzsi2+0x64>
    2692:	80 e0       	ldi	r24, 0x00	; 0
    2694:	90 e0       	ldi	r25, 0x00	; 0
    2696:	a0 e0       	ldi	r26, 0x00	; 0
    2698:	b0 e0       	ldi	r27, 0x00	; 0
    269a:	12 c0       	rjmp	.+36     	; 0x26c0 <__clzsi2+0x64>
    269c:	80 e0       	ldi	r24, 0x00	; 0
    269e:	e8 16       	cp	r14, r24
    26a0:	80 e0       	ldi	r24, 0x00	; 0
    26a2:	f8 06       	cpc	r15, r24
    26a4:	80 e0       	ldi	r24, 0x00	; 0
    26a6:	08 07       	cpc	r16, r24
    26a8:	81 e0       	ldi	r24, 0x01	; 1
    26aa:	18 07       	cpc	r17, r24
    26ac:	28 f0       	brcs	.+10     	; 0x26b8 <__clzsi2+0x5c>
    26ae:	88 e1       	ldi	r24, 0x18	; 24
    26b0:	90 e0       	ldi	r25, 0x00	; 0
    26b2:	a0 e0       	ldi	r26, 0x00	; 0
    26b4:	b0 e0       	ldi	r27, 0x00	; 0
    26b6:	04 c0       	rjmp	.+8      	; 0x26c0 <__clzsi2+0x64>
    26b8:	80 e1       	ldi	r24, 0x10	; 16
    26ba:	90 e0       	ldi	r25, 0x00	; 0
    26bc:	a0 e0       	ldi	r26, 0x00	; 0
    26be:	b0 e0       	ldi	r27, 0x00	; 0
    26c0:	20 e2       	ldi	r18, 0x20	; 32
    26c2:	30 e0       	ldi	r19, 0x00	; 0
    26c4:	40 e0       	ldi	r20, 0x00	; 0
    26c6:	50 e0       	ldi	r21, 0x00	; 0
    26c8:	28 1b       	sub	r18, r24
    26ca:	39 0b       	sbc	r19, r25
    26cc:	4a 0b       	sbc	r20, r26
    26ce:	5b 0b       	sbc	r21, r27
    26d0:	04 c0       	rjmp	.+8      	; 0x26da <__clzsi2+0x7e>
    26d2:	16 95       	lsr	r17
    26d4:	07 95       	ror	r16
    26d6:	f7 94       	ror	r15
    26d8:	e7 94       	ror	r14
    26da:	8a 95       	dec	r24
    26dc:	d2 f7       	brpl	.-12     	; 0x26d2 <__clzsi2+0x76>
    26de:	f7 01       	movw	r30, r14
    26e0:	e8 59       	subi	r30, 0x98	; 152
    26e2:	ff 4f       	sbci	r31, 0xFF	; 255
    26e4:	80 81       	ld	r24, Z
    26e6:	28 1b       	sub	r18, r24
    26e8:	31 09       	sbc	r19, r1
    26ea:	41 09       	sbc	r20, r1
    26ec:	51 09       	sbc	r21, r1
    26ee:	c9 01       	movw	r24, r18
    26f0:	1f 91       	pop	r17
    26f2:	0f 91       	pop	r16
    26f4:	ff 90       	pop	r15
    26f6:	ef 90       	pop	r14
    26f8:	08 95       	ret

000026fa <__pack_f>:
    26fa:	df 92       	push	r13
    26fc:	ef 92       	push	r14
    26fe:	ff 92       	push	r15
    2700:	0f 93       	push	r16
    2702:	1f 93       	push	r17
    2704:	fc 01       	movw	r30, r24
    2706:	e4 80       	ldd	r14, Z+4	; 0x04
    2708:	f5 80       	ldd	r15, Z+5	; 0x05
    270a:	06 81       	ldd	r16, Z+6	; 0x06
    270c:	17 81       	ldd	r17, Z+7	; 0x07
    270e:	d1 80       	ldd	r13, Z+1	; 0x01
    2710:	80 81       	ld	r24, Z
    2712:	82 30       	cpi	r24, 0x02	; 2
    2714:	48 f4       	brcc	.+18     	; 0x2728 <__pack_f+0x2e>
    2716:	80 e0       	ldi	r24, 0x00	; 0
    2718:	90 e0       	ldi	r25, 0x00	; 0
    271a:	a0 e1       	ldi	r26, 0x10	; 16
    271c:	b0 e0       	ldi	r27, 0x00	; 0
    271e:	e8 2a       	or	r14, r24
    2720:	f9 2a       	or	r15, r25
    2722:	0a 2b       	or	r16, r26
    2724:	1b 2b       	or	r17, r27
    2726:	a5 c0       	rjmp	.+330    	; 0x2872 <__pack_f+0x178>
    2728:	84 30       	cpi	r24, 0x04	; 4
    272a:	09 f4       	brne	.+2      	; 0x272e <__pack_f+0x34>
    272c:	9f c0       	rjmp	.+318    	; 0x286c <__pack_f+0x172>
    272e:	82 30       	cpi	r24, 0x02	; 2
    2730:	21 f4       	brne	.+8      	; 0x273a <__pack_f+0x40>
    2732:	ee 24       	eor	r14, r14
    2734:	ff 24       	eor	r15, r15
    2736:	87 01       	movw	r16, r14
    2738:	05 c0       	rjmp	.+10     	; 0x2744 <__pack_f+0x4a>
    273a:	e1 14       	cp	r14, r1
    273c:	f1 04       	cpc	r15, r1
    273e:	01 05       	cpc	r16, r1
    2740:	11 05       	cpc	r17, r1
    2742:	19 f4       	brne	.+6      	; 0x274a <__pack_f+0x50>
    2744:	e0 e0       	ldi	r30, 0x00	; 0
    2746:	f0 e0       	ldi	r31, 0x00	; 0
    2748:	96 c0       	rjmp	.+300    	; 0x2876 <__pack_f+0x17c>
    274a:	62 81       	ldd	r22, Z+2	; 0x02
    274c:	73 81       	ldd	r23, Z+3	; 0x03
    274e:	9f ef       	ldi	r25, 0xFF	; 255
    2750:	62 38       	cpi	r22, 0x82	; 130
    2752:	79 07       	cpc	r23, r25
    2754:	0c f0       	brlt	.+2      	; 0x2758 <__pack_f+0x5e>
    2756:	5b c0       	rjmp	.+182    	; 0x280e <__pack_f+0x114>
    2758:	22 e8       	ldi	r18, 0x82	; 130
    275a:	3f ef       	ldi	r19, 0xFF	; 255
    275c:	26 1b       	sub	r18, r22
    275e:	37 0b       	sbc	r19, r23
    2760:	2a 31       	cpi	r18, 0x1A	; 26
    2762:	31 05       	cpc	r19, r1
    2764:	2c f0       	brlt	.+10     	; 0x2770 <__pack_f+0x76>
    2766:	20 e0       	ldi	r18, 0x00	; 0
    2768:	30 e0       	ldi	r19, 0x00	; 0
    276a:	40 e0       	ldi	r20, 0x00	; 0
    276c:	50 e0       	ldi	r21, 0x00	; 0
    276e:	2a c0       	rjmp	.+84     	; 0x27c4 <__pack_f+0xca>
    2770:	b8 01       	movw	r22, r16
    2772:	a7 01       	movw	r20, r14
    2774:	02 2e       	mov	r0, r18
    2776:	04 c0       	rjmp	.+8      	; 0x2780 <__pack_f+0x86>
    2778:	76 95       	lsr	r23
    277a:	67 95       	ror	r22
    277c:	57 95       	ror	r21
    277e:	47 95       	ror	r20
    2780:	0a 94       	dec	r0
    2782:	d2 f7       	brpl	.-12     	; 0x2778 <__pack_f+0x7e>
    2784:	81 e0       	ldi	r24, 0x01	; 1
    2786:	90 e0       	ldi	r25, 0x00	; 0
    2788:	a0 e0       	ldi	r26, 0x00	; 0
    278a:	b0 e0       	ldi	r27, 0x00	; 0
    278c:	04 c0       	rjmp	.+8      	; 0x2796 <__pack_f+0x9c>
    278e:	88 0f       	add	r24, r24
    2790:	99 1f       	adc	r25, r25
    2792:	aa 1f       	adc	r26, r26
    2794:	bb 1f       	adc	r27, r27
    2796:	2a 95       	dec	r18
    2798:	d2 f7       	brpl	.-12     	; 0x278e <__pack_f+0x94>
    279a:	01 97       	sbiw	r24, 0x01	; 1
    279c:	a1 09       	sbc	r26, r1
    279e:	b1 09       	sbc	r27, r1
    27a0:	8e 21       	and	r24, r14
    27a2:	9f 21       	and	r25, r15
    27a4:	a0 23       	and	r26, r16
    27a6:	b1 23       	and	r27, r17
    27a8:	00 97       	sbiw	r24, 0x00	; 0
    27aa:	a1 05       	cpc	r26, r1
    27ac:	b1 05       	cpc	r27, r1
    27ae:	21 f0       	breq	.+8      	; 0x27b8 <__pack_f+0xbe>
    27b0:	81 e0       	ldi	r24, 0x01	; 1
    27b2:	90 e0       	ldi	r25, 0x00	; 0
    27b4:	a0 e0       	ldi	r26, 0x00	; 0
    27b6:	b0 e0       	ldi	r27, 0x00	; 0
    27b8:	9a 01       	movw	r18, r20
    27ba:	ab 01       	movw	r20, r22
    27bc:	28 2b       	or	r18, r24
    27be:	39 2b       	or	r19, r25
    27c0:	4a 2b       	or	r20, r26
    27c2:	5b 2b       	or	r21, r27
    27c4:	da 01       	movw	r26, r20
    27c6:	c9 01       	movw	r24, r18
    27c8:	8f 77       	andi	r24, 0x7F	; 127
    27ca:	90 70       	andi	r25, 0x00	; 0
    27cc:	a0 70       	andi	r26, 0x00	; 0
    27ce:	b0 70       	andi	r27, 0x00	; 0
    27d0:	80 34       	cpi	r24, 0x40	; 64
    27d2:	91 05       	cpc	r25, r1
    27d4:	a1 05       	cpc	r26, r1
    27d6:	b1 05       	cpc	r27, r1
    27d8:	39 f4       	brne	.+14     	; 0x27e8 <__pack_f+0xee>
    27da:	27 ff       	sbrs	r18, 7
    27dc:	09 c0       	rjmp	.+18     	; 0x27f0 <__pack_f+0xf6>
    27de:	20 5c       	subi	r18, 0xC0	; 192
    27e0:	3f 4f       	sbci	r19, 0xFF	; 255
    27e2:	4f 4f       	sbci	r20, 0xFF	; 255
    27e4:	5f 4f       	sbci	r21, 0xFF	; 255
    27e6:	04 c0       	rjmp	.+8      	; 0x27f0 <__pack_f+0xf6>
    27e8:	21 5c       	subi	r18, 0xC1	; 193
    27ea:	3f 4f       	sbci	r19, 0xFF	; 255
    27ec:	4f 4f       	sbci	r20, 0xFF	; 255
    27ee:	5f 4f       	sbci	r21, 0xFF	; 255
    27f0:	e0 e0       	ldi	r30, 0x00	; 0
    27f2:	f0 e0       	ldi	r31, 0x00	; 0
    27f4:	20 30       	cpi	r18, 0x00	; 0
    27f6:	a0 e0       	ldi	r26, 0x00	; 0
    27f8:	3a 07       	cpc	r19, r26
    27fa:	a0 e0       	ldi	r26, 0x00	; 0
    27fc:	4a 07       	cpc	r20, r26
    27fe:	a0 e4       	ldi	r26, 0x40	; 64
    2800:	5a 07       	cpc	r21, r26
    2802:	10 f0       	brcs	.+4      	; 0x2808 <__pack_f+0x10e>
    2804:	e1 e0       	ldi	r30, 0x01	; 1
    2806:	f0 e0       	ldi	r31, 0x00	; 0
    2808:	79 01       	movw	r14, r18
    280a:	8a 01       	movw	r16, r20
    280c:	27 c0       	rjmp	.+78     	; 0x285c <__pack_f+0x162>
    280e:	60 38       	cpi	r22, 0x80	; 128
    2810:	71 05       	cpc	r23, r1
    2812:	64 f5       	brge	.+88     	; 0x286c <__pack_f+0x172>
    2814:	fb 01       	movw	r30, r22
    2816:	e1 58       	subi	r30, 0x81	; 129
    2818:	ff 4f       	sbci	r31, 0xFF	; 255
    281a:	d8 01       	movw	r26, r16
    281c:	c7 01       	movw	r24, r14
    281e:	8f 77       	andi	r24, 0x7F	; 127
    2820:	90 70       	andi	r25, 0x00	; 0
    2822:	a0 70       	andi	r26, 0x00	; 0
    2824:	b0 70       	andi	r27, 0x00	; 0
    2826:	80 34       	cpi	r24, 0x40	; 64
    2828:	91 05       	cpc	r25, r1
    282a:	a1 05       	cpc	r26, r1
    282c:	b1 05       	cpc	r27, r1
    282e:	39 f4       	brne	.+14     	; 0x283e <__pack_f+0x144>
    2830:	e7 fe       	sbrs	r14, 7
    2832:	0d c0       	rjmp	.+26     	; 0x284e <__pack_f+0x154>
    2834:	80 e4       	ldi	r24, 0x40	; 64
    2836:	90 e0       	ldi	r25, 0x00	; 0
    2838:	a0 e0       	ldi	r26, 0x00	; 0
    283a:	b0 e0       	ldi	r27, 0x00	; 0
    283c:	04 c0       	rjmp	.+8      	; 0x2846 <__pack_f+0x14c>
    283e:	8f e3       	ldi	r24, 0x3F	; 63
    2840:	90 e0       	ldi	r25, 0x00	; 0
    2842:	a0 e0       	ldi	r26, 0x00	; 0
    2844:	b0 e0       	ldi	r27, 0x00	; 0
    2846:	e8 0e       	add	r14, r24
    2848:	f9 1e       	adc	r15, r25
    284a:	0a 1f       	adc	r16, r26
    284c:	1b 1f       	adc	r17, r27
    284e:	17 ff       	sbrs	r17, 7
    2850:	05 c0       	rjmp	.+10     	; 0x285c <__pack_f+0x162>
    2852:	16 95       	lsr	r17
    2854:	07 95       	ror	r16
    2856:	f7 94       	ror	r15
    2858:	e7 94       	ror	r14
    285a:	31 96       	adiw	r30, 0x01	; 1
    285c:	87 e0       	ldi	r24, 0x07	; 7
    285e:	16 95       	lsr	r17
    2860:	07 95       	ror	r16
    2862:	f7 94       	ror	r15
    2864:	e7 94       	ror	r14
    2866:	8a 95       	dec	r24
    2868:	d1 f7       	brne	.-12     	; 0x285e <__pack_f+0x164>
    286a:	05 c0       	rjmp	.+10     	; 0x2876 <__pack_f+0x17c>
    286c:	ee 24       	eor	r14, r14
    286e:	ff 24       	eor	r15, r15
    2870:	87 01       	movw	r16, r14
    2872:	ef ef       	ldi	r30, 0xFF	; 255
    2874:	f0 e0       	ldi	r31, 0x00	; 0
    2876:	6e 2f       	mov	r22, r30
    2878:	67 95       	ror	r22
    287a:	66 27       	eor	r22, r22
    287c:	67 95       	ror	r22
    287e:	90 2f       	mov	r25, r16
    2880:	9f 77       	andi	r25, 0x7F	; 127
    2882:	d7 94       	ror	r13
    2884:	dd 24       	eor	r13, r13
    2886:	d7 94       	ror	r13
    2888:	8e 2f       	mov	r24, r30
    288a:	86 95       	lsr	r24
    288c:	49 2f       	mov	r20, r25
    288e:	46 2b       	or	r20, r22
    2890:	58 2f       	mov	r21, r24
    2892:	5d 29       	or	r21, r13
    2894:	b7 01       	movw	r22, r14
    2896:	ca 01       	movw	r24, r20
    2898:	1f 91       	pop	r17
    289a:	0f 91       	pop	r16
    289c:	ff 90       	pop	r15
    289e:	ef 90       	pop	r14
    28a0:	df 90       	pop	r13
    28a2:	08 95       	ret

000028a4 <__unpack_f>:
    28a4:	fc 01       	movw	r30, r24
    28a6:	db 01       	movw	r26, r22
    28a8:	40 81       	ld	r20, Z
    28aa:	51 81       	ldd	r21, Z+1	; 0x01
    28ac:	22 81       	ldd	r18, Z+2	; 0x02
    28ae:	62 2f       	mov	r22, r18
    28b0:	6f 77       	andi	r22, 0x7F	; 127
    28b2:	70 e0       	ldi	r23, 0x00	; 0
    28b4:	22 1f       	adc	r18, r18
    28b6:	22 27       	eor	r18, r18
    28b8:	22 1f       	adc	r18, r18
    28ba:	93 81       	ldd	r25, Z+3	; 0x03
    28bc:	89 2f       	mov	r24, r25
    28be:	88 0f       	add	r24, r24
    28c0:	82 2b       	or	r24, r18
    28c2:	28 2f       	mov	r18, r24
    28c4:	30 e0       	ldi	r19, 0x00	; 0
    28c6:	99 1f       	adc	r25, r25
    28c8:	99 27       	eor	r25, r25
    28ca:	99 1f       	adc	r25, r25
    28cc:	11 96       	adiw	r26, 0x01	; 1
    28ce:	9c 93       	st	X, r25
    28d0:	11 97       	sbiw	r26, 0x01	; 1
    28d2:	21 15       	cp	r18, r1
    28d4:	31 05       	cpc	r19, r1
    28d6:	a9 f5       	brne	.+106    	; 0x2942 <__unpack_f+0x9e>
    28d8:	41 15       	cp	r20, r1
    28da:	51 05       	cpc	r21, r1
    28dc:	61 05       	cpc	r22, r1
    28de:	71 05       	cpc	r23, r1
    28e0:	11 f4       	brne	.+4      	; 0x28e6 <__unpack_f+0x42>
    28e2:	82 e0       	ldi	r24, 0x02	; 2
    28e4:	37 c0       	rjmp	.+110    	; 0x2954 <__unpack_f+0xb0>
    28e6:	82 e8       	ldi	r24, 0x82	; 130
    28e8:	9f ef       	ldi	r25, 0xFF	; 255
    28ea:	13 96       	adiw	r26, 0x03	; 3
    28ec:	9c 93       	st	X, r25
    28ee:	8e 93       	st	-X, r24
    28f0:	12 97       	sbiw	r26, 0x02	; 2
    28f2:	9a 01       	movw	r18, r20
    28f4:	ab 01       	movw	r20, r22
    28f6:	67 e0       	ldi	r22, 0x07	; 7
    28f8:	22 0f       	add	r18, r18
    28fa:	33 1f       	adc	r19, r19
    28fc:	44 1f       	adc	r20, r20
    28fe:	55 1f       	adc	r21, r21
    2900:	6a 95       	dec	r22
    2902:	d1 f7       	brne	.-12     	; 0x28f8 <__unpack_f+0x54>
    2904:	83 e0       	ldi	r24, 0x03	; 3
    2906:	8c 93       	st	X, r24
    2908:	0d c0       	rjmp	.+26     	; 0x2924 <__unpack_f+0x80>
    290a:	22 0f       	add	r18, r18
    290c:	33 1f       	adc	r19, r19
    290e:	44 1f       	adc	r20, r20
    2910:	55 1f       	adc	r21, r21
    2912:	12 96       	adiw	r26, 0x02	; 2
    2914:	8d 91       	ld	r24, X+
    2916:	9c 91       	ld	r25, X
    2918:	13 97       	sbiw	r26, 0x03	; 3
    291a:	01 97       	sbiw	r24, 0x01	; 1
    291c:	13 96       	adiw	r26, 0x03	; 3
    291e:	9c 93       	st	X, r25
    2920:	8e 93       	st	-X, r24
    2922:	12 97       	sbiw	r26, 0x02	; 2
    2924:	20 30       	cpi	r18, 0x00	; 0
    2926:	80 e0       	ldi	r24, 0x00	; 0
    2928:	38 07       	cpc	r19, r24
    292a:	80 e0       	ldi	r24, 0x00	; 0
    292c:	48 07       	cpc	r20, r24
    292e:	80 e4       	ldi	r24, 0x40	; 64
    2930:	58 07       	cpc	r21, r24
    2932:	58 f3       	brcs	.-42     	; 0x290a <__unpack_f+0x66>
    2934:	14 96       	adiw	r26, 0x04	; 4
    2936:	2d 93       	st	X+, r18
    2938:	3d 93       	st	X+, r19
    293a:	4d 93       	st	X+, r20
    293c:	5c 93       	st	X, r21
    293e:	17 97       	sbiw	r26, 0x07	; 7
    2940:	08 95       	ret
    2942:	2f 3f       	cpi	r18, 0xFF	; 255
    2944:	31 05       	cpc	r19, r1
    2946:	79 f4       	brne	.+30     	; 0x2966 <__unpack_f+0xc2>
    2948:	41 15       	cp	r20, r1
    294a:	51 05       	cpc	r21, r1
    294c:	61 05       	cpc	r22, r1
    294e:	71 05       	cpc	r23, r1
    2950:	19 f4       	brne	.+6      	; 0x2958 <__unpack_f+0xb4>
    2952:	84 e0       	ldi	r24, 0x04	; 4
    2954:	8c 93       	st	X, r24
    2956:	08 95       	ret
    2958:	64 ff       	sbrs	r22, 4
    295a:	03 c0       	rjmp	.+6      	; 0x2962 <__unpack_f+0xbe>
    295c:	81 e0       	ldi	r24, 0x01	; 1
    295e:	8c 93       	st	X, r24
    2960:	12 c0       	rjmp	.+36     	; 0x2986 <__unpack_f+0xe2>
    2962:	1c 92       	st	X, r1
    2964:	10 c0       	rjmp	.+32     	; 0x2986 <__unpack_f+0xe2>
    2966:	2f 57       	subi	r18, 0x7F	; 127
    2968:	30 40       	sbci	r19, 0x00	; 0
    296a:	13 96       	adiw	r26, 0x03	; 3
    296c:	3c 93       	st	X, r19
    296e:	2e 93       	st	-X, r18
    2970:	12 97       	sbiw	r26, 0x02	; 2
    2972:	83 e0       	ldi	r24, 0x03	; 3
    2974:	8c 93       	st	X, r24
    2976:	87 e0       	ldi	r24, 0x07	; 7
    2978:	44 0f       	add	r20, r20
    297a:	55 1f       	adc	r21, r21
    297c:	66 1f       	adc	r22, r22
    297e:	77 1f       	adc	r23, r23
    2980:	8a 95       	dec	r24
    2982:	d1 f7       	brne	.-12     	; 0x2978 <__unpack_f+0xd4>
    2984:	70 64       	ori	r23, 0x40	; 64
    2986:	14 96       	adiw	r26, 0x04	; 4
    2988:	4d 93       	st	X+, r20
    298a:	5d 93       	st	X+, r21
    298c:	6d 93       	st	X+, r22
    298e:	7c 93       	st	X, r23
    2990:	17 97       	sbiw	r26, 0x07	; 7
    2992:	08 95       	ret

00002994 <__fpcmp_parts_f>:
    2994:	1f 93       	push	r17
    2996:	dc 01       	movw	r26, r24
    2998:	fb 01       	movw	r30, r22
    299a:	9c 91       	ld	r25, X
    299c:	92 30       	cpi	r25, 0x02	; 2
    299e:	08 f4       	brcc	.+2      	; 0x29a2 <__fpcmp_parts_f+0xe>
    29a0:	47 c0       	rjmp	.+142    	; 0x2a30 <__fpcmp_parts_f+0x9c>
    29a2:	80 81       	ld	r24, Z
    29a4:	82 30       	cpi	r24, 0x02	; 2
    29a6:	08 f4       	brcc	.+2      	; 0x29aa <__fpcmp_parts_f+0x16>
    29a8:	43 c0       	rjmp	.+134    	; 0x2a30 <__fpcmp_parts_f+0x9c>
    29aa:	94 30       	cpi	r25, 0x04	; 4
    29ac:	51 f4       	brne	.+20     	; 0x29c2 <__fpcmp_parts_f+0x2e>
    29ae:	11 96       	adiw	r26, 0x01	; 1
    29b0:	1c 91       	ld	r17, X
    29b2:	84 30       	cpi	r24, 0x04	; 4
    29b4:	99 f5       	brne	.+102    	; 0x2a1c <__fpcmp_parts_f+0x88>
    29b6:	81 81       	ldd	r24, Z+1	; 0x01
    29b8:	68 2f       	mov	r22, r24
    29ba:	70 e0       	ldi	r23, 0x00	; 0
    29bc:	61 1b       	sub	r22, r17
    29be:	71 09       	sbc	r23, r1
    29c0:	3f c0       	rjmp	.+126    	; 0x2a40 <__fpcmp_parts_f+0xac>
    29c2:	84 30       	cpi	r24, 0x04	; 4
    29c4:	21 f0       	breq	.+8      	; 0x29ce <__fpcmp_parts_f+0x3a>
    29c6:	92 30       	cpi	r25, 0x02	; 2
    29c8:	31 f4       	brne	.+12     	; 0x29d6 <__fpcmp_parts_f+0x42>
    29ca:	82 30       	cpi	r24, 0x02	; 2
    29cc:	b9 f1       	breq	.+110    	; 0x2a3c <__fpcmp_parts_f+0xa8>
    29ce:	81 81       	ldd	r24, Z+1	; 0x01
    29d0:	88 23       	and	r24, r24
    29d2:	89 f1       	breq	.+98     	; 0x2a36 <__fpcmp_parts_f+0xa2>
    29d4:	2d c0       	rjmp	.+90     	; 0x2a30 <__fpcmp_parts_f+0x9c>
    29d6:	11 96       	adiw	r26, 0x01	; 1
    29d8:	1c 91       	ld	r17, X
    29da:	11 97       	sbiw	r26, 0x01	; 1
    29dc:	82 30       	cpi	r24, 0x02	; 2
    29de:	f1 f0       	breq	.+60     	; 0x2a1c <__fpcmp_parts_f+0x88>
    29e0:	81 81       	ldd	r24, Z+1	; 0x01
    29e2:	18 17       	cp	r17, r24
    29e4:	d9 f4       	brne	.+54     	; 0x2a1c <__fpcmp_parts_f+0x88>
    29e6:	12 96       	adiw	r26, 0x02	; 2
    29e8:	2d 91       	ld	r18, X+
    29ea:	3c 91       	ld	r19, X
    29ec:	13 97       	sbiw	r26, 0x03	; 3
    29ee:	82 81       	ldd	r24, Z+2	; 0x02
    29f0:	93 81       	ldd	r25, Z+3	; 0x03
    29f2:	82 17       	cp	r24, r18
    29f4:	93 07       	cpc	r25, r19
    29f6:	94 f0       	brlt	.+36     	; 0x2a1c <__fpcmp_parts_f+0x88>
    29f8:	28 17       	cp	r18, r24
    29fa:	39 07       	cpc	r19, r25
    29fc:	bc f0       	brlt	.+46     	; 0x2a2c <__fpcmp_parts_f+0x98>
    29fe:	14 96       	adiw	r26, 0x04	; 4
    2a00:	8d 91       	ld	r24, X+
    2a02:	9d 91       	ld	r25, X+
    2a04:	0d 90       	ld	r0, X+
    2a06:	bc 91       	ld	r27, X
    2a08:	a0 2d       	mov	r26, r0
    2a0a:	24 81       	ldd	r18, Z+4	; 0x04
    2a0c:	35 81       	ldd	r19, Z+5	; 0x05
    2a0e:	46 81       	ldd	r20, Z+6	; 0x06
    2a10:	57 81       	ldd	r21, Z+7	; 0x07
    2a12:	28 17       	cp	r18, r24
    2a14:	39 07       	cpc	r19, r25
    2a16:	4a 07       	cpc	r20, r26
    2a18:	5b 07       	cpc	r21, r27
    2a1a:	18 f4       	brcc	.+6      	; 0x2a22 <__fpcmp_parts_f+0x8e>
    2a1c:	11 23       	and	r17, r17
    2a1e:	41 f0       	breq	.+16     	; 0x2a30 <__fpcmp_parts_f+0x9c>
    2a20:	0a c0       	rjmp	.+20     	; 0x2a36 <__fpcmp_parts_f+0xa2>
    2a22:	82 17       	cp	r24, r18
    2a24:	93 07       	cpc	r25, r19
    2a26:	a4 07       	cpc	r26, r20
    2a28:	b5 07       	cpc	r27, r21
    2a2a:	40 f4       	brcc	.+16     	; 0x2a3c <__fpcmp_parts_f+0xa8>
    2a2c:	11 23       	and	r17, r17
    2a2e:	19 f0       	breq	.+6      	; 0x2a36 <__fpcmp_parts_f+0xa2>
    2a30:	61 e0       	ldi	r22, 0x01	; 1
    2a32:	70 e0       	ldi	r23, 0x00	; 0
    2a34:	05 c0       	rjmp	.+10     	; 0x2a40 <__fpcmp_parts_f+0xac>
    2a36:	6f ef       	ldi	r22, 0xFF	; 255
    2a38:	7f ef       	ldi	r23, 0xFF	; 255
    2a3a:	02 c0       	rjmp	.+4      	; 0x2a40 <__fpcmp_parts_f+0xac>
    2a3c:	60 e0       	ldi	r22, 0x00	; 0
    2a3e:	70 e0       	ldi	r23, 0x00	; 0
    2a40:	cb 01       	movw	r24, r22
    2a42:	1f 91       	pop	r17
    2a44:	08 95       	ret

00002a46 <GPIO_voidSetPinDir>:
/**         *@param[in]	u8 Copy_u8PinNum  { 0 to 7  }																*/
/**         *@param[in]	u8 Copy_u8Direction { INPUT , OUTPUT }														*/
/**         *@param[out] void																						*/
/*-----------------------------------------------------------------------------------------------------------------	*/
void GPIO_voidSetPinDir(u8 Copy_u8PortNum ,u8 Copy_u8PinNum, u8 Copy_u8Direction)
{
    2a46:	df 93       	push	r29
    2a48:	cf 93       	push	r28
    2a4a:	cd b7       	in	r28, 0x3d	; 61
    2a4c:	de b7       	in	r29, 0x3e	; 62
    2a4e:	2d 97       	sbiw	r28, 0x0d	; 13
    2a50:	0f b6       	in	r0, 0x3f	; 63
    2a52:	f8 94       	cli
    2a54:	de bf       	out	0x3e, r29	; 62
    2a56:	0f be       	out	0x3f, r0	; 63
    2a58:	cd bf       	out	0x3d, r28	; 61
    2a5a:	89 83       	std	Y+1, r24	; 0x01
    2a5c:	6a 83       	std	Y+2, r22	; 0x02
    2a5e:	4b 83       	std	Y+3, r20	; 0x03
	
	switch(Copy_u8PortNum)
    2a60:	89 81       	ldd	r24, Y+1	; 0x01
    2a62:	28 2f       	mov	r18, r24
    2a64:	30 e0       	ldi	r19, 0x00	; 0
    2a66:	3d 87       	std	Y+13, r19	; 0x0d
    2a68:	2c 87       	std	Y+12, r18	; 0x0c
    2a6a:	8c 85       	ldd	r24, Y+12	; 0x0c
    2a6c:	9d 85       	ldd	r25, Y+13	; 0x0d
    2a6e:	81 30       	cpi	r24, 0x01	; 1
    2a70:	91 05       	cpc	r25, r1
    2a72:	09 f4       	brne	.+2      	; 0x2a76 <GPIO_voidSetPinDir+0x30>
    2a74:	4f c0       	rjmp	.+158    	; 0x2b14 <GPIO_voidSetPinDir+0xce>
    2a76:	2c 85       	ldd	r18, Y+12	; 0x0c
    2a78:	3d 85       	ldd	r19, Y+13	; 0x0d
    2a7a:	22 30       	cpi	r18, 0x02	; 2
    2a7c:	31 05       	cpc	r19, r1
    2a7e:	2c f4       	brge	.+10     	; 0x2a8a <GPIO_voidSetPinDir+0x44>
    2a80:	8c 85       	ldd	r24, Y+12	; 0x0c
    2a82:	9d 85       	ldd	r25, Y+13	; 0x0d
    2a84:	00 97       	sbiw	r24, 0x00	; 0
    2a86:	71 f0       	breq	.+28     	; 0x2aa4 <GPIO_voidSetPinDir+0x5e>
    2a88:	ec c0       	rjmp	.+472    	; 0x2c62 <GPIO_voidSetPinDir+0x21c>
    2a8a:	2c 85       	ldd	r18, Y+12	; 0x0c
    2a8c:	3d 85       	ldd	r19, Y+13	; 0x0d
    2a8e:	22 30       	cpi	r18, 0x02	; 2
    2a90:	31 05       	cpc	r19, r1
    2a92:	09 f4       	brne	.+2      	; 0x2a96 <GPIO_voidSetPinDir+0x50>
    2a94:	77 c0       	rjmp	.+238    	; 0x2b84 <GPIO_voidSetPinDir+0x13e>
    2a96:	8c 85       	ldd	r24, Y+12	; 0x0c
    2a98:	9d 85       	ldd	r25, Y+13	; 0x0d
    2a9a:	83 30       	cpi	r24, 0x03	; 3
    2a9c:	91 05       	cpc	r25, r1
    2a9e:	09 f4       	brne	.+2      	; 0x2aa2 <GPIO_voidSetPinDir+0x5c>
    2aa0:	a9 c0       	rjmp	.+338    	; 0x2bf4 <GPIO_voidSetPinDir+0x1ae>
    2aa2:	df c0       	rjmp	.+446    	; 0x2c62 <GPIO_voidSetPinDir+0x21c>
	{
		
		case GPIOA :
			switch (Copy_u8Direction)  
    2aa4:	8b 81       	ldd	r24, Y+3	; 0x03
    2aa6:	28 2f       	mov	r18, r24
    2aa8:	30 e0       	ldi	r19, 0x00	; 0
    2aaa:	3b 87       	std	Y+11, r19	; 0x0b
    2aac:	2a 87       	std	Y+10, r18	; 0x0a
    2aae:	8a 85       	ldd	r24, Y+10	; 0x0a
    2ab0:	9b 85       	ldd	r25, Y+11	; 0x0b
    2ab2:	00 97       	sbiw	r24, 0x00	; 0
    2ab4:	31 f0       	breq	.+12     	; 0x2ac2 <GPIO_voidSetPinDir+0x7c>
    2ab6:	2a 85       	ldd	r18, Y+10	; 0x0a
    2ab8:	3b 85       	ldd	r19, Y+11	; 0x0b
    2aba:	21 30       	cpi	r18, 0x01	; 1
    2abc:	31 05       	cpc	r19, r1
    2abe:	b1 f0       	breq	.+44     	; 0x2aec <GPIO_voidSetPinDir+0xa6>
    2ac0:	d0 c0       	rjmp	.+416    	; 0x2c62 <GPIO_voidSetPinDir+0x21c>
			{
				
				case INPUT  : CLR_BIT(DDRA,Copy_u8PinNum);  break;  
    2ac2:	aa e3       	ldi	r26, 0x3A	; 58
    2ac4:	b0 e0       	ldi	r27, 0x00	; 0
    2ac6:	ea e3       	ldi	r30, 0x3A	; 58
    2ac8:	f0 e0       	ldi	r31, 0x00	; 0
    2aca:	80 81       	ld	r24, Z
    2acc:	48 2f       	mov	r20, r24
    2ace:	8a 81       	ldd	r24, Y+2	; 0x02
    2ad0:	28 2f       	mov	r18, r24
    2ad2:	30 e0       	ldi	r19, 0x00	; 0
    2ad4:	81 e0       	ldi	r24, 0x01	; 1
    2ad6:	90 e0       	ldi	r25, 0x00	; 0
    2ad8:	02 2e       	mov	r0, r18
    2ada:	02 c0       	rjmp	.+4      	; 0x2ae0 <GPIO_voidSetPinDir+0x9a>
    2adc:	88 0f       	add	r24, r24
    2ade:	99 1f       	adc	r25, r25
    2ae0:	0a 94       	dec	r0
    2ae2:	e2 f7       	brpl	.-8      	; 0x2adc <GPIO_voidSetPinDir+0x96>
    2ae4:	80 95       	com	r24
    2ae6:	84 23       	and	r24, r20
    2ae8:	8c 93       	st	X, r24
    2aea:	bb c0       	rjmp	.+374    	; 0x2c62 <GPIO_voidSetPinDir+0x21c>
				case OUTPUT : SET_BIT(DDRA,Copy_u8PinNum);  break;
    2aec:	aa e3       	ldi	r26, 0x3A	; 58
    2aee:	b0 e0       	ldi	r27, 0x00	; 0
    2af0:	ea e3       	ldi	r30, 0x3A	; 58
    2af2:	f0 e0       	ldi	r31, 0x00	; 0
    2af4:	80 81       	ld	r24, Z
    2af6:	48 2f       	mov	r20, r24
    2af8:	8a 81       	ldd	r24, Y+2	; 0x02
    2afa:	28 2f       	mov	r18, r24
    2afc:	30 e0       	ldi	r19, 0x00	; 0
    2afe:	81 e0       	ldi	r24, 0x01	; 1
    2b00:	90 e0       	ldi	r25, 0x00	; 0
    2b02:	02 2e       	mov	r0, r18
    2b04:	02 c0       	rjmp	.+4      	; 0x2b0a <GPIO_voidSetPinDir+0xc4>
    2b06:	88 0f       	add	r24, r24
    2b08:	99 1f       	adc	r25, r25
    2b0a:	0a 94       	dec	r0
    2b0c:	e2 f7       	brpl	.-8      	; 0x2b06 <GPIO_voidSetPinDir+0xc0>
    2b0e:	84 2b       	or	r24, r20
    2b10:	8c 93       	st	X, r24
    2b12:	a7 c0       	rjmp	.+334    	; 0x2c62 <GPIO_voidSetPinDir+0x21c>
				default     : /* return Error invalid option */ break;
			}
			break;
		case GPIOB :
			switch (Copy_u8Direction)
    2b14:	8b 81       	ldd	r24, Y+3	; 0x03
    2b16:	28 2f       	mov	r18, r24
    2b18:	30 e0       	ldi	r19, 0x00	; 0
    2b1a:	39 87       	std	Y+9, r19	; 0x09
    2b1c:	28 87       	std	Y+8, r18	; 0x08
    2b1e:	88 85       	ldd	r24, Y+8	; 0x08
    2b20:	99 85       	ldd	r25, Y+9	; 0x09
    2b22:	00 97       	sbiw	r24, 0x00	; 0
    2b24:	31 f0       	breq	.+12     	; 0x2b32 <GPIO_voidSetPinDir+0xec>
    2b26:	28 85       	ldd	r18, Y+8	; 0x08
    2b28:	39 85       	ldd	r19, Y+9	; 0x09
    2b2a:	21 30       	cpi	r18, 0x01	; 1
    2b2c:	31 05       	cpc	r19, r1
    2b2e:	b1 f0       	breq	.+44     	; 0x2b5c <GPIO_voidSetPinDir+0x116>
    2b30:	98 c0       	rjmp	.+304    	; 0x2c62 <GPIO_voidSetPinDir+0x21c>
			{
				case INPUT  : CLR_BIT(DDRB,Copy_u8PinNum); break;
    2b32:	a7 e3       	ldi	r26, 0x37	; 55
    2b34:	b0 e0       	ldi	r27, 0x00	; 0
    2b36:	e7 e3       	ldi	r30, 0x37	; 55
    2b38:	f0 e0       	ldi	r31, 0x00	; 0
    2b3a:	80 81       	ld	r24, Z
    2b3c:	48 2f       	mov	r20, r24
    2b3e:	8a 81       	ldd	r24, Y+2	; 0x02
    2b40:	28 2f       	mov	r18, r24
    2b42:	30 e0       	ldi	r19, 0x00	; 0
    2b44:	81 e0       	ldi	r24, 0x01	; 1
    2b46:	90 e0       	ldi	r25, 0x00	; 0
    2b48:	02 2e       	mov	r0, r18
    2b4a:	02 c0       	rjmp	.+4      	; 0x2b50 <GPIO_voidSetPinDir+0x10a>
    2b4c:	88 0f       	add	r24, r24
    2b4e:	99 1f       	adc	r25, r25
    2b50:	0a 94       	dec	r0
    2b52:	e2 f7       	brpl	.-8      	; 0x2b4c <GPIO_voidSetPinDir+0x106>
    2b54:	80 95       	com	r24
    2b56:	84 23       	and	r24, r20
    2b58:	8c 93       	st	X, r24
    2b5a:	83 c0       	rjmp	.+262    	; 0x2c62 <GPIO_voidSetPinDir+0x21c>
				case OUTPUT : SET_BIT(DDRB,Copy_u8PinNum); break;
    2b5c:	a7 e3       	ldi	r26, 0x37	; 55
    2b5e:	b0 e0       	ldi	r27, 0x00	; 0
    2b60:	e7 e3       	ldi	r30, 0x37	; 55
    2b62:	f0 e0       	ldi	r31, 0x00	; 0
    2b64:	80 81       	ld	r24, Z
    2b66:	48 2f       	mov	r20, r24
    2b68:	8a 81       	ldd	r24, Y+2	; 0x02
    2b6a:	28 2f       	mov	r18, r24
    2b6c:	30 e0       	ldi	r19, 0x00	; 0
    2b6e:	81 e0       	ldi	r24, 0x01	; 1
    2b70:	90 e0       	ldi	r25, 0x00	; 0
    2b72:	02 2e       	mov	r0, r18
    2b74:	02 c0       	rjmp	.+4      	; 0x2b7a <GPIO_voidSetPinDir+0x134>
    2b76:	88 0f       	add	r24, r24
    2b78:	99 1f       	adc	r25, r25
    2b7a:	0a 94       	dec	r0
    2b7c:	e2 f7       	brpl	.-8      	; 0x2b76 <GPIO_voidSetPinDir+0x130>
    2b7e:	84 2b       	or	r24, r20
    2b80:	8c 93       	st	X, r24
    2b82:	6f c0       	rjmp	.+222    	; 0x2c62 <GPIO_voidSetPinDir+0x21c>
				default     : /* return Error */ break;
			}
			break;
		case GPIOC :
			switch (Copy_u8Direction)
    2b84:	8b 81       	ldd	r24, Y+3	; 0x03
    2b86:	28 2f       	mov	r18, r24
    2b88:	30 e0       	ldi	r19, 0x00	; 0
    2b8a:	3f 83       	std	Y+7, r19	; 0x07
    2b8c:	2e 83       	std	Y+6, r18	; 0x06
    2b8e:	8e 81       	ldd	r24, Y+6	; 0x06
    2b90:	9f 81       	ldd	r25, Y+7	; 0x07
    2b92:	00 97       	sbiw	r24, 0x00	; 0
    2b94:	31 f0       	breq	.+12     	; 0x2ba2 <GPIO_voidSetPinDir+0x15c>
    2b96:	2e 81       	ldd	r18, Y+6	; 0x06
    2b98:	3f 81       	ldd	r19, Y+7	; 0x07
    2b9a:	21 30       	cpi	r18, 0x01	; 1
    2b9c:	31 05       	cpc	r19, r1
    2b9e:	b1 f0       	breq	.+44     	; 0x2bcc <GPIO_voidSetPinDir+0x186>
    2ba0:	60 c0       	rjmp	.+192    	; 0x2c62 <GPIO_voidSetPinDir+0x21c>
			{
				case INPUT  : CLR_BIT(DDRC,Copy_u8PinNum); break;
    2ba2:	a4 e3       	ldi	r26, 0x34	; 52
    2ba4:	b0 e0       	ldi	r27, 0x00	; 0
    2ba6:	e4 e3       	ldi	r30, 0x34	; 52
    2ba8:	f0 e0       	ldi	r31, 0x00	; 0
    2baa:	80 81       	ld	r24, Z
    2bac:	48 2f       	mov	r20, r24
    2bae:	8a 81       	ldd	r24, Y+2	; 0x02
    2bb0:	28 2f       	mov	r18, r24
    2bb2:	30 e0       	ldi	r19, 0x00	; 0
    2bb4:	81 e0       	ldi	r24, 0x01	; 1
    2bb6:	90 e0       	ldi	r25, 0x00	; 0
    2bb8:	02 2e       	mov	r0, r18
    2bba:	02 c0       	rjmp	.+4      	; 0x2bc0 <GPIO_voidSetPinDir+0x17a>
    2bbc:	88 0f       	add	r24, r24
    2bbe:	99 1f       	adc	r25, r25
    2bc0:	0a 94       	dec	r0
    2bc2:	e2 f7       	brpl	.-8      	; 0x2bbc <GPIO_voidSetPinDir+0x176>
    2bc4:	80 95       	com	r24
    2bc6:	84 23       	and	r24, r20
    2bc8:	8c 93       	st	X, r24
    2bca:	4b c0       	rjmp	.+150    	; 0x2c62 <GPIO_voidSetPinDir+0x21c>
				case OUTPUT : SET_BIT(DDRC,Copy_u8PinNum); break;
    2bcc:	a4 e3       	ldi	r26, 0x34	; 52
    2bce:	b0 e0       	ldi	r27, 0x00	; 0
    2bd0:	e4 e3       	ldi	r30, 0x34	; 52
    2bd2:	f0 e0       	ldi	r31, 0x00	; 0
    2bd4:	80 81       	ld	r24, Z
    2bd6:	48 2f       	mov	r20, r24
    2bd8:	8a 81       	ldd	r24, Y+2	; 0x02
    2bda:	28 2f       	mov	r18, r24
    2bdc:	30 e0       	ldi	r19, 0x00	; 0
    2bde:	81 e0       	ldi	r24, 0x01	; 1
    2be0:	90 e0       	ldi	r25, 0x00	; 0
    2be2:	02 2e       	mov	r0, r18
    2be4:	02 c0       	rjmp	.+4      	; 0x2bea <GPIO_voidSetPinDir+0x1a4>
    2be6:	88 0f       	add	r24, r24
    2be8:	99 1f       	adc	r25, r25
    2bea:	0a 94       	dec	r0
    2bec:	e2 f7       	brpl	.-8      	; 0x2be6 <GPIO_voidSetPinDir+0x1a0>
    2bee:	84 2b       	or	r24, r20
    2bf0:	8c 93       	st	X, r24
    2bf2:	37 c0       	rjmp	.+110    	; 0x2c62 <GPIO_voidSetPinDir+0x21c>
				default     : /* return Error */ break;
			}
			break;
		case GPIOD :
			switch (Copy_u8Direction)
    2bf4:	8b 81       	ldd	r24, Y+3	; 0x03
    2bf6:	28 2f       	mov	r18, r24
    2bf8:	30 e0       	ldi	r19, 0x00	; 0
    2bfa:	3d 83       	std	Y+5, r19	; 0x05
    2bfc:	2c 83       	std	Y+4, r18	; 0x04
    2bfe:	8c 81       	ldd	r24, Y+4	; 0x04
    2c00:	9d 81       	ldd	r25, Y+5	; 0x05
    2c02:	00 97       	sbiw	r24, 0x00	; 0
    2c04:	31 f0       	breq	.+12     	; 0x2c12 <GPIO_voidSetPinDir+0x1cc>
    2c06:	2c 81       	ldd	r18, Y+4	; 0x04
    2c08:	3d 81       	ldd	r19, Y+5	; 0x05
    2c0a:	21 30       	cpi	r18, 0x01	; 1
    2c0c:	31 05       	cpc	r19, r1
    2c0e:	b1 f0       	breq	.+44     	; 0x2c3c <GPIO_voidSetPinDir+0x1f6>
    2c10:	28 c0       	rjmp	.+80     	; 0x2c62 <GPIO_voidSetPinDir+0x21c>
			{
				case INPUT  : CLR_BIT(DDRD,Copy_u8PinNum); break;
    2c12:	a1 e3       	ldi	r26, 0x31	; 49
    2c14:	b0 e0       	ldi	r27, 0x00	; 0
    2c16:	e1 e3       	ldi	r30, 0x31	; 49
    2c18:	f0 e0       	ldi	r31, 0x00	; 0
    2c1a:	80 81       	ld	r24, Z
    2c1c:	48 2f       	mov	r20, r24
    2c1e:	8a 81       	ldd	r24, Y+2	; 0x02
    2c20:	28 2f       	mov	r18, r24
    2c22:	30 e0       	ldi	r19, 0x00	; 0
    2c24:	81 e0       	ldi	r24, 0x01	; 1
    2c26:	90 e0       	ldi	r25, 0x00	; 0
    2c28:	02 2e       	mov	r0, r18
    2c2a:	02 c0       	rjmp	.+4      	; 0x2c30 <GPIO_voidSetPinDir+0x1ea>
    2c2c:	88 0f       	add	r24, r24
    2c2e:	99 1f       	adc	r25, r25
    2c30:	0a 94       	dec	r0
    2c32:	e2 f7       	brpl	.-8      	; 0x2c2c <GPIO_voidSetPinDir+0x1e6>
    2c34:	80 95       	com	r24
    2c36:	84 23       	and	r24, r20
    2c38:	8c 93       	st	X, r24
    2c3a:	13 c0       	rjmp	.+38     	; 0x2c62 <GPIO_voidSetPinDir+0x21c>
				case OUTPUT : SET_BIT(DDRD,Copy_u8PinNum); break;
    2c3c:	a1 e3       	ldi	r26, 0x31	; 49
    2c3e:	b0 e0       	ldi	r27, 0x00	; 0
    2c40:	e1 e3       	ldi	r30, 0x31	; 49
    2c42:	f0 e0       	ldi	r31, 0x00	; 0
    2c44:	80 81       	ld	r24, Z
    2c46:	48 2f       	mov	r20, r24
    2c48:	8a 81       	ldd	r24, Y+2	; 0x02
    2c4a:	28 2f       	mov	r18, r24
    2c4c:	30 e0       	ldi	r19, 0x00	; 0
    2c4e:	81 e0       	ldi	r24, 0x01	; 1
    2c50:	90 e0       	ldi	r25, 0x00	; 0
    2c52:	02 2e       	mov	r0, r18
    2c54:	02 c0       	rjmp	.+4      	; 0x2c5a <GPIO_voidSetPinDir+0x214>
    2c56:	88 0f       	add	r24, r24
    2c58:	99 1f       	adc	r25, r25
    2c5a:	0a 94       	dec	r0
    2c5c:	e2 f7       	brpl	.-8      	; 0x2c56 <GPIO_voidSetPinDir+0x210>
    2c5e:	84 2b       	or	r24, r20
    2c60:	8c 93       	st	X, r24
			break;
			
		default : /* return Error */ break;
	}
	
}
    2c62:	2d 96       	adiw	r28, 0x0d	; 13
    2c64:	0f b6       	in	r0, 0x3f	; 63
    2c66:	f8 94       	cli
    2c68:	de bf       	out	0x3e, r29	; 62
    2c6a:	0f be       	out	0x3f, r0	; 63
    2c6c:	cd bf       	out	0x3d, r28	; 61
    2c6e:	cf 91       	pop	r28
    2c70:	df 91       	pop	r29
    2c72:	08 95       	ret

00002c74 <GPIO_voidSetPinVal>:
/* 		4- In case HIGH :write 1 to the corresponding pin num in PORTxn to make it input 							*/
/* 		The default if the direction was any thing other input or output it returns an error and break 				*/
/* 		The default if the port num was any thing other (GPIOA,GPIOB,GPIOC,GPIOD) it returns an error and break  	*/
/*------------------------------------------------------------------------------------------------------------------*/
void GPIO_voidSetPinVal(u8 Copy_u8PortNum ,u8 Copy_u8PinNum, u8 Copy_u8Value)
{
    2c74:	df 93       	push	r29
    2c76:	cf 93       	push	r28
    2c78:	cd b7       	in	r28, 0x3d	; 61
    2c7a:	de b7       	in	r29, 0x3e	; 62
    2c7c:	2d 97       	sbiw	r28, 0x0d	; 13
    2c7e:	0f b6       	in	r0, 0x3f	; 63
    2c80:	f8 94       	cli
    2c82:	de bf       	out	0x3e, r29	; 62
    2c84:	0f be       	out	0x3f, r0	; 63
    2c86:	cd bf       	out	0x3d, r28	; 61
    2c88:	89 83       	std	Y+1, r24	; 0x01
    2c8a:	6a 83       	std	Y+2, r22	; 0x02
    2c8c:	4b 83       	std	Y+3, r20	; 0x03
	switch(Copy_u8PortNum)
    2c8e:	89 81       	ldd	r24, Y+1	; 0x01
    2c90:	28 2f       	mov	r18, r24
    2c92:	30 e0       	ldi	r19, 0x00	; 0
    2c94:	3d 87       	std	Y+13, r19	; 0x0d
    2c96:	2c 87       	std	Y+12, r18	; 0x0c
    2c98:	8c 85       	ldd	r24, Y+12	; 0x0c
    2c9a:	9d 85       	ldd	r25, Y+13	; 0x0d
    2c9c:	81 30       	cpi	r24, 0x01	; 1
    2c9e:	91 05       	cpc	r25, r1
    2ca0:	09 f4       	brne	.+2      	; 0x2ca4 <GPIO_voidSetPinVal+0x30>
    2ca2:	4f c0       	rjmp	.+158    	; 0x2d42 <GPIO_voidSetPinVal+0xce>
    2ca4:	2c 85       	ldd	r18, Y+12	; 0x0c
    2ca6:	3d 85       	ldd	r19, Y+13	; 0x0d
    2ca8:	22 30       	cpi	r18, 0x02	; 2
    2caa:	31 05       	cpc	r19, r1
    2cac:	2c f4       	brge	.+10     	; 0x2cb8 <GPIO_voidSetPinVal+0x44>
    2cae:	8c 85       	ldd	r24, Y+12	; 0x0c
    2cb0:	9d 85       	ldd	r25, Y+13	; 0x0d
    2cb2:	00 97       	sbiw	r24, 0x00	; 0
    2cb4:	71 f0       	breq	.+28     	; 0x2cd2 <GPIO_voidSetPinVal+0x5e>
    2cb6:	ec c0       	rjmp	.+472    	; 0x2e90 <GPIO_voidSetPinVal+0x21c>
    2cb8:	2c 85       	ldd	r18, Y+12	; 0x0c
    2cba:	3d 85       	ldd	r19, Y+13	; 0x0d
    2cbc:	22 30       	cpi	r18, 0x02	; 2
    2cbe:	31 05       	cpc	r19, r1
    2cc0:	09 f4       	brne	.+2      	; 0x2cc4 <GPIO_voidSetPinVal+0x50>
    2cc2:	77 c0       	rjmp	.+238    	; 0x2db2 <GPIO_voidSetPinVal+0x13e>
    2cc4:	8c 85       	ldd	r24, Y+12	; 0x0c
    2cc6:	9d 85       	ldd	r25, Y+13	; 0x0d
    2cc8:	83 30       	cpi	r24, 0x03	; 3
    2cca:	91 05       	cpc	r25, r1
    2ccc:	09 f4       	brne	.+2      	; 0x2cd0 <GPIO_voidSetPinVal+0x5c>
    2cce:	a9 c0       	rjmp	.+338    	; 0x2e22 <GPIO_voidSetPinVal+0x1ae>
    2cd0:	df c0       	rjmp	.+446    	; 0x2e90 <GPIO_voidSetPinVal+0x21c>
	{
		case GPIOA :
			switch (Copy_u8Value)
    2cd2:	8b 81       	ldd	r24, Y+3	; 0x03
    2cd4:	28 2f       	mov	r18, r24
    2cd6:	30 e0       	ldi	r19, 0x00	; 0
    2cd8:	3b 87       	std	Y+11, r19	; 0x0b
    2cda:	2a 87       	std	Y+10, r18	; 0x0a
    2cdc:	8a 85       	ldd	r24, Y+10	; 0x0a
    2cde:	9b 85       	ldd	r25, Y+11	; 0x0b
    2ce0:	00 97       	sbiw	r24, 0x00	; 0
    2ce2:	31 f0       	breq	.+12     	; 0x2cf0 <GPIO_voidSetPinVal+0x7c>
    2ce4:	2a 85       	ldd	r18, Y+10	; 0x0a
    2ce6:	3b 85       	ldd	r19, Y+11	; 0x0b
    2ce8:	21 30       	cpi	r18, 0x01	; 1
    2cea:	31 05       	cpc	r19, r1
    2cec:	b1 f0       	breq	.+44     	; 0x2d1a <GPIO_voidSetPinVal+0xa6>
    2cee:	d0 c0       	rjmp	.+416    	; 0x2e90 <GPIO_voidSetPinVal+0x21c>
			{
				case LOW  : CLR_BIT(PORTA,Copy_u8PinNum); break;
    2cf0:	ab e3       	ldi	r26, 0x3B	; 59
    2cf2:	b0 e0       	ldi	r27, 0x00	; 0
    2cf4:	eb e3       	ldi	r30, 0x3B	; 59
    2cf6:	f0 e0       	ldi	r31, 0x00	; 0
    2cf8:	80 81       	ld	r24, Z
    2cfa:	48 2f       	mov	r20, r24
    2cfc:	8a 81       	ldd	r24, Y+2	; 0x02
    2cfe:	28 2f       	mov	r18, r24
    2d00:	30 e0       	ldi	r19, 0x00	; 0
    2d02:	81 e0       	ldi	r24, 0x01	; 1
    2d04:	90 e0       	ldi	r25, 0x00	; 0
    2d06:	02 2e       	mov	r0, r18
    2d08:	02 c0       	rjmp	.+4      	; 0x2d0e <GPIO_voidSetPinVal+0x9a>
    2d0a:	88 0f       	add	r24, r24
    2d0c:	99 1f       	adc	r25, r25
    2d0e:	0a 94       	dec	r0
    2d10:	e2 f7       	brpl	.-8      	; 0x2d0a <GPIO_voidSetPinVal+0x96>
    2d12:	80 95       	com	r24
    2d14:	84 23       	and	r24, r20
    2d16:	8c 93       	st	X, r24
    2d18:	bb c0       	rjmp	.+374    	; 0x2e90 <GPIO_voidSetPinVal+0x21c>
				case HIGH : SET_BIT(PORTA,Copy_u8PinNum); break;
    2d1a:	ab e3       	ldi	r26, 0x3B	; 59
    2d1c:	b0 e0       	ldi	r27, 0x00	; 0
    2d1e:	eb e3       	ldi	r30, 0x3B	; 59
    2d20:	f0 e0       	ldi	r31, 0x00	; 0
    2d22:	80 81       	ld	r24, Z
    2d24:	48 2f       	mov	r20, r24
    2d26:	8a 81       	ldd	r24, Y+2	; 0x02
    2d28:	28 2f       	mov	r18, r24
    2d2a:	30 e0       	ldi	r19, 0x00	; 0
    2d2c:	81 e0       	ldi	r24, 0x01	; 1
    2d2e:	90 e0       	ldi	r25, 0x00	; 0
    2d30:	02 2e       	mov	r0, r18
    2d32:	02 c0       	rjmp	.+4      	; 0x2d38 <GPIO_voidSetPinVal+0xc4>
    2d34:	88 0f       	add	r24, r24
    2d36:	99 1f       	adc	r25, r25
    2d38:	0a 94       	dec	r0
    2d3a:	e2 f7       	brpl	.-8      	; 0x2d34 <GPIO_voidSetPinVal+0xc0>
    2d3c:	84 2b       	or	r24, r20
    2d3e:	8c 93       	st	X, r24
    2d40:	a7 c0       	rjmp	.+334    	; 0x2e90 <GPIO_voidSetPinVal+0x21c>
				default     : /* return Error */ break;
			}
			break;
		case GPIOB :
			switch (Copy_u8Value)
    2d42:	8b 81       	ldd	r24, Y+3	; 0x03
    2d44:	28 2f       	mov	r18, r24
    2d46:	30 e0       	ldi	r19, 0x00	; 0
    2d48:	39 87       	std	Y+9, r19	; 0x09
    2d4a:	28 87       	std	Y+8, r18	; 0x08
    2d4c:	88 85       	ldd	r24, Y+8	; 0x08
    2d4e:	99 85       	ldd	r25, Y+9	; 0x09
    2d50:	00 97       	sbiw	r24, 0x00	; 0
    2d52:	31 f0       	breq	.+12     	; 0x2d60 <GPIO_voidSetPinVal+0xec>
    2d54:	28 85       	ldd	r18, Y+8	; 0x08
    2d56:	39 85       	ldd	r19, Y+9	; 0x09
    2d58:	21 30       	cpi	r18, 0x01	; 1
    2d5a:	31 05       	cpc	r19, r1
    2d5c:	b1 f0       	breq	.+44     	; 0x2d8a <GPIO_voidSetPinVal+0x116>
    2d5e:	98 c0       	rjmp	.+304    	; 0x2e90 <GPIO_voidSetPinVal+0x21c>
			{
				case LOW  : CLR_BIT(PORTB,Copy_u8PinNum); break;
    2d60:	a8 e3       	ldi	r26, 0x38	; 56
    2d62:	b0 e0       	ldi	r27, 0x00	; 0
    2d64:	e8 e3       	ldi	r30, 0x38	; 56
    2d66:	f0 e0       	ldi	r31, 0x00	; 0
    2d68:	80 81       	ld	r24, Z
    2d6a:	48 2f       	mov	r20, r24
    2d6c:	8a 81       	ldd	r24, Y+2	; 0x02
    2d6e:	28 2f       	mov	r18, r24
    2d70:	30 e0       	ldi	r19, 0x00	; 0
    2d72:	81 e0       	ldi	r24, 0x01	; 1
    2d74:	90 e0       	ldi	r25, 0x00	; 0
    2d76:	02 2e       	mov	r0, r18
    2d78:	02 c0       	rjmp	.+4      	; 0x2d7e <GPIO_voidSetPinVal+0x10a>
    2d7a:	88 0f       	add	r24, r24
    2d7c:	99 1f       	adc	r25, r25
    2d7e:	0a 94       	dec	r0
    2d80:	e2 f7       	brpl	.-8      	; 0x2d7a <GPIO_voidSetPinVal+0x106>
    2d82:	80 95       	com	r24
    2d84:	84 23       	and	r24, r20
    2d86:	8c 93       	st	X, r24
    2d88:	83 c0       	rjmp	.+262    	; 0x2e90 <GPIO_voidSetPinVal+0x21c>
				case HIGH : SET_BIT(PORTB,Copy_u8PinNum); break;
    2d8a:	a8 e3       	ldi	r26, 0x38	; 56
    2d8c:	b0 e0       	ldi	r27, 0x00	; 0
    2d8e:	e8 e3       	ldi	r30, 0x38	; 56
    2d90:	f0 e0       	ldi	r31, 0x00	; 0
    2d92:	80 81       	ld	r24, Z
    2d94:	48 2f       	mov	r20, r24
    2d96:	8a 81       	ldd	r24, Y+2	; 0x02
    2d98:	28 2f       	mov	r18, r24
    2d9a:	30 e0       	ldi	r19, 0x00	; 0
    2d9c:	81 e0       	ldi	r24, 0x01	; 1
    2d9e:	90 e0       	ldi	r25, 0x00	; 0
    2da0:	02 2e       	mov	r0, r18
    2da2:	02 c0       	rjmp	.+4      	; 0x2da8 <GPIO_voidSetPinVal+0x134>
    2da4:	88 0f       	add	r24, r24
    2da6:	99 1f       	adc	r25, r25
    2da8:	0a 94       	dec	r0
    2daa:	e2 f7       	brpl	.-8      	; 0x2da4 <GPIO_voidSetPinVal+0x130>
    2dac:	84 2b       	or	r24, r20
    2dae:	8c 93       	st	X, r24
    2db0:	6f c0       	rjmp	.+222    	; 0x2e90 <GPIO_voidSetPinVal+0x21c>
				default     : /* return Error */ break;
			}
			break;
		case GPIOC :
			switch (Copy_u8Value)
    2db2:	8b 81       	ldd	r24, Y+3	; 0x03
    2db4:	28 2f       	mov	r18, r24
    2db6:	30 e0       	ldi	r19, 0x00	; 0
    2db8:	3f 83       	std	Y+7, r19	; 0x07
    2dba:	2e 83       	std	Y+6, r18	; 0x06
    2dbc:	8e 81       	ldd	r24, Y+6	; 0x06
    2dbe:	9f 81       	ldd	r25, Y+7	; 0x07
    2dc0:	00 97       	sbiw	r24, 0x00	; 0
    2dc2:	31 f0       	breq	.+12     	; 0x2dd0 <GPIO_voidSetPinVal+0x15c>
    2dc4:	2e 81       	ldd	r18, Y+6	; 0x06
    2dc6:	3f 81       	ldd	r19, Y+7	; 0x07
    2dc8:	21 30       	cpi	r18, 0x01	; 1
    2dca:	31 05       	cpc	r19, r1
    2dcc:	b1 f0       	breq	.+44     	; 0x2dfa <GPIO_voidSetPinVal+0x186>
    2dce:	60 c0       	rjmp	.+192    	; 0x2e90 <GPIO_voidSetPinVal+0x21c>
			{
				case LOW  : CLR_BIT(PORTC,Copy_u8PinNum); break;
    2dd0:	a5 e3       	ldi	r26, 0x35	; 53
    2dd2:	b0 e0       	ldi	r27, 0x00	; 0
    2dd4:	e5 e3       	ldi	r30, 0x35	; 53
    2dd6:	f0 e0       	ldi	r31, 0x00	; 0
    2dd8:	80 81       	ld	r24, Z
    2dda:	48 2f       	mov	r20, r24
    2ddc:	8a 81       	ldd	r24, Y+2	; 0x02
    2dde:	28 2f       	mov	r18, r24
    2de0:	30 e0       	ldi	r19, 0x00	; 0
    2de2:	81 e0       	ldi	r24, 0x01	; 1
    2de4:	90 e0       	ldi	r25, 0x00	; 0
    2de6:	02 2e       	mov	r0, r18
    2de8:	02 c0       	rjmp	.+4      	; 0x2dee <GPIO_voidSetPinVal+0x17a>
    2dea:	88 0f       	add	r24, r24
    2dec:	99 1f       	adc	r25, r25
    2dee:	0a 94       	dec	r0
    2df0:	e2 f7       	brpl	.-8      	; 0x2dea <GPIO_voidSetPinVal+0x176>
    2df2:	80 95       	com	r24
    2df4:	84 23       	and	r24, r20
    2df6:	8c 93       	st	X, r24
    2df8:	4b c0       	rjmp	.+150    	; 0x2e90 <GPIO_voidSetPinVal+0x21c>
				case HIGH : SET_BIT(PORTC,Copy_u8PinNum); break;
    2dfa:	a5 e3       	ldi	r26, 0x35	; 53
    2dfc:	b0 e0       	ldi	r27, 0x00	; 0
    2dfe:	e5 e3       	ldi	r30, 0x35	; 53
    2e00:	f0 e0       	ldi	r31, 0x00	; 0
    2e02:	80 81       	ld	r24, Z
    2e04:	48 2f       	mov	r20, r24
    2e06:	8a 81       	ldd	r24, Y+2	; 0x02
    2e08:	28 2f       	mov	r18, r24
    2e0a:	30 e0       	ldi	r19, 0x00	; 0
    2e0c:	81 e0       	ldi	r24, 0x01	; 1
    2e0e:	90 e0       	ldi	r25, 0x00	; 0
    2e10:	02 2e       	mov	r0, r18
    2e12:	02 c0       	rjmp	.+4      	; 0x2e18 <GPIO_voidSetPinVal+0x1a4>
    2e14:	88 0f       	add	r24, r24
    2e16:	99 1f       	adc	r25, r25
    2e18:	0a 94       	dec	r0
    2e1a:	e2 f7       	brpl	.-8      	; 0x2e14 <GPIO_voidSetPinVal+0x1a0>
    2e1c:	84 2b       	or	r24, r20
    2e1e:	8c 93       	st	X, r24
    2e20:	37 c0       	rjmp	.+110    	; 0x2e90 <GPIO_voidSetPinVal+0x21c>
				default     : /* return Error */ break;
			}
			break;
		case GPIOD :
			switch (Copy_u8Value)
    2e22:	8b 81       	ldd	r24, Y+3	; 0x03
    2e24:	28 2f       	mov	r18, r24
    2e26:	30 e0       	ldi	r19, 0x00	; 0
    2e28:	3d 83       	std	Y+5, r19	; 0x05
    2e2a:	2c 83       	std	Y+4, r18	; 0x04
    2e2c:	8c 81       	ldd	r24, Y+4	; 0x04
    2e2e:	9d 81       	ldd	r25, Y+5	; 0x05
    2e30:	00 97       	sbiw	r24, 0x00	; 0
    2e32:	31 f0       	breq	.+12     	; 0x2e40 <GPIO_voidSetPinVal+0x1cc>
    2e34:	2c 81       	ldd	r18, Y+4	; 0x04
    2e36:	3d 81       	ldd	r19, Y+5	; 0x05
    2e38:	21 30       	cpi	r18, 0x01	; 1
    2e3a:	31 05       	cpc	r19, r1
    2e3c:	b1 f0       	breq	.+44     	; 0x2e6a <GPIO_voidSetPinVal+0x1f6>
    2e3e:	28 c0       	rjmp	.+80     	; 0x2e90 <GPIO_voidSetPinVal+0x21c>
			{
				case LOW  : CLR_BIT(PORTD,Copy_u8PinNum); break;
    2e40:	a2 e3       	ldi	r26, 0x32	; 50
    2e42:	b0 e0       	ldi	r27, 0x00	; 0
    2e44:	e2 e3       	ldi	r30, 0x32	; 50
    2e46:	f0 e0       	ldi	r31, 0x00	; 0
    2e48:	80 81       	ld	r24, Z
    2e4a:	48 2f       	mov	r20, r24
    2e4c:	8a 81       	ldd	r24, Y+2	; 0x02
    2e4e:	28 2f       	mov	r18, r24
    2e50:	30 e0       	ldi	r19, 0x00	; 0
    2e52:	81 e0       	ldi	r24, 0x01	; 1
    2e54:	90 e0       	ldi	r25, 0x00	; 0
    2e56:	02 2e       	mov	r0, r18
    2e58:	02 c0       	rjmp	.+4      	; 0x2e5e <GPIO_voidSetPinVal+0x1ea>
    2e5a:	88 0f       	add	r24, r24
    2e5c:	99 1f       	adc	r25, r25
    2e5e:	0a 94       	dec	r0
    2e60:	e2 f7       	brpl	.-8      	; 0x2e5a <GPIO_voidSetPinVal+0x1e6>
    2e62:	80 95       	com	r24
    2e64:	84 23       	and	r24, r20
    2e66:	8c 93       	st	X, r24
    2e68:	13 c0       	rjmp	.+38     	; 0x2e90 <GPIO_voidSetPinVal+0x21c>
				case HIGH : SET_BIT(PORTD,Copy_u8PinNum); break;
    2e6a:	a2 e3       	ldi	r26, 0x32	; 50
    2e6c:	b0 e0       	ldi	r27, 0x00	; 0
    2e6e:	e2 e3       	ldi	r30, 0x32	; 50
    2e70:	f0 e0       	ldi	r31, 0x00	; 0
    2e72:	80 81       	ld	r24, Z
    2e74:	48 2f       	mov	r20, r24
    2e76:	8a 81       	ldd	r24, Y+2	; 0x02
    2e78:	28 2f       	mov	r18, r24
    2e7a:	30 e0       	ldi	r19, 0x00	; 0
    2e7c:	81 e0       	ldi	r24, 0x01	; 1
    2e7e:	90 e0       	ldi	r25, 0x00	; 0
    2e80:	02 2e       	mov	r0, r18
    2e82:	02 c0       	rjmp	.+4      	; 0x2e88 <GPIO_voidSetPinVal+0x214>
    2e84:	88 0f       	add	r24, r24
    2e86:	99 1f       	adc	r25, r25
    2e88:	0a 94       	dec	r0
    2e8a:	e2 f7       	brpl	.-8      	; 0x2e84 <GPIO_voidSetPinVal+0x210>
    2e8c:	84 2b       	or	r24, r20
    2e8e:	8c 93       	st	X, r24
			break;
			
		default : /* return Error */ break;
	}
	
}
    2e90:	2d 96       	adiw	r28, 0x0d	; 13
    2e92:	0f b6       	in	r0, 0x3f	; 63
    2e94:	f8 94       	cli
    2e96:	de bf       	out	0x3e, r29	; 62
    2e98:	0f be       	out	0x3f, r0	; 63
    2e9a:	cd bf       	out	0x3d, r28	; 61
    2e9c:	cf 91       	pop	r28
    2e9e:	df 91       	pop	r29
    2ea0:	08 95       	ret

00002ea2 <GPIO_voidTogglePin>:
/* 		in case of PORTA : the register is PORTA  and so on to all ports 											*/
/*	 	then toggle the value of the given pin (Copy_u8PinNum)														*/
/* 		The default if the port num was any thing other (GPIOA,GPIOB,GPIOC,GPIOD) it returns an error and break  	*/
/*------------------------------------------------------------------------------------------------------------------*/
void GPIO_voidTogglePin(u8 Copy_u8PortNum  , u8 Copy_u8PinNum)
{
    2ea2:	df 93       	push	r29
    2ea4:	cf 93       	push	r28
    2ea6:	00 d0       	rcall	.+0      	; 0x2ea8 <GPIO_voidTogglePin+0x6>
    2ea8:	00 d0       	rcall	.+0      	; 0x2eaa <GPIO_voidTogglePin+0x8>
    2eaa:	cd b7       	in	r28, 0x3d	; 61
    2eac:	de b7       	in	r29, 0x3e	; 62
    2eae:	89 83       	std	Y+1, r24	; 0x01
    2eb0:	6a 83       	std	Y+2, r22	; 0x02
	switch(Copy_u8PortNum)
    2eb2:	89 81       	ldd	r24, Y+1	; 0x01
    2eb4:	28 2f       	mov	r18, r24
    2eb6:	30 e0       	ldi	r19, 0x00	; 0
    2eb8:	3c 83       	std	Y+4, r19	; 0x04
    2eba:	2b 83       	std	Y+3, r18	; 0x03
    2ebc:	8b 81       	ldd	r24, Y+3	; 0x03
    2ebe:	9c 81       	ldd	r25, Y+4	; 0x04
    2ec0:	81 30       	cpi	r24, 0x01	; 1
    2ec2:	91 05       	cpc	r25, r1
    2ec4:	49 f1       	breq	.+82     	; 0x2f18 <GPIO_voidTogglePin+0x76>
    2ec6:	2b 81       	ldd	r18, Y+3	; 0x03
    2ec8:	3c 81       	ldd	r19, Y+4	; 0x04
    2eca:	22 30       	cpi	r18, 0x02	; 2
    2ecc:	31 05       	cpc	r19, r1
    2ece:	2c f4       	brge	.+10     	; 0x2eda <GPIO_voidTogglePin+0x38>
    2ed0:	8b 81       	ldd	r24, Y+3	; 0x03
    2ed2:	9c 81       	ldd	r25, Y+4	; 0x04
    2ed4:	00 97       	sbiw	r24, 0x00	; 0
    2ed6:	61 f0       	breq	.+24     	; 0x2ef0 <GPIO_voidTogglePin+0x4e>
    2ed8:	5a c0       	rjmp	.+180    	; 0x2f8e <GPIO_voidTogglePin+0xec>
    2eda:	2b 81       	ldd	r18, Y+3	; 0x03
    2edc:	3c 81       	ldd	r19, Y+4	; 0x04
    2ede:	22 30       	cpi	r18, 0x02	; 2
    2ee0:	31 05       	cpc	r19, r1
    2ee2:	71 f1       	breq	.+92     	; 0x2f40 <GPIO_voidTogglePin+0x9e>
    2ee4:	8b 81       	ldd	r24, Y+3	; 0x03
    2ee6:	9c 81       	ldd	r25, Y+4	; 0x04
    2ee8:	83 30       	cpi	r24, 0x03	; 3
    2eea:	91 05       	cpc	r25, r1
    2eec:	e9 f1       	breq	.+122    	; 0x2f68 <GPIO_voidTogglePin+0xc6>
    2eee:	4f c0       	rjmp	.+158    	; 0x2f8e <GPIO_voidTogglePin+0xec>
	{
		case GPIOA : TOGGLE_BIT(PORTA,Copy_u8PinNum); break;
    2ef0:	ab e3       	ldi	r26, 0x3B	; 59
    2ef2:	b0 e0       	ldi	r27, 0x00	; 0
    2ef4:	eb e3       	ldi	r30, 0x3B	; 59
    2ef6:	f0 e0       	ldi	r31, 0x00	; 0
    2ef8:	80 81       	ld	r24, Z
    2efa:	48 2f       	mov	r20, r24
    2efc:	8a 81       	ldd	r24, Y+2	; 0x02
    2efe:	28 2f       	mov	r18, r24
    2f00:	30 e0       	ldi	r19, 0x00	; 0
    2f02:	81 e0       	ldi	r24, 0x01	; 1
    2f04:	90 e0       	ldi	r25, 0x00	; 0
    2f06:	02 2e       	mov	r0, r18
    2f08:	02 c0       	rjmp	.+4      	; 0x2f0e <GPIO_voidTogglePin+0x6c>
    2f0a:	88 0f       	add	r24, r24
    2f0c:	99 1f       	adc	r25, r25
    2f0e:	0a 94       	dec	r0
    2f10:	e2 f7       	brpl	.-8      	; 0x2f0a <GPIO_voidTogglePin+0x68>
    2f12:	84 27       	eor	r24, r20
    2f14:	8c 93       	st	X, r24
    2f16:	3b c0       	rjmp	.+118    	; 0x2f8e <GPIO_voidTogglePin+0xec>
		case GPIOB : TOGGLE_BIT(PORTB,Copy_u8PinNum); break;
    2f18:	a8 e3       	ldi	r26, 0x38	; 56
    2f1a:	b0 e0       	ldi	r27, 0x00	; 0
    2f1c:	e8 e3       	ldi	r30, 0x38	; 56
    2f1e:	f0 e0       	ldi	r31, 0x00	; 0
    2f20:	80 81       	ld	r24, Z
    2f22:	48 2f       	mov	r20, r24
    2f24:	8a 81       	ldd	r24, Y+2	; 0x02
    2f26:	28 2f       	mov	r18, r24
    2f28:	30 e0       	ldi	r19, 0x00	; 0
    2f2a:	81 e0       	ldi	r24, 0x01	; 1
    2f2c:	90 e0       	ldi	r25, 0x00	; 0
    2f2e:	02 2e       	mov	r0, r18
    2f30:	02 c0       	rjmp	.+4      	; 0x2f36 <GPIO_voidTogglePin+0x94>
    2f32:	88 0f       	add	r24, r24
    2f34:	99 1f       	adc	r25, r25
    2f36:	0a 94       	dec	r0
    2f38:	e2 f7       	brpl	.-8      	; 0x2f32 <GPIO_voidTogglePin+0x90>
    2f3a:	84 27       	eor	r24, r20
    2f3c:	8c 93       	st	X, r24
    2f3e:	27 c0       	rjmp	.+78     	; 0x2f8e <GPIO_voidTogglePin+0xec>
		case GPIOC : TOGGLE_BIT(PORTC,Copy_u8PinNum); break;
    2f40:	a5 e3       	ldi	r26, 0x35	; 53
    2f42:	b0 e0       	ldi	r27, 0x00	; 0
    2f44:	e5 e3       	ldi	r30, 0x35	; 53
    2f46:	f0 e0       	ldi	r31, 0x00	; 0
    2f48:	80 81       	ld	r24, Z
    2f4a:	48 2f       	mov	r20, r24
    2f4c:	8a 81       	ldd	r24, Y+2	; 0x02
    2f4e:	28 2f       	mov	r18, r24
    2f50:	30 e0       	ldi	r19, 0x00	; 0
    2f52:	81 e0       	ldi	r24, 0x01	; 1
    2f54:	90 e0       	ldi	r25, 0x00	; 0
    2f56:	02 2e       	mov	r0, r18
    2f58:	02 c0       	rjmp	.+4      	; 0x2f5e <GPIO_voidTogglePin+0xbc>
    2f5a:	88 0f       	add	r24, r24
    2f5c:	99 1f       	adc	r25, r25
    2f5e:	0a 94       	dec	r0
    2f60:	e2 f7       	brpl	.-8      	; 0x2f5a <GPIO_voidTogglePin+0xb8>
    2f62:	84 27       	eor	r24, r20
    2f64:	8c 93       	st	X, r24
    2f66:	13 c0       	rjmp	.+38     	; 0x2f8e <GPIO_voidTogglePin+0xec>
		case GPIOD : TOGGLE_BIT(PORTD,Copy_u8PinNum); break;
    2f68:	a2 e3       	ldi	r26, 0x32	; 50
    2f6a:	b0 e0       	ldi	r27, 0x00	; 0
    2f6c:	e2 e3       	ldi	r30, 0x32	; 50
    2f6e:	f0 e0       	ldi	r31, 0x00	; 0
    2f70:	80 81       	ld	r24, Z
    2f72:	48 2f       	mov	r20, r24
    2f74:	8a 81       	ldd	r24, Y+2	; 0x02
    2f76:	28 2f       	mov	r18, r24
    2f78:	30 e0       	ldi	r19, 0x00	; 0
    2f7a:	81 e0       	ldi	r24, 0x01	; 1
    2f7c:	90 e0       	ldi	r25, 0x00	; 0
    2f7e:	02 2e       	mov	r0, r18
    2f80:	02 c0       	rjmp	.+4      	; 0x2f86 <GPIO_voidTogglePin+0xe4>
    2f82:	88 0f       	add	r24, r24
    2f84:	99 1f       	adc	r25, r25
    2f86:	0a 94       	dec	r0
    2f88:	e2 f7       	brpl	.-8      	; 0x2f82 <GPIO_voidTogglePin+0xe0>
    2f8a:	84 27       	eor	r24, r20
    2f8c:	8c 93       	st	X, r24
		default : /* return Error */ break;
	}
}
    2f8e:	0f 90       	pop	r0
    2f90:	0f 90       	pop	r0
    2f92:	0f 90       	pop	r0
    2f94:	0f 90       	pop	r0
    2f96:	cf 91       	pop	r28
    2f98:	df 91       	pop	r29
    2f9a:	08 95       	ret

00002f9c <GPIO_voidSetPortDir>:
/*	 	2-Check the given value HIGH or LOW 																		*/
/* 		 write the given value to the port																			*/
/* 		The default if the port num was any thing other (GPIOA,GPIOB,GPIOC,GPIOD) it returns an error and break  	*/
/*------------------------------------------------------------------------------------------------------------------*/
void GPIO_voidSetPortDir(u8 Copy_u8PortNum , u8 Copy_u8Direction)
{
    2f9c:	df 93       	push	r29
    2f9e:	cf 93       	push	r28
    2fa0:	00 d0       	rcall	.+0      	; 0x2fa2 <GPIO_voidSetPortDir+0x6>
    2fa2:	00 d0       	rcall	.+0      	; 0x2fa4 <GPIO_voidSetPortDir+0x8>
    2fa4:	cd b7       	in	r28, 0x3d	; 61
    2fa6:	de b7       	in	r29, 0x3e	; 62
    2fa8:	89 83       	std	Y+1, r24	; 0x01
    2faa:	6a 83       	std	Y+2, r22	; 0x02
	switch(Copy_u8PortNum)
    2fac:	89 81       	ldd	r24, Y+1	; 0x01
    2fae:	28 2f       	mov	r18, r24
    2fb0:	30 e0       	ldi	r19, 0x00	; 0
    2fb2:	3c 83       	std	Y+4, r19	; 0x04
    2fb4:	2b 83       	std	Y+3, r18	; 0x03
    2fb6:	8b 81       	ldd	r24, Y+3	; 0x03
    2fb8:	9c 81       	ldd	r25, Y+4	; 0x04
    2fba:	81 30       	cpi	r24, 0x01	; 1
    2fbc:	91 05       	cpc	r25, r1
    2fbe:	d1 f0       	breq	.+52     	; 0x2ff4 <GPIO_voidSetPortDir+0x58>
    2fc0:	2b 81       	ldd	r18, Y+3	; 0x03
    2fc2:	3c 81       	ldd	r19, Y+4	; 0x04
    2fc4:	22 30       	cpi	r18, 0x02	; 2
    2fc6:	31 05       	cpc	r19, r1
    2fc8:	2c f4       	brge	.+10     	; 0x2fd4 <GPIO_voidSetPortDir+0x38>
    2fca:	8b 81       	ldd	r24, Y+3	; 0x03
    2fcc:	9c 81       	ldd	r25, Y+4	; 0x04
    2fce:	00 97       	sbiw	r24, 0x00	; 0
    2fd0:	61 f0       	breq	.+24     	; 0x2fea <GPIO_voidSetPortDir+0x4e>
    2fd2:	1e c0       	rjmp	.+60     	; 0x3010 <GPIO_voidSetPortDir+0x74>
    2fd4:	2b 81       	ldd	r18, Y+3	; 0x03
    2fd6:	3c 81       	ldd	r19, Y+4	; 0x04
    2fd8:	22 30       	cpi	r18, 0x02	; 2
    2fda:	31 05       	cpc	r19, r1
    2fdc:	81 f0       	breq	.+32     	; 0x2ffe <GPIO_voidSetPortDir+0x62>
    2fde:	8b 81       	ldd	r24, Y+3	; 0x03
    2fe0:	9c 81       	ldd	r25, Y+4	; 0x04
    2fe2:	83 30       	cpi	r24, 0x03	; 3
    2fe4:	91 05       	cpc	r25, r1
    2fe6:	81 f0       	breq	.+32     	; 0x3008 <GPIO_voidSetPortDir+0x6c>
    2fe8:	13 c0       	rjmp	.+38     	; 0x3010 <GPIO_voidSetPortDir+0x74>
	{
		case GPIOA :  DDRA = Copy_u8Direction;   break;
    2fea:	ea e3       	ldi	r30, 0x3A	; 58
    2fec:	f0 e0       	ldi	r31, 0x00	; 0
    2fee:	8a 81       	ldd	r24, Y+2	; 0x02
    2ff0:	80 83       	st	Z, r24
    2ff2:	0e c0       	rjmp	.+28     	; 0x3010 <GPIO_voidSetPortDir+0x74>
		case GPIOB :  DDRB = Copy_u8Direction;   break;
    2ff4:	e7 e3       	ldi	r30, 0x37	; 55
    2ff6:	f0 e0       	ldi	r31, 0x00	; 0
    2ff8:	8a 81       	ldd	r24, Y+2	; 0x02
    2ffa:	80 83       	st	Z, r24
    2ffc:	09 c0       	rjmp	.+18     	; 0x3010 <GPIO_voidSetPortDir+0x74>
		case GPIOC :  DDRC = Copy_u8Direction;   break;
    2ffe:	e4 e3       	ldi	r30, 0x34	; 52
    3000:	f0 e0       	ldi	r31, 0x00	; 0
    3002:	8a 81       	ldd	r24, Y+2	; 0x02
    3004:	80 83       	st	Z, r24
    3006:	04 c0       	rjmp	.+8      	; 0x3010 <GPIO_voidSetPortDir+0x74>
		case GPIOD :  DDRD = Copy_u8Direction;   break;
    3008:	e1 e3       	ldi	r30, 0x31	; 49
    300a:	f0 e0       	ldi	r31, 0x00	; 0
    300c:	8a 81       	ldd	r24, Y+2	; 0x02
    300e:	80 83       	st	Z, r24
		
		default : /* return Error */ break;
	}
}
    3010:	0f 90       	pop	r0
    3012:	0f 90       	pop	r0
    3014:	0f 90       	pop	r0
    3016:	0f 90       	pop	r0
    3018:	cf 91       	pop	r28
    301a:	df 91       	pop	r29
    301c:	08 95       	ret

0000301e <GPIO_voidSetPortVal>:
/* 		in case of PORTA : the register is PORTA  and so on to all ports 											*/
/*       2- then Write the Passed value (Copy_u8Value) on the PORTx 												*/
/* 		The default if the port num was any thing other (GPIOA,GPIOB,GPIOC,GPIOD) it returns an error and break  	*/
/*------------------------------------------------------------------------------------------------------------------*/
void GPIO_voidSetPortVal(u8 Copy_u8PortNum , u8 Copy_u8Value)
{
    301e:	df 93       	push	r29
    3020:	cf 93       	push	r28
    3022:	00 d0       	rcall	.+0      	; 0x3024 <GPIO_voidSetPortVal+0x6>
    3024:	00 d0       	rcall	.+0      	; 0x3026 <GPIO_voidSetPortVal+0x8>
    3026:	cd b7       	in	r28, 0x3d	; 61
    3028:	de b7       	in	r29, 0x3e	; 62
    302a:	89 83       	std	Y+1, r24	; 0x01
    302c:	6a 83       	std	Y+2, r22	; 0x02
	switch(Copy_u8PortNum)
    302e:	89 81       	ldd	r24, Y+1	; 0x01
    3030:	28 2f       	mov	r18, r24
    3032:	30 e0       	ldi	r19, 0x00	; 0
    3034:	3c 83       	std	Y+4, r19	; 0x04
    3036:	2b 83       	std	Y+3, r18	; 0x03
    3038:	8b 81       	ldd	r24, Y+3	; 0x03
    303a:	9c 81       	ldd	r25, Y+4	; 0x04
    303c:	81 30       	cpi	r24, 0x01	; 1
    303e:	91 05       	cpc	r25, r1
    3040:	d1 f0       	breq	.+52     	; 0x3076 <GPIO_voidSetPortVal+0x58>
    3042:	2b 81       	ldd	r18, Y+3	; 0x03
    3044:	3c 81       	ldd	r19, Y+4	; 0x04
    3046:	22 30       	cpi	r18, 0x02	; 2
    3048:	31 05       	cpc	r19, r1
    304a:	2c f4       	brge	.+10     	; 0x3056 <GPIO_voidSetPortVal+0x38>
    304c:	8b 81       	ldd	r24, Y+3	; 0x03
    304e:	9c 81       	ldd	r25, Y+4	; 0x04
    3050:	00 97       	sbiw	r24, 0x00	; 0
    3052:	61 f0       	breq	.+24     	; 0x306c <GPIO_voidSetPortVal+0x4e>
    3054:	1e c0       	rjmp	.+60     	; 0x3092 <GPIO_voidSetPortVal+0x74>
    3056:	2b 81       	ldd	r18, Y+3	; 0x03
    3058:	3c 81       	ldd	r19, Y+4	; 0x04
    305a:	22 30       	cpi	r18, 0x02	; 2
    305c:	31 05       	cpc	r19, r1
    305e:	81 f0       	breq	.+32     	; 0x3080 <GPIO_voidSetPortVal+0x62>
    3060:	8b 81       	ldd	r24, Y+3	; 0x03
    3062:	9c 81       	ldd	r25, Y+4	; 0x04
    3064:	83 30       	cpi	r24, 0x03	; 3
    3066:	91 05       	cpc	r25, r1
    3068:	81 f0       	breq	.+32     	; 0x308a <GPIO_voidSetPortVal+0x6c>
    306a:	13 c0       	rjmp	.+38     	; 0x3092 <GPIO_voidSetPortVal+0x74>
	{
		case GPIOA : PORTA = Copy_u8Value;        break;
    306c:	eb e3       	ldi	r30, 0x3B	; 59
    306e:	f0 e0       	ldi	r31, 0x00	; 0
    3070:	8a 81       	ldd	r24, Y+2	; 0x02
    3072:	80 83       	st	Z, r24
    3074:	0e c0       	rjmp	.+28     	; 0x3092 <GPIO_voidSetPortVal+0x74>
		case GPIOB : PORTB = Copy_u8Value;        break;
    3076:	e8 e3       	ldi	r30, 0x38	; 56
    3078:	f0 e0       	ldi	r31, 0x00	; 0
    307a:	8a 81       	ldd	r24, Y+2	; 0x02
    307c:	80 83       	st	Z, r24
    307e:	09 c0       	rjmp	.+18     	; 0x3092 <GPIO_voidSetPortVal+0x74>
		case GPIOC : PORTC = Copy_u8Value;        break;
    3080:	e5 e3       	ldi	r30, 0x35	; 53
    3082:	f0 e0       	ldi	r31, 0x00	; 0
    3084:	8a 81       	ldd	r24, Y+2	; 0x02
    3086:	80 83       	st	Z, r24
    3088:	04 c0       	rjmp	.+8      	; 0x3092 <GPIO_voidSetPortVal+0x74>
		case GPIOD : PORTD = Copy_u8Value;        break;
    308a:	e2 e3       	ldi	r30, 0x32	; 50
    308c:	f0 e0       	ldi	r31, 0x00	; 0
    308e:	8a 81       	ldd	r24, Y+2	; 0x02
    3090:	80 83       	st	Z, r24
		default : /* return Error */ break;
	}
}
    3092:	0f 90       	pop	r0
    3094:	0f 90       	pop	r0
    3096:	0f 90       	pop	r0
    3098:	0f 90       	pop	r0
    309a:	cf 91       	pop	r28
    309c:	df 91       	pop	r29
    309e:	08 95       	ret

000030a0 <GPIO_voidTogglePort>:
/* 		in case of PORTA : the register is PORTA  and so on to all ports 											*/
/*	 	then toggle the value of the given prrt num (u8 Copy_u8PortNum)												*/
/* 		The default if the port num was any thing other (GPIOA,GPIOB,GPIOC,GPIOD) it returns an error and break  	*/
/*------------------------------------------------------------------------------------------------------------------*/
void GPIO_voidTogglePort(u8 Copy_u8PortNum)
{
    30a0:	df 93       	push	r29
    30a2:	cf 93       	push	r28
    30a4:	00 d0       	rcall	.+0      	; 0x30a6 <GPIO_voidTogglePort+0x6>
    30a6:	0f 92       	push	r0
    30a8:	cd b7       	in	r28, 0x3d	; 61
    30aa:	de b7       	in	r29, 0x3e	; 62
    30ac:	89 83       	std	Y+1, r24	; 0x01
	switch(Copy_u8PortNum)
    30ae:	89 81       	ldd	r24, Y+1	; 0x01
    30b0:	28 2f       	mov	r18, r24
    30b2:	30 e0       	ldi	r19, 0x00	; 0
    30b4:	3b 83       	std	Y+3, r19	; 0x03
    30b6:	2a 83       	std	Y+2, r18	; 0x02
    30b8:	8a 81       	ldd	r24, Y+2	; 0x02
    30ba:	9b 81       	ldd	r25, Y+3	; 0x03
    30bc:	81 30       	cpi	r24, 0x01	; 1
    30be:	91 05       	cpc	r25, r1
    30c0:	e9 f0       	breq	.+58     	; 0x30fc <GPIO_voidTogglePort+0x5c>
    30c2:	2a 81       	ldd	r18, Y+2	; 0x02
    30c4:	3b 81       	ldd	r19, Y+3	; 0x03
    30c6:	22 30       	cpi	r18, 0x02	; 2
    30c8:	31 05       	cpc	r19, r1
    30ca:	2c f4       	brge	.+10     	; 0x30d6 <GPIO_voidTogglePort+0x36>
    30cc:	8a 81       	ldd	r24, Y+2	; 0x02
    30ce:	9b 81       	ldd	r25, Y+3	; 0x03
    30d0:	00 97       	sbiw	r24, 0x00	; 0
    30d2:	61 f0       	breq	.+24     	; 0x30ec <GPIO_voidTogglePort+0x4c>
    30d4:	2a c0       	rjmp	.+84     	; 0x312a <GPIO_voidTogglePort+0x8a>
    30d6:	2a 81       	ldd	r18, Y+2	; 0x02
    30d8:	3b 81       	ldd	r19, Y+3	; 0x03
    30da:	22 30       	cpi	r18, 0x02	; 2
    30dc:	31 05       	cpc	r19, r1
    30de:	b1 f0       	breq	.+44     	; 0x310c <GPIO_voidTogglePort+0x6c>
    30e0:	8a 81       	ldd	r24, Y+2	; 0x02
    30e2:	9b 81       	ldd	r25, Y+3	; 0x03
    30e4:	83 30       	cpi	r24, 0x03	; 3
    30e6:	91 05       	cpc	r25, r1
    30e8:	c9 f0       	breq	.+50     	; 0x311c <GPIO_voidTogglePort+0x7c>
    30ea:	1f c0       	rjmp	.+62     	; 0x312a <GPIO_voidTogglePort+0x8a>
	{
		case GPIOA : PORTA = ~PORTA ; break;
    30ec:	ab e3       	ldi	r26, 0x3B	; 59
    30ee:	b0 e0       	ldi	r27, 0x00	; 0
    30f0:	eb e3       	ldi	r30, 0x3B	; 59
    30f2:	f0 e0       	ldi	r31, 0x00	; 0
    30f4:	80 81       	ld	r24, Z
    30f6:	80 95       	com	r24
    30f8:	8c 93       	st	X, r24
    30fa:	17 c0       	rjmp	.+46     	; 0x312a <GPIO_voidTogglePort+0x8a>
		case GPIOB : PORTB = ~PORTB ; break;
    30fc:	a8 e3       	ldi	r26, 0x38	; 56
    30fe:	b0 e0       	ldi	r27, 0x00	; 0
    3100:	e8 e3       	ldi	r30, 0x38	; 56
    3102:	f0 e0       	ldi	r31, 0x00	; 0
    3104:	80 81       	ld	r24, Z
    3106:	80 95       	com	r24
    3108:	8c 93       	st	X, r24
    310a:	0f c0       	rjmp	.+30     	; 0x312a <GPIO_voidTogglePort+0x8a>
		case GPIOC : PORTC = ~PORTC ; break;
    310c:	a5 e3       	ldi	r26, 0x35	; 53
    310e:	b0 e0       	ldi	r27, 0x00	; 0
    3110:	e5 e3       	ldi	r30, 0x35	; 53
    3112:	f0 e0       	ldi	r31, 0x00	; 0
    3114:	80 81       	ld	r24, Z
    3116:	80 95       	com	r24
    3118:	8c 93       	st	X, r24
    311a:	07 c0       	rjmp	.+14     	; 0x312a <GPIO_voidTogglePort+0x8a>
		case GPIOD : PORTD = ~PORTD ; break;
    311c:	a2 e3       	ldi	r26, 0x32	; 50
    311e:	b0 e0       	ldi	r27, 0x00	; 0
    3120:	e2 e3       	ldi	r30, 0x32	; 50
    3122:	f0 e0       	ldi	r31, 0x00	; 0
    3124:	80 81       	ld	r24, Z
    3126:	80 95       	com	r24
    3128:	8c 93       	st	X, r24
		default : /* Return Error */  break;
	}
}
    312a:	0f 90       	pop	r0
    312c:	0f 90       	pop	r0
    312e:	0f 90       	pop	r0
    3130:	cf 91       	pop	r28
    3132:	df 91       	pop	r29
    3134:	08 95       	ret

00003136 <GPIO_u8ReadPin>:
u8 GPIO_u8ReadPin(u8 Copy_u8PortNum, u8 Copy_u8PinNum)
{
    3136:	df 93       	push	r29
    3138:	cf 93       	push	r28
    313a:	00 d0       	rcall	.+0      	; 0x313c <GPIO_u8ReadPin+0x6>
    313c:	00 d0       	rcall	.+0      	; 0x313e <GPIO_u8ReadPin+0x8>
    313e:	0f 92       	push	r0
    3140:	cd b7       	in	r28, 0x3d	; 61
    3142:	de b7       	in	r29, 0x3e	; 62
    3144:	8a 83       	std	Y+2, r24	; 0x02
    3146:	6b 83       	std	Y+3, r22	; 0x03
	u8 LocalResult = 0;
    3148:	19 82       	std	Y+1, r1	; 0x01
	switch(Copy_u8PortNum)
    314a:	8a 81       	ldd	r24, Y+2	; 0x02
    314c:	28 2f       	mov	r18, r24
    314e:	30 e0       	ldi	r19, 0x00	; 0
    3150:	3d 83       	std	Y+5, r19	; 0x05
    3152:	2c 83       	std	Y+4, r18	; 0x04
    3154:	4c 81       	ldd	r20, Y+4	; 0x04
    3156:	5d 81       	ldd	r21, Y+5	; 0x05
    3158:	41 30       	cpi	r20, 0x01	; 1
    315a:	51 05       	cpc	r21, r1
    315c:	41 f1       	breq	.+80     	; 0x31ae <GPIO_u8ReadPin+0x78>
    315e:	8c 81       	ldd	r24, Y+4	; 0x04
    3160:	9d 81       	ldd	r25, Y+5	; 0x05
    3162:	82 30       	cpi	r24, 0x02	; 2
    3164:	91 05       	cpc	r25, r1
    3166:	34 f4       	brge	.+12     	; 0x3174 <GPIO_u8ReadPin+0x3e>
    3168:	2c 81       	ldd	r18, Y+4	; 0x04
    316a:	3d 81       	ldd	r19, Y+5	; 0x05
    316c:	21 15       	cp	r18, r1
    316e:	31 05       	cpc	r19, r1
    3170:	61 f0       	breq	.+24     	; 0x318a <GPIO_u8ReadPin+0x54>
    3172:	52 c0       	rjmp	.+164    	; 0x3218 <GPIO_u8ReadPin+0xe2>
    3174:	4c 81       	ldd	r20, Y+4	; 0x04
    3176:	5d 81       	ldd	r21, Y+5	; 0x05
    3178:	42 30       	cpi	r20, 0x02	; 2
    317a:	51 05       	cpc	r21, r1
    317c:	51 f1       	breq	.+84     	; 0x31d2 <GPIO_u8ReadPin+0x9c>
    317e:	8c 81       	ldd	r24, Y+4	; 0x04
    3180:	9d 81       	ldd	r25, Y+5	; 0x05
    3182:	83 30       	cpi	r24, 0x03	; 3
    3184:	91 05       	cpc	r25, r1
    3186:	b9 f1       	breq	.+110    	; 0x31f6 <GPIO_u8ReadPin+0xc0>
    3188:	47 c0       	rjmp	.+142    	; 0x3218 <GPIO_u8ReadPin+0xe2>
	{
		case GPIOA : LocalResult = GET_BIT(PINA,Copy_u8PinNum);  break;
    318a:	e9 e3       	ldi	r30, 0x39	; 57
    318c:	f0 e0       	ldi	r31, 0x00	; 0
    318e:	80 81       	ld	r24, Z
    3190:	28 2f       	mov	r18, r24
    3192:	30 e0       	ldi	r19, 0x00	; 0
    3194:	8b 81       	ldd	r24, Y+3	; 0x03
    3196:	88 2f       	mov	r24, r24
    3198:	90 e0       	ldi	r25, 0x00	; 0
    319a:	a9 01       	movw	r20, r18
    319c:	02 c0       	rjmp	.+4      	; 0x31a2 <GPIO_u8ReadPin+0x6c>
    319e:	55 95       	asr	r21
    31a0:	47 95       	ror	r20
    31a2:	8a 95       	dec	r24
    31a4:	e2 f7       	brpl	.-8      	; 0x319e <GPIO_u8ReadPin+0x68>
    31a6:	ca 01       	movw	r24, r20
    31a8:	81 70       	andi	r24, 0x01	; 1
    31aa:	89 83       	std	Y+1, r24	; 0x01
    31ac:	35 c0       	rjmp	.+106    	; 0x3218 <GPIO_u8ReadPin+0xe2>
		case GPIOB : LocalResult = GET_BIT(PINB,Copy_u8PinNum);  break;
    31ae:	e6 e3       	ldi	r30, 0x36	; 54
    31b0:	f0 e0       	ldi	r31, 0x00	; 0
    31b2:	80 81       	ld	r24, Z
    31b4:	28 2f       	mov	r18, r24
    31b6:	30 e0       	ldi	r19, 0x00	; 0
    31b8:	8b 81       	ldd	r24, Y+3	; 0x03
    31ba:	88 2f       	mov	r24, r24
    31bc:	90 e0       	ldi	r25, 0x00	; 0
    31be:	a9 01       	movw	r20, r18
    31c0:	02 c0       	rjmp	.+4      	; 0x31c6 <GPIO_u8ReadPin+0x90>
    31c2:	55 95       	asr	r21
    31c4:	47 95       	ror	r20
    31c6:	8a 95       	dec	r24
    31c8:	e2 f7       	brpl	.-8      	; 0x31c2 <GPIO_u8ReadPin+0x8c>
    31ca:	ca 01       	movw	r24, r20
    31cc:	81 70       	andi	r24, 0x01	; 1
    31ce:	89 83       	std	Y+1, r24	; 0x01
    31d0:	23 c0       	rjmp	.+70     	; 0x3218 <GPIO_u8ReadPin+0xe2>
		case GPIOC : LocalResult = GET_BIT(PINC,Copy_u8PinNum);  break;
    31d2:	e3 e3       	ldi	r30, 0x33	; 51
    31d4:	f0 e0       	ldi	r31, 0x00	; 0
    31d6:	80 81       	ld	r24, Z
    31d8:	28 2f       	mov	r18, r24
    31da:	30 e0       	ldi	r19, 0x00	; 0
    31dc:	8b 81       	ldd	r24, Y+3	; 0x03
    31de:	88 2f       	mov	r24, r24
    31e0:	90 e0       	ldi	r25, 0x00	; 0
    31e2:	a9 01       	movw	r20, r18
    31e4:	02 c0       	rjmp	.+4      	; 0x31ea <GPIO_u8ReadPin+0xb4>
    31e6:	55 95       	asr	r21
    31e8:	47 95       	ror	r20
    31ea:	8a 95       	dec	r24
    31ec:	e2 f7       	brpl	.-8      	; 0x31e6 <GPIO_u8ReadPin+0xb0>
    31ee:	ca 01       	movw	r24, r20
    31f0:	81 70       	andi	r24, 0x01	; 1
    31f2:	89 83       	std	Y+1, r24	; 0x01
    31f4:	11 c0       	rjmp	.+34     	; 0x3218 <GPIO_u8ReadPin+0xe2>
		case GPIOD : LocalResult = GET_BIT(PIND,Copy_u8PinNum);  break;
    31f6:	e0 e3       	ldi	r30, 0x30	; 48
    31f8:	f0 e0       	ldi	r31, 0x00	; 0
    31fa:	80 81       	ld	r24, Z
    31fc:	28 2f       	mov	r18, r24
    31fe:	30 e0       	ldi	r19, 0x00	; 0
    3200:	8b 81       	ldd	r24, Y+3	; 0x03
    3202:	88 2f       	mov	r24, r24
    3204:	90 e0       	ldi	r25, 0x00	; 0
    3206:	a9 01       	movw	r20, r18
    3208:	02 c0       	rjmp	.+4      	; 0x320e <GPIO_u8ReadPin+0xd8>
    320a:	55 95       	asr	r21
    320c:	47 95       	ror	r20
    320e:	8a 95       	dec	r24
    3210:	e2 f7       	brpl	.-8      	; 0x320a <GPIO_u8ReadPin+0xd4>
    3212:	ca 01       	movw	r24, r20
    3214:	81 70       	andi	r24, 0x01	; 1
    3216:	89 83       	std	Y+1, r24	; 0x01
		default : /* Return Error */                             break;
	}
	
	return LocalResult;
    3218:	89 81       	ldd	r24, Y+1	; 0x01
}
    321a:	0f 90       	pop	r0
    321c:	0f 90       	pop	r0
    321e:	0f 90       	pop	r0
    3220:	0f 90       	pop	r0
    3222:	0f 90       	pop	r0
    3224:	cf 91       	pop	r28
    3226:	df 91       	pop	r29
    3228:	08 95       	ret

0000322a <GPIO_u8ReadPort>:

u8 GPIO_u8ReadPort(u8 Copy_u8PortNum)
{
    322a:	df 93       	push	r29
    322c:	cf 93       	push	r28
    322e:	00 d0       	rcall	.+0      	; 0x3230 <GPIO_u8ReadPort+0x6>
    3230:	00 d0       	rcall	.+0      	; 0x3232 <GPIO_u8ReadPort+0x8>
    3232:	cd b7       	in	r28, 0x3d	; 61
    3234:	de b7       	in	r29, 0x3e	; 62
    3236:	8a 83       	std	Y+2, r24	; 0x02
	u8 LocalResult =0 ;
    3238:	19 82       	std	Y+1, r1	; 0x01
	switch(Copy_u8PortNum)
    323a:	8a 81       	ldd	r24, Y+2	; 0x02
    323c:	28 2f       	mov	r18, r24
    323e:	30 e0       	ldi	r19, 0x00	; 0
    3240:	3c 83       	std	Y+4, r19	; 0x04
    3242:	2b 83       	std	Y+3, r18	; 0x03
    3244:	8b 81       	ldd	r24, Y+3	; 0x03
    3246:	9c 81       	ldd	r25, Y+4	; 0x04
    3248:	81 30       	cpi	r24, 0x01	; 1
    324a:	91 05       	cpc	r25, r1
    324c:	d1 f0       	breq	.+52     	; 0x3282 <GPIO_u8ReadPort+0x58>
    324e:	2b 81       	ldd	r18, Y+3	; 0x03
    3250:	3c 81       	ldd	r19, Y+4	; 0x04
    3252:	22 30       	cpi	r18, 0x02	; 2
    3254:	31 05       	cpc	r19, r1
    3256:	2c f4       	brge	.+10     	; 0x3262 <GPIO_u8ReadPort+0x38>
    3258:	8b 81       	ldd	r24, Y+3	; 0x03
    325a:	9c 81       	ldd	r25, Y+4	; 0x04
    325c:	00 97       	sbiw	r24, 0x00	; 0
    325e:	61 f0       	breq	.+24     	; 0x3278 <GPIO_u8ReadPort+0x4e>
    3260:	1e c0       	rjmp	.+60     	; 0x329e <GPIO_u8ReadPort+0x74>
    3262:	2b 81       	ldd	r18, Y+3	; 0x03
    3264:	3c 81       	ldd	r19, Y+4	; 0x04
    3266:	22 30       	cpi	r18, 0x02	; 2
    3268:	31 05       	cpc	r19, r1
    326a:	81 f0       	breq	.+32     	; 0x328c <GPIO_u8ReadPort+0x62>
    326c:	8b 81       	ldd	r24, Y+3	; 0x03
    326e:	9c 81       	ldd	r25, Y+4	; 0x04
    3270:	83 30       	cpi	r24, 0x03	; 3
    3272:	91 05       	cpc	r25, r1
    3274:	81 f0       	breq	.+32     	; 0x3296 <GPIO_u8ReadPort+0x6c>
    3276:	13 c0       	rjmp	.+38     	; 0x329e <GPIO_u8ReadPort+0x74>
	{
		case GPIOA : LocalResult = PINA; break;
    3278:	e9 e3       	ldi	r30, 0x39	; 57
    327a:	f0 e0       	ldi	r31, 0x00	; 0
    327c:	80 81       	ld	r24, Z
    327e:	89 83       	std	Y+1, r24	; 0x01
    3280:	0e c0       	rjmp	.+28     	; 0x329e <GPIO_u8ReadPort+0x74>
		case GPIOB : LocalResult = PINB; break;
    3282:	e6 e3       	ldi	r30, 0x36	; 54
    3284:	f0 e0       	ldi	r31, 0x00	; 0
    3286:	80 81       	ld	r24, Z
    3288:	89 83       	std	Y+1, r24	; 0x01
    328a:	09 c0       	rjmp	.+18     	; 0x329e <GPIO_u8ReadPort+0x74>
		case GPIOC : LocalResult = PINC; break;
    328c:	e3 e3       	ldi	r30, 0x33	; 51
    328e:	f0 e0       	ldi	r31, 0x00	; 0
    3290:	80 81       	ld	r24, Z
    3292:	89 83       	std	Y+1, r24	; 0x01
    3294:	04 c0       	rjmp	.+8      	; 0x329e <GPIO_u8ReadPort+0x74>
		case GPIOD : LocalResult = PIND; break;
    3296:	e0 e3       	ldi	r30, 0x30	; 48
    3298:	f0 e0       	ldi	r31, 0x00	; 0
    329a:	80 81       	ld	r24, Z
    329c:	89 83       	std	Y+1, r24	; 0x01
		default : /* Return Error */ break;
	}
	return LocalResult;
    329e:	89 81       	ldd	r24, Y+1	; 0x01
}
    32a0:	0f 90       	pop	r0
    32a2:	0f 90       	pop	r0
    32a4:	0f 90       	pop	r0
    32a6:	0f 90       	pop	r0
    32a8:	cf 91       	pop	r28
    32aa:	df 91       	pop	r29
    32ac:	08 95       	ret

000032ae <GPIO_voidSet_LOW_NibbleDir>:

void GPIO_voidSet_LOW_NibbleDir(u8 Copy_u8PortNum, u8 Copy_u8Dir)
{
    32ae:	df 93       	push	r29
    32b0:	cf 93       	push	r28
    32b2:	cd b7       	in	r28, 0x3d	; 61
    32b4:	de b7       	in	r29, 0x3e	; 62
    32b6:	2c 97       	sbiw	r28, 0x0c	; 12
    32b8:	0f b6       	in	r0, 0x3f	; 63
    32ba:	f8 94       	cli
    32bc:	de bf       	out	0x3e, r29	; 62
    32be:	0f be       	out	0x3f, r0	; 63
    32c0:	cd bf       	out	0x3d, r28	; 61
    32c2:	89 83       	std	Y+1, r24	; 0x01
    32c4:	6a 83       	std	Y+2, r22	; 0x02
	switch(Copy_u8PortNum)
    32c6:	89 81       	ldd	r24, Y+1	; 0x01
    32c8:	28 2f       	mov	r18, r24
    32ca:	30 e0       	ldi	r19, 0x00	; 0
    32cc:	3c 87       	std	Y+12, r19	; 0x0c
    32ce:	2b 87       	std	Y+11, r18	; 0x0b
    32d0:	8b 85       	ldd	r24, Y+11	; 0x0b
    32d2:	9c 85       	ldd	r25, Y+12	; 0x0c
    32d4:	81 30       	cpi	r24, 0x01	; 1
    32d6:	91 05       	cpc	r25, r1
    32d8:	09 f4       	brne	.+2      	; 0x32dc <GPIO_voidSet_LOW_NibbleDir+0x2e>
    32da:	50 c0       	rjmp	.+160    	; 0x337c <GPIO_voidSet_LOW_NibbleDir+0xce>
    32dc:	2b 85       	ldd	r18, Y+11	; 0x0b
    32de:	3c 85       	ldd	r19, Y+12	; 0x0c
    32e0:	22 30       	cpi	r18, 0x02	; 2
    32e2:	31 05       	cpc	r19, r1
    32e4:	2c f4       	brge	.+10     	; 0x32f0 <GPIO_voidSet_LOW_NibbleDir+0x42>
    32e6:	8b 85       	ldd	r24, Y+11	; 0x0b
    32e8:	9c 85       	ldd	r25, Y+12	; 0x0c
    32ea:	00 97       	sbiw	r24, 0x00	; 0
    32ec:	71 f0       	breq	.+28     	; 0x330a <GPIO_voidSet_LOW_NibbleDir+0x5c>
    32ee:	f0 c0       	rjmp	.+480    	; 0x34d0 <GPIO_voidSet_LOW_NibbleDir+0x222>
    32f0:	2b 85       	ldd	r18, Y+11	; 0x0b
    32f2:	3c 85       	ldd	r19, Y+12	; 0x0c
    32f4:	22 30       	cpi	r18, 0x02	; 2
    32f6:	31 05       	cpc	r19, r1
    32f8:	09 f4       	brne	.+2      	; 0x32fc <GPIO_voidSet_LOW_NibbleDir+0x4e>
    32fa:	79 c0       	rjmp	.+242    	; 0x33ee <GPIO_voidSet_LOW_NibbleDir+0x140>
    32fc:	8b 85       	ldd	r24, Y+11	; 0x0b
    32fe:	9c 85       	ldd	r25, Y+12	; 0x0c
    3300:	83 30       	cpi	r24, 0x03	; 3
    3302:	91 05       	cpc	r25, r1
    3304:	09 f4       	brne	.+2      	; 0x3308 <GPIO_voidSet_LOW_NibbleDir+0x5a>
    3306:	ac c0       	rjmp	.+344    	; 0x3460 <GPIO_voidSet_LOW_NibbleDir+0x1b2>
    3308:	e3 c0       	rjmp	.+454    	; 0x34d0 <GPIO_voidSet_LOW_NibbleDir+0x222>
	{
		case GPIOA : 
			switch(Copy_u8Dir)
    330a:	8a 81       	ldd	r24, Y+2	; 0x02
    330c:	28 2f       	mov	r18, r24
    330e:	30 e0       	ldi	r19, 0x00	; 0
    3310:	3a 87       	std	Y+10, r19	; 0x0a
    3312:	29 87       	std	Y+9, r18	; 0x09
    3314:	89 85       	ldd	r24, Y+9	; 0x09
    3316:	9a 85       	ldd	r25, Y+10	; 0x0a
    3318:	00 97       	sbiw	r24, 0x00	; 0
    331a:	31 f0       	breq	.+12     	; 0x3328 <GPIO_voidSet_LOW_NibbleDir+0x7a>
    331c:	29 85       	ldd	r18, Y+9	; 0x09
    331e:	3a 85       	ldd	r19, Y+10	; 0x0a
    3320:	21 30       	cpi	r18, 0x01	; 1
    3322:	31 05       	cpc	r19, r1
    3324:	b1 f0       	breq	.+44     	; 0x3352 <GPIO_voidSet_LOW_NibbleDir+0xa4>
    3326:	d4 c0       	rjmp	.+424    	; 0x34d0 <GPIO_voidSet_LOW_NibbleDir+0x222>
			{
				case INPUT  : GPIO_voidSetPinDir(GPIOA,PIN0,INPUT);
    3328:	80 e0       	ldi	r24, 0x00	; 0
    332a:	60 e0       	ldi	r22, 0x00	; 0
    332c:	40 e0       	ldi	r20, 0x00	; 0
    332e:	0e 94 23 15 	call	0x2a46	; 0x2a46 <GPIO_voidSetPinDir>
							  GPIO_voidSetPinDir(GPIOA,PIN1,INPUT);
    3332:	80 e0       	ldi	r24, 0x00	; 0
    3334:	61 e0       	ldi	r22, 0x01	; 1
    3336:	40 e0       	ldi	r20, 0x00	; 0
    3338:	0e 94 23 15 	call	0x2a46	; 0x2a46 <GPIO_voidSetPinDir>
							  GPIO_voidSetPinDir(GPIOA,PIN2,INPUT);
    333c:	80 e0       	ldi	r24, 0x00	; 0
    333e:	62 e0       	ldi	r22, 0x02	; 2
    3340:	40 e0       	ldi	r20, 0x00	; 0
    3342:	0e 94 23 15 	call	0x2a46	; 0x2a46 <GPIO_voidSetPinDir>
							  GPIO_voidSetPinDir(GPIOA,PIN3,INPUT);
    3346:	80 e0       	ldi	r24, 0x00	; 0
    3348:	63 e0       	ldi	r22, 0x03	; 3
    334a:	40 e0       	ldi	r20, 0x00	; 0
    334c:	0e 94 23 15 	call	0x2a46	; 0x2a46 <GPIO_voidSetPinDir>
    3350:	bf c0       	rjmp	.+382    	; 0x34d0 <GPIO_voidSet_LOW_NibbleDir+0x222>
							  break;
							  
				case OUTPUT : GPIO_voidSetPinDir(GPIOA,PIN0,OUTPUT);
    3352:	80 e0       	ldi	r24, 0x00	; 0
    3354:	60 e0       	ldi	r22, 0x00	; 0
    3356:	41 e0       	ldi	r20, 0x01	; 1
    3358:	0e 94 23 15 	call	0x2a46	; 0x2a46 <GPIO_voidSetPinDir>
							  GPIO_voidSetPinDir(GPIOA,PIN1,OUTPUT);
    335c:	80 e0       	ldi	r24, 0x00	; 0
    335e:	61 e0       	ldi	r22, 0x01	; 1
    3360:	41 e0       	ldi	r20, 0x01	; 1
    3362:	0e 94 23 15 	call	0x2a46	; 0x2a46 <GPIO_voidSetPinDir>
							  GPIO_voidSetPinDir(GPIOA,PIN2,OUTPUT);
    3366:	80 e0       	ldi	r24, 0x00	; 0
    3368:	62 e0       	ldi	r22, 0x02	; 2
    336a:	41 e0       	ldi	r20, 0x01	; 1
    336c:	0e 94 23 15 	call	0x2a46	; 0x2a46 <GPIO_voidSetPinDir>
							  GPIO_voidSetPinDir(GPIOA,PIN3,OUTPUT);
    3370:	80 e0       	ldi	r24, 0x00	; 0
    3372:	63 e0       	ldi	r22, 0x03	; 3
    3374:	41 e0       	ldi	r20, 0x01	; 1
    3376:	0e 94 23 15 	call	0x2a46	; 0x2a46 <GPIO_voidSetPinDir>
    337a:	aa c0       	rjmp	.+340    	; 0x34d0 <GPIO_voidSet_LOW_NibbleDir+0x222>
							  break;
				default: /* return error */ break;
			}				
				break;
		case GPIOB :
			switch(Copy_u8Dir)
    337c:	8a 81       	ldd	r24, Y+2	; 0x02
    337e:	28 2f       	mov	r18, r24
    3380:	30 e0       	ldi	r19, 0x00	; 0
    3382:	38 87       	std	Y+8, r19	; 0x08
    3384:	2f 83       	std	Y+7, r18	; 0x07
    3386:	8f 81       	ldd	r24, Y+7	; 0x07
    3388:	98 85       	ldd	r25, Y+8	; 0x08
    338a:	00 97       	sbiw	r24, 0x00	; 0
    338c:	31 f0       	breq	.+12     	; 0x339a <GPIO_voidSet_LOW_NibbleDir+0xec>
    338e:	2f 81       	ldd	r18, Y+7	; 0x07
    3390:	38 85       	ldd	r19, Y+8	; 0x08
    3392:	21 30       	cpi	r18, 0x01	; 1
    3394:	31 05       	cpc	r19, r1
    3396:	b1 f0       	breq	.+44     	; 0x33c4 <GPIO_voidSet_LOW_NibbleDir+0x116>
    3398:	9b c0       	rjmp	.+310    	; 0x34d0 <GPIO_voidSet_LOW_NibbleDir+0x222>
			{
				case INPUT  : GPIO_voidSetPinDir(GPIOB,PIN0,INPUT);
    339a:	81 e0       	ldi	r24, 0x01	; 1
    339c:	60 e0       	ldi	r22, 0x00	; 0
    339e:	40 e0       	ldi	r20, 0x00	; 0
    33a0:	0e 94 23 15 	call	0x2a46	; 0x2a46 <GPIO_voidSetPinDir>
							  GPIO_voidSetPinDir(GPIOB,PIN1,INPUT);
    33a4:	81 e0       	ldi	r24, 0x01	; 1
    33a6:	61 e0       	ldi	r22, 0x01	; 1
    33a8:	40 e0       	ldi	r20, 0x00	; 0
    33aa:	0e 94 23 15 	call	0x2a46	; 0x2a46 <GPIO_voidSetPinDir>
							  GPIO_voidSetPinDir(GPIOB,PIN2,INPUT);
    33ae:	81 e0       	ldi	r24, 0x01	; 1
    33b0:	62 e0       	ldi	r22, 0x02	; 2
    33b2:	40 e0       	ldi	r20, 0x00	; 0
    33b4:	0e 94 23 15 	call	0x2a46	; 0x2a46 <GPIO_voidSetPinDir>
							  GPIO_voidSetPinDir(GPIOB,PIN3,INPUT);
    33b8:	81 e0       	ldi	r24, 0x01	; 1
    33ba:	63 e0       	ldi	r22, 0x03	; 3
    33bc:	40 e0       	ldi	r20, 0x00	; 0
    33be:	0e 94 23 15 	call	0x2a46	; 0x2a46 <GPIO_voidSetPinDir>
    33c2:	86 c0       	rjmp	.+268    	; 0x34d0 <GPIO_voidSet_LOW_NibbleDir+0x222>
							  break;
				
				case OUTPUT : GPIO_voidSetPinDir(GPIOB,PIN0,OUTPUT);
    33c4:	81 e0       	ldi	r24, 0x01	; 1
    33c6:	60 e0       	ldi	r22, 0x00	; 0
    33c8:	41 e0       	ldi	r20, 0x01	; 1
    33ca:	0e 94 23 15 	call	0x2a46	; 0x2a46 <GPIO_voidSetPinDir>
							  GPIO_voidSetPinDir(GPIOB,PIN1,OUTPUT);
    33ce:	81 e0       	ldi	r24, 0x01	; 1
    33d0:	61 e0       	ldi	r22, 0x01	; 1
    33d2:	41 e0       	ldi	r20, 0x01	; 1
    33d4:	0e 94 23 15 	call	0x2a46	; 0x2a46 <GPIO_voidSetPinDir>
							  GPIO_voidSetPinDir(GPIOB,PIN2,OUTPUT);
    33d8:	81 e0       	ldi	r24, 0x01	; 1
    33da:	62 e0       	ldi	r22, 0x02	; 2
    33dc:	41 e0       	ldi	r20, 0x01	; 1
    33de:	0e 94 23 15 	call	0x2a46	; 0x2a46 <GPIO_voidSetPinDir>
							  GPIO_voidSetPinDir(GPIOB,PIN3,OUTPUT);
    33e2:	81 e0       	ldi	r24, 0x01	; 1
    33e4:	63 e0       	ldi	r22, 0x03	; 3
    33e6:	41 e0       	ldi	r20, 0x01	; 1
    33e8:	0e 94 23 15 	call	0x2a46	; 0x2a46 <GPIO_voidSetPinDir>
    33ec:	71 c0       	rjmp	.+226    	; 0x34d0 <GPIO_voidSet_LOW_NibbleDir+0x222>
				default: /* return Error */ break;
			}
			break;
			 
		case GPIOC :
			switch(Copy_u8Dir)
    33ee:	8a 81       	ldd	r24, Y+2	; 0x02
    33f0:	28 2f       	mov	r18, r24
    33f2:	30 e0       	ldi	r19, 0x00	; 0
    33f4:	3e 83       	std	Y+6, r19	; 0x06
    33f6:	2d 83       	std	Y+5, r18	; 0x05
    33f8:	8d 81       	ldd	r24, Y+5	; 0x05
    33fa:	9e 81       	ldd	r25, Y+6	; 0x06
    33fc:	00 97       	sbiw	r24, 0x00	; 0
    33fe:	31 f0       	breq	.+12     	; 0x340c <GPIO_voidSet_LOW_NibbleDir+0x15e>
    3400:	2d 81       	ldd	r18, Y+5	; 0x05
    3402:	3e 81       	ldd	r19, Y+6	; 0x06
    3404:	21 30       	cpi	r18, 0x01	; 1
    3406:	31 05       	cpc	r19, r1
    3408:	b1 f0       	breq	.+44     	; 0x3436 <GPIO_voidSet_LOW_NibbleDir+0x188>
    340a:	62 c0       	rjmp	.+196    	; 0x34d0 <GPIO_voidSet_LOW_NibbleDir+0x222>
			{
				case INPUT  : GPIO_voidSetPinDir(GPIOC,PIN0,INPUT);
    340c:	82 e0       	ldi	r24, 0x02	; 2
    340e:	60 e0       	ldi	r22, 0x00	; 0
    3410:	40 e0       	ldi	r20, 0x00	; 0
    3412:	0e 94 23 15 	call	0x2a46	; 0x2a46 <GPIO_voidSetPinDir>
							  GPIO_voidSetPinDir(GPIOC,PIN1,INPUT);
    3416:	82 e0       	ldi	r24, 0x02	; 2
    3418:	61 e0       	ldi	r22, 0x01	; 1
    341a:	40 e0       	ldi	r20, 0x00	; 0
    341c:	0e 94 23 15 	call	0x2a46	; 0x2a46 <GPIO_voidSetPinDir>
							  GPIO_voidSetPinDir(GPIOC,PIN2,INPUT);
    3420:	82 e0       	ldi	r24, 0x02	; 2
    3422:	62 e0       	ldi	r22, 0x02	; 2
    3424:	40 e0       	ldi	r20, 0x00	; 0
    3426:	0e 94 23 15 	call	0x2a46	; 0x2a46 <GPIO_voidSetPinDir>
							  GPIO_voidSetPinDir(GPIOC,PIN3,INPUT);
    342a:	82 e0       	ldi	r24, 0x02	; 2
    342c:	63 e0       	ldi	r22, 0x03	; 3
    342e:	40 e0       	ldi	r20, 0x00	; 0
    3430:	0e 94 23 15 	call	0x2a46	; 0x2a46 <GPIO_voidSetPinDir>
    3434:	4d c0       	rjmp	.+154    	; 0x34d0 <GPIO_voidSet_LOW_NibbleDir+0x222>
							  break;
				
				case OUTPUT : GPIO_voidSetPinDir(GPIOC,PIN0,OUTPUT);
    3436:	82 e0       	ldi	r24, 0x02	; 2
    3438:	60 e0       	ldi	r22, 0x00	; 0
    343a:	41 e0       	ldi	r20, 0x01	; 1
    343c:	0e 94 23 15 	call	0x2a46	; 0x2a46 <GPIO_voidSetPinDir>
							  GPIO_voidSetPinDir(GPIOC,PIN1,OUTPUT);
    3440:	82 e0       	ldi	r24, 0x02	; 2
    3442:	61 e0       	ldi	r22, 0x01	; 1
    3444:	41 e0       	ldi	r20, 0x01	; 1
    3446:	0e 94 23 15 	call	0x2a46	; 0x2a46 <GPIO_voidSetPinDir>
							  GPIO_voidSetPinDir(GPIOC,PIN2,OUTPUT);
    344a:	82 e0       	ldi	r24, 0x02	; 2
    344c:	62 e0       	ldi	r22, 0x02	; 2
    344e:	41 e0       	ldi	r20, 0x01	; 1
    3450:	0e 94 23 15 	call	0x2a46	; 0x2a46 <GPIO_voidSetPinDir>
							  GPIO_voidSetPinDir(GPIOC,PIN3,OUTPUT);
    3454:	82 e0       	ldi	r24, 0x02	; 2
    3456:	63 e0       	ldi	r22, 0x03	; 3
    3458:	41 e0       	ldi	r20, 0x01	; 1
    345a:	0e 94 23 15 	call	0x2a46	; 0x2a46 <GPIO_voidSetPinDir>
    345e:	38 c0       	rjmp	.+112    	; 0x34d0 <GPIO_voidSet_LOW_NibbleDir+0x222>
				default: /* return Error */ break;
			}
		break;
		
		case GPIOD :
			switch(Copy_u8Dir)
    3460:	8a 81       	ldd	r24, Y+2	; 0x02
    3462:	28 2f       	mov	r18, r24
    3464:	30 e0       	ldi	r19, 0x00	; 0
    3466:	3c 83       	std	Y+4, r19	; 0x04
    3468:	2b 83       	std	Y+3, r18	; 0x03
    346a:	8b 81       	ldd	r24, Y+3	; 0x03
    346c:	9c 81       	ldd	r25, Y+4	; 0x04
    346e:	00 97       	sbiw	r24, 0x00	; 0
    3470:	31 f0       	breq	.+12     	; 0x347e <GPIO_voidSet_LOW_NibbleDir+0x1d0>
    3472:	2b 81       	ldd	r18, Y+3	; 0x03
    3474:	3c 81       	ldd	r19, Y+4	; 0x04
    3476:	21 30       	cpi	r18, 0x01	; 1
    3478:	31 05       	cpc	r19, r1
    347a:	b1 f0       	breq	.+44     	; 0x34a8 <GPIO_voidSet_LOW_NibbleDir+0x1fa>
    347c:	29 c0       	rjmp	.+82     	; 0x34d0 <GPIO_voidSet_LOW_NibbleDir+0x222>
			{
				case INPUT  : GPIO_voidSetPinDir(GPIOD,PIN0,INPUT);
    347e:	83 e0       	ldi	r24, 0x03	; 3
    3480:	60 e0       	ldi	r22, 0x00	; 0
    3482:	40 e0       	ldi	r20, 0x00	; 0
    3484:	0e 94 23 15 	call	0x2a46	; 0x2a46 <GPIO_voidSetPinDir>
							  GPIO_voidSetPinDir(GPIOD,PIN1,INPUT);
    3488:	83 e0       	ldi	r24, 0x03	; 3
    348a:	61 e0       	ldi	r22, 0x01	; 1
    348c:	40 e0       	ldi	r20, 0x00	; 0
    348e:	0e 94 23 15 	call	0x2a46	; 0x2a46 <GPIO_voidSetPinDir>
							  GPIO_voidSetPinDir(GPIOD,PIN2,INPUT);
    3492:	83 e0       	ldi	r24, 0x03	; 3
    3494:	62 e0       	ldi	r22, 0x02	; 2
    3496:	40 e0       	ldi	r20, 0x00	; 0
    3498:	0e 94 23 15 	call	0x2a46	; 0x2a46 <GPIO_voidSetPinDir>
							  GPIO_voidSetPinDir(GPIOD,PIN3,INPUT);
    349c:	83 e0       	ldi	r24, 0x03	; 3
    349e:	63 e0       	ldi	r22, 0x03	; 3
    34a0:	40 e0       	ldi	r20, 0x00	; 0
    34a2:	0e 94 23 15 	call	0x2a46	; 0x2a46 <GPIO_voidSetPinDir>
    34a6:	14 c0       	rjmp	.+40     	; 0x34d0 <GPIO_voidSet_LOW_NibbleDir+0x222>
							  break;
				
				case OUTPUT : GPIO_voidSetPinDir(GPIOD,PIN0,OUTPUT);
    34a8:	83 e0       	ldi	r24, 0x03	; 3
    34aa:	60 e0       	ldi	r22, 0x00	; 0
    34ac:	41 e0       	ldi	r20, 0x01	; 1
    34ae:	0e 94 23 15 	call	0x2a46	; 0x2a46 <GPIO_voidSetPinDir>
							  GPIO_voidSetPinDir(GPIOD,PIN1,OUTPUT);
    34b2:	83 e0       	ldi	r24, 0x03	; 3
    34b4:	61 e0       	ldi	r22, 0x01	; 1
    34b6:	41 e0       	ldi	r20, 0x01	; 1
    34b8:	0e 94 23 15 	call	0x2a46	; 0x2a46 <GPIO_voidSetPinDir>
							  GPIO_voidSetPinDir(GPIOD,PIN2,OUTPUT);
    34bc:	83 e0       	ldi	r24, 0x03	; 3
    34be:	62 e0       	ldi	r22, 0x02	; 2
    34c0:	41 e0       	ldi	r20, 0x01	; 1
    34c2:	0e 94 23 15 	call	0x2a46	; 0x2a46 <GPIO_voidSetPinDir>
							  GPIO_voidSetPinDir(GPIOD,PIN3,OUTPUT);
    34c6:	83 e0       	ldi	r24, 0x03	; 3
    34c8:	63 e0       	ldi	r22, 0x03	; 3
    34ca:	41 e0       	ldi	r20, 0x01	; 1
    34cc:	0e 94 23 15 	call	0x2a46	; 0x2a46 <GPIO_voidSetPinDir>
			}
		break;
		default: /* return error */ break;
		
	}
}
    34d0:	2c 96       	adiw	r28, 0x0c	; 12
    34d2:	0f b6       	in	r0, 0x3f	; 63
    34d4:	f8 94       	cli
    34d6:	de bf       	out	0x3e, r29	; 62
    34d8:	0f be       	out	0x3f, r0	; 63
    34da:	cd bf       	out	0x3d, r28	; 61
    34dc:	cf 91       	pop	r28
    34de:	df 91       	pop	r29
    34e0:	08 95       	ret

000034e2 <GPIO_voidSet_HIGH_NibbleDir>:

void GPIO_voidSet_HIGH_NibbleDir(u8 Copy_u8PortNum, u8 Copy_u8Dir)
{
    34e2:	df 93       	push	r29
    34e4:	cf 93       	push	r28
    34e6:	cd b7       	in	r28, 0x3d	; 61
    34e8:	de b7       	in	r29, 0x3e	; 62
    34ea:	2c 97       	sbiw	r28, 0x0c	; 12
    34ec:	0f b6       	in	r0, 0x3f	; 63
    34ee:	f8 94       	cli
    34f0:	de bf       	out	0x3e, r29	; 62
    34f2:	0f be       	out	0x3f, r0	; 63
    34f4:	cd bf       	out	0x3d, r28	; 61
    34f6:	89 83       	std	Y+1, r24	; 0x01
    34f8:	6a 83       	std	Y+2, r22	; 0x02
	switch(Copy_u8PortNum)
    34fa:	89 81       	ldd	r24, Y+1	; 0x01
    34fc:	28 2f       	mov	r18, r24
    34fe:	30 e0       	ldi	r19, 0x00	; 0
    3500:	3c 87       	std	Y+12, r19	; 0x0c
    3502:	2b 87       	std	Y+11, r18	; 0x0b
    3504:	8b 85       	ldd	r24, Y+11	; 0x0b
    3506:	9c 85       	ldd	r25, Y+12	; 0x0c
    3508:	81 30       	cpi	r24, 0x01	; 1
    350a:	91 05       	cpc	r25, r1
    350c:	09 f4       	brne	.+2      	; 0x3510 <GPIO_voidSet_HIGH_NibbleDir+0x2e>
    350e:	50 c0       	rjmp	.+160    	; 0x35b0 <GPIO_voidSet_HIGH_NibbleDir+0xce>
    3510:	2b 85       	ldd	r18, Y+11	; 0x0b
    3512:	3c 85       	ldd	r19, Y+12	; 0x0c
    3514:	22 30       	cpi	r18, 0x02	; 2
    3516:	31 05       	cpc	r19, r1
    3518:	2c f4       	brge	.+10     	; 0x3524 <GPIO_voidSet_HIGH_NibbleDir+0x42>
    351a:	8b 85       	ldd	r24, Y+11	; 0x0b
    351c:	9c 85       	ldd	r25, Y+12	; 0x0c
    351e:	00 97       	sbiw	r24, 0x00	; 0
    3520:	71 f0       	breq	.+28     	; 0x353e <GPIO_voidSet_HIGH_NibbleDir+0x5c>
    3522:	f0 c0       	rjmp	.+480    	; 0x3704 <GPIO_voidSet_HIGH_NibbleDir+0x222>
    3524:	2b 85       	ldd	r18, Y+11	; 0x0b
    3526:	3c 85       	ldd	r19, Y+12	; 0x0c
    3528:	22 30       	cpi	r18, 0x02	; 2
    352a:	31 05       	cpc	r19, r1
    352c:	09 f4       	brne	.+2      	; 0x3530 <GPIO_voidSet_HIGH_NibbleDir+0x4e>
    352e:	79 c0       	rjmp	.+242    	; 0x3622 <GPIO_voidSet_HIGH_NibbleDir+0x140>
    3530:	8b 85       	ldd	r24, Y+11	; 0x0b
    3532:	9c 85       	ldd	r25, Y+12	; 0x0c
    3534:	83 30       	cpi	r24, 0x03	; 3
    3536:	91 05       	cpc	r25, r1
    3538:	09 f4       	brne	.+2      	; 0x353c <GPIO_voidSet_HIGH_NibbleDir+0x5a>
    353a:	ac c0       	rjmp	.+344    	; 0x3694 <GPIO_voidSet_HIGH_NibbleDir+0x1b2>
    353c:	e3 c0       	rjmp	.+454    	; 0x3704 <GPIO_voidSet_HIGH_NibbleDir+0x222>
	{
		case GPIOA :
			switch(Copy_u8Dir)
    353e:	8a 81       	ldd	r24, Y+2	; 0x02
    3540:	28 2f       	mov	r18, r24
    3542:	30 e0       	ldi	r19, 0x00	; 0
    3544:	3a 87       	std	Y+10, r19	; 0x0a
    3546:	29 87       	std	Y+9, r18	; 0x09
    3548:	89 85       	ldd	r24, Y+9	; 0x09
    354a:	9a 85       	ldd	r25, Y+10	; 0x0a
    354c:	00 97       	sbiw	r24, 0x00	; 0
    354e:	31 f0       	breq	.+12     	; 0x355c <GPIO_voidSet_HIGH_NibbleDir+0x7a>
    3550:	29 85       	ldd	r18, Y+9	; 0x09
    3552:	3a 85       	ldd	r19, Y+10	; 0x0a
    3554:	21 30       	cpi	r18, 0x01	; 1
    3556:	31 05       	cpc	r19, r1
    3558:	b1 f0       	breq	.+44     	; 0x3586 <GPIO_voidSet_HIGH_NibbleDir+0xa4>
    355a:	d4 c0       	rjmp	.+424    	; 0x3704 <GPIO_voidSet_HIGH_NibbleDir+0x222>
			{
				case INPUT  : GPIO_voidSetPinDir(GPIOA,PIN4,INPUT);
    355c:	80 e0       	ldi	r24, 0x00	; 0
    355e:	64 e0       	ldi	r22, 0x04	; 4
    3560:	40 e0       	ldi	r20, 0x00	; 0
    3562:	0e 94 23 15 	call	0x2a46	; 0x2a46 <GPIO_voidSetPinDir>
							  GPIO_voidSetPinDir(GPIOA,PIN5,INPUT);
    3566:	80 e0       	ldi	r24, 0x00	; 0
    3568:	65 e0       	ldi	r22, 0x05	; 5
    356a:	40 e0       	ldi	r20, 0x00	; 0
    356c:	0e 94 23 15 	call	0x2a46	; 0x2a46 <GPIO_voidSetPinDir>
							  GPIO_voidSetPinDir(GPIOA,PIN6,INPUT);
    3570:	80 e0       	ldi	r24, 0x00	; 0
    3572:	66 e0       	ldi	r22, 0x06	; 6
    3574:	40 e0       	ldi	r20, 0x00	; 0
    3576:	0e 94 23 15 	call	0x2a46	; 0x2a46 <GPIO_voidSetPinDir>
							  GPIO_voidSetPinDir(GPIOA,PIN7,INPUT);
    357a:	80 e0       	ldi	r24, 0x00	; 0
    357c:	67 e0       	ldi	r22, 0x07	; 7
    357e:	40 e0       	ldi	r20, 0x00	; 0
    3580:	0e 94 23 15 	call	0x2a46	; 0x2a46 <GPIO_voidSetPinDir>
    3584:	bf c0       	rjmp	.+382    	; 0x3704 <GPIO_voidSet_HIGH_NibbleDir+0x222>
							  break;
				
				case OUTPUT : GPIO_voidSetPinDir(GPIOA,PIN4,OUTPUT);
    3586:	80 e0       	ldi	r24, 0x00	; 0
    3588:	64 e0       	ldi	r22, 0x04	; 4
    358a:	41 e0       	ldi	r20, 0x01	; 1
    358c:	0e 94 23 15 	call	0x2a46	; 0x2a46 <GPIO_voidSetPinDir>
							  GPIO_voidSetPinDir(GPIOA,PIN5,OUTPUT);
    3590:	80 e0       	ldi	r24, 0x00	; 0
    3592:	65 e0       	ldi	r22, 0x05	; 5
    3594:	41 e0       	ldi	r20, 0x01	; 1
    3596:	0e 94 23 15 	call	0x2a46	; 0x2a46 <GPIO_voidSetPinDir>
							  GPIO_voidSetPinDir(GPIOA,PIN6,OUTPUT);
    359a:	80 e0       	ldi	r24, 0x00	; 0
    359c:	66 e0       	ldi	r22, 0x06	; 6
    359e:	41 e0       	ldi	r20, 0x01	; 1
    35a0:	0e 94 23 15 	call	0x2a46	; 0x2a46 <GPIO_voidSetPinDir>
							  GPIO_voidSetPinDir(GPIOA,PIN7,OUTPUT);
    35a4:	80 e0       	ldi	r24, 0x00	; 0
    35a6:	67 e0       	ldi	r22, 0x07	; 7
    35a8:	41 e0       	ldi	r20, 0x01	; 1
    35aa:	0e 94 23 15 	call	0x2a46	; 0x2a46 <GPIO_voidSetPinDir>
    35ae:	aa c0       	rjmp	.+340    	; 0x3704 <GPIO_voidSet_HIGH_NibbleDir+0x222>
							  break;
				default: /* return error */ break;
			}
		break;
		case GPIOB :
			switch(Copy_u8Dir)
    35b0:	8a 81       	ldd	r24, Y+2	; 0x02
    35b2:	28 2f       	mov	r18, r24
    35b4:	30 e0       	ldi	r19, 0x00	; 0
    35b6:	38 87       	std	Y+8, r19	; 0x08
    35b8:	2f 83       	std	Y+7, r18	; 0x07
    35ba:	8f 81       	ldd	r24, Y+7	; 0x07
    35bc:	98 85       	ldd	r25, Y+8	; 0x08
    35be:	00 97       	sbiw	r24, 0x00	; 0
    35c0:	31 f0       	breq	.+12     	; 0x35ce <GPIO_voidSet_HIGH_NibbleDir+0xec>
    35c2:	2f 81       	ldd	r18, Y+7	; 0x07
    35c4:	38 85       	ldd	r19, Y+8	; 0x08
    35c6:	21 30       	cpi	r18, 0x01	; 1
    35c8:	31 05       	cpc	r19, r1
    35ca:	b1 f0       	breq	.+44     	; 0x35f8 <GPIO_voidSet_HIGH_NibbleDir+0x116>
    35cc:	9b c0       	rjmp	.+310    	; 0x3704 <GPIO_voidSet_HIGH_NibbleDir+0x222>
			{
				case INPUT  : GPIO_voidSetPinDir(GPIOB,PIN4,INPUT);
    35ce:	81 e0       	ldi	r24, 0x01	; 1
    35d0:	64 e0       	ldi	r22, 0x04	; 4
    35d2:	40 e0       	ldi	r20, 0x00	; 0
    35d4:	0e 94 23 15 	call	0x2a46	; 0x2a46 <GPIO_voidSetPinDir>
							  GPIO_voidSetPinDir(GPIOB,PIN5,INPUT);
    35d8:	81 e0       	ldi	r24, 0x01	; 1
    35da:	65 e0       	ldi	r22, 0x05	; 5
    35dc:	40 e0       	ldi	r20, 0x00	; 0
    35de:	0e 94 23 15 	call	0x2a46	; 0x2a46 <GPIO_voidSetPinDir>
							  GPIO_voidSetPinDir(GPIOB,PIN6,INPUT);
    35e2:	81 e0       	ldi	r24, 0x01	; 1
    35e4:	66 e0       	ldi	r22, 0x06	; 6
    35e6:	40 e0       	ldi	r20, 0x00	; 0
    35e8:	0e 94 23 15 	call	0x2a46	; 0x2a46 <GPIO_voidSetPinDir>
							  GPIO_voidSetPinDir(GPIOB,PIN7,INPUT);
    35ec:	81 e0       	ldi	r24, 0x01	; 1
    35ee:	67 e0       	ldi	r22, 0x07	; 7
    35f0:	40 e0       	ldi	r20, 0x00	; 0
    35f2:	0e 94 23 15 	call	0x2a46	; 0x2a46 <GPIO_voidSetPinDir>
    35f6:	86 c0       	rjmp	.+268    	; 0x3704 <GPIO_voidSet_HIGH_NibbleDir+0x222>
						      break;
				
				case OUTPUT : GPIO_voidSetPinDir(GPIOB,PIN4,OUTPUT);
    35f8:	81 e0       	ldi	r24, 0x01	; 1
    35fa:	64 e0       	ldi	r22, 0x04	; 4
    35fc:	41 e0       	ldi	r20, 0x01	; 1
    35fe:	0e 94 23 15 	call	0x2a46	; 0x2a46 <GPIO_voidSetPinDir>
							  GPIO_voidSetPinDir(GPIOB,PIN5,OUTPUT);
    3602:	81 e0       	ldi	r24, 0x01	; 1
    3604:	65 e0       	ldi	r22, 0x05	; 5
    3606:	41 e0       	ldi	r20, 0x01	; 1
    3608:	0e 94 23 15 	call	0x2a46	; 0x2a46 <GPIO_voidSetPinDir>
							  GPIO_voidSetPinDir(GPIOB,PIN6,OUTPUT);
    360c:	81 e0       	ldi	r24, 0x01	; 1
    360e:	66 e0       	ldi	r22, 0x06	; 6
    3610:	41 e0       	ldi	r20, 0x01	; 1
    3612:	0e 94 23 15 	call	0x2a46	; 0x2a46 <GPIO_voidSetPinDir>
							  GPIO_voidSetPinDir(GPIOB,PIN7,OUTPUT);
    3616:	81 e0       	ldi	r24, 0x01	; 1
    3618:	67 e0       	ldi	r22, 0x07	; 7
    361a:	41 e0       	ldi	r20, 0x01	; 1
    361c:	0e 94 23 15 	call	0x2a46	; 0x2a46 <GPIO_voidSetPinDir>
    3620:	71 c0       	rjmp	.+226    	; 0x3704 <GPIO_voidSet_HIGH_NibbleDir+0x222>
				default: /* return Error */ break;
			}
		break;
		
		case GPIOC :
			switch(Copy_u8Dir)
    3622:	8a 81       	ldd	r24, Y+2	; 0x02
    3624:	28 2f       	mov	r18, r24
    3626:	30 e0       	ldi	r19, 0x00	; 0
    3628:	3e 83       	std	Y+6, r19	; 0x06
    362a:	2d 83       	std	Y+5, r18	; 0x05
    362c:	8d 81       	ldd	r24, Y+5	; 0x05
    362e:	9e 81       	ldd	r25, Y+6	; 0x06
    3630:	00 97       	sbiw	r24, 0x00	; 0
    3632:	31 f0       	breq	.+12     	; 0x3640 <GPIO_voidSet_HIGH_NibbleDir+0x15e>
    3634:	2d 81       	ldd	r18, Y+5	; 0x05
    3636:	3e 81       	ldd	r19, Y+6	; 0x06
    3638:	21 30       	cpi	r18, 0x01	; 1
    363a:	31 05       	cpc	r19, r1
    363c:	b1 f0       	breq	.+44     	; 0x366a <GPIO_voidSet_HIGH_NibbleDir+0x188>
    363e:	62 c0       	rjmp	.+196    	; 0x3704 <GPIO_voidSet_HIGH_NibbleDir+0x222>
			{
				case INPUT  : GPIO_voidSetPinDir(GPIOC,PIN4,INPUT);
    3640:	82 e0       	ldi	r24, 0x02	; 2
    3642:	64 e0       	ldi	r22, 0x04	; 4
    3644:	40 e0       	ldi	r20, 0x00	; 0
    3646:	0e 94 23 15 	call	0x2a46	; 0x2a46 <GPIO_voidSetPinDir>
							  GPIO_voidSetPinDir(GPIOC,PIN5,INPUT);
    364a:	82 e0       	ldi	r24, 0x02	; 2
    364c:	65 e0       	ldi	r22, 0x05	; 5
    364e:	40 e0       	ldi	r20, 0x00	; 0
    3650:	0e 94 23 15 	call	0x2a46	; 0x2a46 <GPIO_voidSetPinDir>
							  GPIO_voidSetPinDir(GPIOC,PIN6,INPUT);
    3654:	82 e0       	ldi	r24, 0x02	; 2
    3656:	66 e0       	ldi	r22, 0x06	; 6
    3658:	40 e0       	ldi	r20, 0x00	; 0
    365a:	0e 94 23 15 	call	0x2a46	; 0x2a46 <GPIO_voidSetPinDir>
							  GPIO_voidSetPinDir(GPIOC,PIN7,INPUT);
    365e:	82 e0       	ldi	r24, 0x02	; 2
    3660:	67 e0       	ldi	r22, 0x07	; 7
    3662:	40 e0       	ldi	r20, 0x00	; 0
    3664:	0e 94 23 15 	call	0x2a46	; 0x2a46 <GPIO_voidSetPinDir>
    3668:	4d c0       	rjmp	.+154    	; 0x3704 <GPIO_voidSet_HIGH_NibbleDir+0x222>
							  break;
				
				case OUTPUT : GPIO_voidSetPinDir(GPIOC,PIN4,OUTPUT);
    366a:	82 e0       	ldi	r24, 0x02	; 2
    366c:	64 e0       	ldi	r22, 0x04	; 4
    366e:	41 e0       	ldi	r20, 0x01	; 1
    3670:	0e 94 23 15 	call	0x2a46	; 0x2a46 <GPIO_voidSetPinDir>
							  GPIO_voidSetPinDir(GPIOC,PIN5,OUTPUT);
    3674:	82 e0       	ldi	r24, 0x02	; 2
    3676:	65 e0       	ldi	r22, 0x05	; 5
    3678:	41 e0       	ldi	r20, 0x01	; 1
    367a:	0e 94 23 15 	call	0x2a46	; 0x2a46 <GPIO_voidSetPinDir>
							  GPIO_voidSetPinDir(GPIOC,PIN6,OUTPUT);
    367e:	82 e0       	ldi	r24, 0x02	; 2
    3680:	66 e0       	ldi	r22, 0x06	; 6
    3682:	41 e0       	ldi	r20, 0x01	; 1
    3684:	0e 94 23 15 	call	0x2a46	; 0x2a46 <GPIO_voidSetPinDir>
							  GPIO_voidSetPinDir(GPIOC,PIN7,OUTPUT);
    3688:	82 e0       	ldi	r24, 0x02	; 2
    368a:	67 e0       	ldi	r22, 0x07	; 7
    368c:	41 e0       	ldi	r20, 0x01	; 1
    368e:	0e 94 23 15 	call	0x2a46	; 0x2a46 <GPIO_voidSetPinDir>
    3692:	38 c0       	rjmp	.+112    	; 0x3704 <GPIO_voidSet_HIGH_NibbleDir+0x222>
				default: /* return Error */ break;
			}
		break;
		
		case GPIOD :
			switch(Copy_u8Dir)
    3694:	8a 81       	ldd	r24, Y+2	; 0x02
    3696:	28 2f       	mov	r18, r24
    3698:	30 e0       	ldi	r19, 0x00	; 0
    369a:	3c 83       	std	Y+4, r19	; 0x04
    369c:	2b 83       	std	Y+3, r18	; 0x03
    369e:	8b 81       	ldd	r24, Y+3	; 0x03
    36a0:	9c 81       	ldd	r25, Y+4	; 0x04
    36a2:	00 97       	sbiw	r24, 0x00	; 0
    36a4:	31 f0       	breq	.+12     	; 0x36b2 <GPIO_voidSet_HIGH_NibbleDir+0x1d0>
    36a6:	2b 81       	ldd	r18, Y+3	; 0x03
    36a8:	3c 81       	ldd	r19, Y+4	; 0x04
    36aa:	21 30       	cpi	r18, 0x01	; 1
    36ac:	31 05       	cpc	r19, r1
    36ae:	b1 f0       	breq	.+44     	; 0x36dc <GPIO_voidSet_HIGH_NibbleDir+0x1fa>
    36b0:	29 c0       	rjmp	.+82     	; 0x3704 <GPIO_voidSet_HIGH_NibbleDir+0x222>
			{
				case INPUT  : GPIO_voidSetPinDir(GPIOD,PIN4,INPUT);
    36b2:	83 e0       	ldi	r24, 0x03	; 3
    36b4:	64 e0       	ldi	r22, 0x04	; 4
    36b6:	40 e0       	ldi	r20, 0x00	; 0
    36b8:	0e 94 23 15 	call	0x2a46	; 0x2a46 <GPIO_voidSetPinDir>
							  GPIO_voidSetPinDir(GPIOD,PIN5,INPUT);
    36bc:	83 e0       	ldi	r24, 0x03	; 3
    36be:	65 e0       	ldi	r22, 0x05	; 5
    36c0:	40 e0       	ldi	r20, 0x00	; 0
    36c2:	0e 94 23 15 	call	0x2a46	; 0x2a46 <GPIO_voidSetPinDir>
							  GPIO_voidSetPinDir(GPIOD,PIN6,INPUT);
    36c6:	83 e0       	ldi	r24, 0x03	; 3
    36c8:	66 e0       	ldi	r22, 0x06	; 6
    36ca:	40 e0       	ldi	r20, 0x00	; 0
    36cc:	0e 94 23 15 	call	0x2a46	; 0x2a46 <GPIO_voidSetPinDir>
							  GPIO_voidSetPinDir(GPIOD,PIN7,INPUT);
    36d0:	83 e0       	ldi	r24, 0x03	; 3
    36d2:	67 e0       	ldi	r22, 0x07	; 7
    36d4:	40 e0       	ldi	r20, 0x00	; 0
    36d6:	0e 94 23 15 	call	0x2a46	; 0x2a46 <GPIO_voidSetPinDir>
    36da:	14 c0       	rjmp	.+40     	; 0x3704 <GPIO_voidSet_HIGH_NibbleDir+0x222>
							  break;
				
				case OUTPUT : GPIO_voidSetPinDir(GPIOD,PIN4,OUTPUT);
    36dc:	83 e0       	ldi	r24, 0x03	; 3
    36de:	64 e0       	ldi	r22, 0x04	; 4
    36e0:	41 e0       	ldi	r20, 0x01	; 1
    36e2:	0e 94 23 15 	call	0x2a46	; 0x2a46 <GPIO_voidSetPinDir>
							  GPIO_voidSetPinDir(GPIOD,PIN5,OUTPUT);
    36e6:	83 e0       	ldi	r24, 0x03	; 3
    36e8:	65 e0       	ldi	r22, 0x05	; 5
    36ea:	41 e0       	ldi	r20, 0x01	; 1
    36ec:	0e 94 23 15 	call	0x2a46	; 0x2a46 <GPIO_voidSetPinDir>
							  GPIO_voidSetPinDir(GPIOD,PIN6,OUTPUT);
    36f0:	83 e0       	ldi	r24, 0x03	; 3
    36f2:	66 e0       	ldi	r22, 0x06	; 6
    36f4:	41 e0       	ldi	r20, 0x01	; 1
    36f6:	0e 94 23 15 	call	0x2a46	; 0x2a46 <GPIO_voidSetPinDir>
							  GPIO_voidSetPinDir(GPIOD,PIN7,OUTPUT);
    36fa:	83 e0       	ldi	r24, 0x03	; 3
    36fc:	67 e0       	ldi	r22, 0x07	; 7
    36fe:	41 e0       	ldi	r20, 0x01	; 1
    3700:	0e 94 23 15 	call	0x2a46	; 0x2a46 <GPIO_voidSetPinDir>
			}
		break;
		default: /* return error */ break;
		
	}
}
    3704:	2c 96       	adiw	r28, 0x0c	; 12
    3706:	0f b6       	in	r0, 0x3f	; 63
    3708:	f8 94       	cli
    370a:	de bf       	out	0x3e, r29	; 62
    370c:	0f be       	out	0x3f, r0	; 63
    370e:	cd bf       	out	0x3d, r28	; 61
    3710:	cf 91       	pop	r28
    3712:	df 91       	pop	r29
    3714:	08 95       	ret

00003716 <GPIO_voidSet_LOW_NibbleVal>:

void GPIO_voidSet_LOW_NibbleVal(u8 Copy_u8portnum, u8 Copy_u8value)
{
    3716:	df 93       	push	r29
    3718:	cf 93       	push	r28
    371a:	00 d0       	rcall	.+0      	; 0x371c <GPIO_voidSet_LOW_NibbleVal+0x6>
    371c:	00 d0       	rcall	.+0      	; 0x371e <GPIO_voidSet_LOW_NibbleVal+0x8>
    371e:	0f 92       	push	r0
    3720:	cd b7       	in	r28, 0x3d	; 61
    3722:	de b7       	in	r29, 0x3e	; 62
    3724:	8a 83       	std	Y+2, r24	; 0x02
    3726:	6b 83       	std	Y+3, r22	; 0x03
	u8 temp_data = Copy_u8value & 0x0F ;
    3728:	8b 81       	ldd	r24, Y+3	; 0x03
    372a:	8f 70       	andi	r24, 0x0F	; 15
    372c:	89 83       	std	Y+1, r24	; 0x01
	switch (Copy_u8portnum)
    372e:	8a 81       	ldd	r24, Y+2	; 0x02
    3730:	28 2f       	mov	r18, r24
    3732:	30 e0       	ldi	r19, 0x00	; 0
    3734:	3d 83       	std	Y+5, r19	; 0x05
    3736:	2c 83       	std	Y+4, r18	; 0x04
    3738:	8c 81       	ldd	r24, Y+4	; 0x04
    373a:	9d 81       	ldd	r25, Y+5	; 0x05
    373c:	81 30       	cpi	r24, 0x01	; 1
    373e:	91 05       	cpc	r25, r1
    3740:	29 f1       	breq	.+74     	; 0x378c <GPIO_voidSet_LOW_NibbleVal+0x76>
    3742:	2c 81       	ldd	r18, Y+4	; 0x04
    3744:	3d 81       	ldd	r19, Y+5	; 0x05
    3746:	22 30       	cpi	r18, 0x02	; 2
    3748:	31 05       	cpc	r19, r1
    374a:	2c f4       	brge	.+10     	; 0x3756 <GPIO_voidSet_LOW_NibbleVal+0x40>
    374c:	8c 81       	ldd	r24, Y+4	; 0x04
    374e:	9d 81       	ldd	r25, Y+5	; 0x05
    3750:	00 97       	sbiw	r24, 0x00	; 0
    3752:	61 f0       	breq	.+24     	; 0x376c <GPIO_voidSet_LOW_NibbleVal+0x56>
    3754:	4a c0       	rjmp	.+148    	; 0x37ea <GPIO_voidSet_LOW_NibbleVal+0xd4>
    3756:	2c 81       	ldd	r18, Y+4	; 0x04
    3758:	3d 81       	ldd	r19, Y+5	; 0x05
    375a:	22 30       	cpi	r18, 0x02	; 2
    375c:	31 05       	cpc	r19, r1
    375e:	31 f1       	breq	.+76     	; 0x37ac <GPIO_voidSet_LOW_NibbleVal+0x96>
    3760:	8c 81       	ldd	r24, Y+4	; 0x04
    3762:	9d 81       	ldd	r25, Y+5	; 0x05
    3764:	83 30       	cpi	r24, 0x03	; 3
    3766:	91 05       	cpc	r25, r1
    3768:	89 f1       	breq	.+98     	; 0x37cc <GPIO_voidSet_LOW_NibbleVal+0xb6>
    376a:	3f c0       	rjmp	.+126    	; 0x37ea <GPIO_voidSet_LOW_NibbleVal+0xd4>
	{
	case GPIOA :	PORTA &= 0xF0 ;   
    376c:	ab e3       	ldi	r26, 0x3B	; 59
    376e:	b0 e0       	ldi	r27, 0x00	; 0
    3770:	eb e3       	ldi	r30, 0x3B	; 59
    3772:	f0 e0       	ldi	r31, 0x00	; 0
    3774:	80 81       	ld	r24, Z
    3776:	80 7f       	andi	r24, 0xF0	; 240
    3778:	8c 93       	st	X, r24
					PORTA |= temp_data;
    377a:	ab e3       	ldi	r26, 0x3B	; 59
    377c:	b0 e0       	ldi	r27, 0x00	; 0
    377e:	eb e3       	ldi	r30, 0x3B	; 59
    3780:	f0 e0       	ldi	r31, 0x00	; 0
    3782:	90 81       	ld	r25, Z
    3784:	89 81       	ldd	r24, Y+1	; 0x01
    3786:	89 2b       	or	r24, r25
    3788:	8c 93       	st	X, r24
    378a:	2f c0       	rjmp	.+94     	; 0x37ea <GPIO_voidSet_LOW_NibbleVal+0xd4>
					break;
					
	case GPIOB :	PORTB &= 0xF0 ;
    378c:	a8 e3       	ldi	r26, 0x38	; 56
    378e:	b0 e0       	ldi	r27, 0x00	; 0
    3790:	e8 e3       	ldi	r30, 0x38	; 56
    3792:	f0 e0       	ldi	r31, 0x00	; 0
    3794:	80 81       	ld	r24, Z
    3796:	80 7f       	andi	r24, 0xF0	; 240
    3798:	8c 93       	st	X, r24
					PORTB |= temp_data;
    379a:	a8 e3       	ldi	r26, 0x38	; 56
    379c:	b0 e0       	ldi	r27, 0x00	; 0
    379e:	e8 e3       	ldi	r30, 0x38	; 56
    37a0:	f0 e0       	ldi	r31, 0x00	; 0
    37a2:	90 81       	ld	r25, Z
    37a4:	89 81       	ldd	r24, Y+1	; 0x01
    37a6:	89 2b       	or	r24, r25
    37a8:	8c 93       	st	X, r24
    37aa:	1f c0       	rjmp	.+62     	; 0x37ea <GPIO_voidSet_LOW_NibbleVal+0xd4>
					break;
					
	case GPIOC :    PORTC &= 0xF0 ;
    37ac:	a5 e3       	ldi	r26, 0x35	; 53
    37ae:	b0 e0       	ldi	r27, 0x00	; 0
    37b0:	e5 e3       	ldi	r30, 0x35	; 53
    37b2:	f0 e0       	ldi	r31, 0x00	; 0
    37b4:	80 81       	ld	r24, Z
    37b6:	80 7f       	andi	r24, 0xF0	; 240
    37b8:	8c 93       	st	X, r24
					PORTC |= temp_data;
    37ba:	a5 e3       	ldi	r26, 0x35	; 53
    37bc:	b0 e0       	ldi	r27, 0x00	; 0
    37be:	e5 e3       	ldi	r30, 0x35	; 53
    37c0:	f0 e0       	ldi	r31, 0x00	; 0
    37c2:	90 81       	ld	r25, Z
    37c4:	89 81       	ldd	r24, Y+1	; 0x01
    37c6:	89 2b       	or	r24, r25
    37c8:	8c 93       	st	X, r24
    37ca:	0f c0       	rjmp	.+30     	; 0x37ea <GPIO_voidSet_LOW_NibbleVal+0xd4>
					break;
					
	case GPIOD :	PORTD &= 0xF0 ;
    37cc:	a2 e3       	ldi	r26, 0x32	; 50
    37ce:	b0 e0       	ldi	r27, 0x00	; 0
    37d0:	e2 e3       	ldi	r30, 0x32	; 50
    37d2:	f0 e0       	ldi	r31, 0x00	; 0
    37d4:	80 81       	ld	r24, Z
    37d6:	80 7f       	andi	r24, 0xF0	; 240
    37d8:	8c 93       	st	X, r24
					PORTD |= temp_data;
    37da:	a2 e3       	ldi	r26, 0x32	; 50
    37dc:	b0 e0       	ldi	r27, 0x00	; 0
    37de:	e2 e3       	ldi	r30, 0x32	; 50
    37e0:	f0 e0       	ldi	r31, 0x00	; 0
    37e2:	90 81       	ld	r25, Z
    37e4:	89 81       	ldd	r24, Y+1	; 0x01
    37e6:	89 2b       	or	r24, r25
    37e8:	8c 93       	st	X, r24
					break;
	default: /* return error */break; 
		
	}
	
}
    37ea:	0f 90       	pop	r0
    37ec:	0f 90       	pop	r0
    37ee:	0f 90       	pop	r0
    37f0:	0f 90       	pop	r0
    37f2:	0f 90       	pop	r0
    37f4:	cf 91       	pop	r28
    37f6:	df 91       	pop	r29
    37f8:	08 95       	ret

000037fa <GPIO_voidSet_HIGH_NibbleVal>:

void GPIO_voidSet_HIGH_NibbleVal(u8 Copy_u8portnum, u8 Copy_u8value)
{
    37fa:	df 93       	push	r29
    37fc:	cf 93       	push	r28
    37fe:	00 d0       	rcall	.+0      	; 0x3800 <GPIO_voidSet_HIGH_NibbleVal+0x6>
    3800:	00 d0       	rcall	.+0      	; 0x3802 <GPIO_voidSet_HIGH_NibbleVal+0x8>
    3802:	0f 92       	push	r0
    3804:	cd b7       	in	r28, 0x3d	; 61
    3806:	de b7       	in	r29, 0x3e	; 62
    3808:	8a 83       	std	Y+2, r24	; 0x02
    380a:	6b 83       	std	Y+3, r22	; 0x03
	u8 temp_data = ( Copy_u8value << 4 ) ;
    380c:	8b 81       	ldd	r24, Y+3	; 0x03
    380e:	82 95       	swap	r24
    3810:	80 7f       	andi	r24, 0xF0	; 240
    3812:	89 83       	std	Y+1, r24	; 0x01
	switch (Copy_u8portnum)
    3814:	8a 81       	ldd	r24, Y+2	; 0x02
    3816:	28 2f       	mov	r18, r24
    3818:	30 e0       	ldi	r19, 0x00	; 0
    381a:	3d 83       	std	Y+5, r19	; 0x05
    381c:	2c 83       	std	Y+4, r18	; 0x04
    381e:	8c 81       	ldd	r24, Y+4	; 0x04
    3820:	9d 81       	ldd	r25, Y+5	; 0x05
    3822:	81 30       	cpi	r24, 0x01	; 1
    3824:	91 05       	cpc	r25, r1
    3826:	29 f1       	breq	.+74     	; 0x3872 <GPIO_voidSet_HIGH_NibbleVal+0x78>
    3828:	2c 81       	ldd	r18, Y+4	; 0x04
    382a:	3d 81       	ldd	r19, Y+5	; 0x05
    382c:	22 30       	cpi	r18, 0x02	; 2
    382e:	31 05       	cpc	r19, r1
    3830:	2c f4       	brge	.+10     	; 0x383c <GPIO_voidSet_HIGH_NibbleVal+0x42>
    3832:	8c 81       	ldd	r24, Y+4	; 0x04
    3834:	9d 81       	ldd	r25, Y+5	; 0x05
    3836:	00 97       	sbiw	r24, 0x00	; 0
    3838:	61 f0       	breq	.+24     	; 0x3852 <GPIO_voidSet_HIGH_NibbleVal+0x58>
    383a:	4a c0       	rjmp	.+148    	; 0x38d0 <GPIO_voidSet_HIGH_NibbleVal+0xd6>
    383c:	2c 81       	ldd	r18, Y+4	; 0x04
    383e:	3d 81       	ldd	r19, Y+5	; 0x05
    3840:	22 30       	cpi	r18, 0x02	; 2
    3842:	31 05       	cpc	r19, r1
    3844:	31 f1       	breq	.+76     	; 0x3892 <GPIO_voidSet_HIGH_NibbleVal+0x98>
    3846:	8c 81       	ldd	r24, Y+4	; 0x04
    3848:	9d 81       	ldd	r25, Y+5	; 0x05
    384a:	83 30       	cpi	r24, 0x03	; 3
    384c:	91 05       	cpc	r25, r1
    384e:	89 f1       	breq	.+98     	; 0x38b2 <GPIO_voidSet_HIGH_NibbleVal+0xb8>
    3850:	3f c0       	rjmp	.+126    	; 0x38d0 <GPIO_voidSet_HIGH_NibbleVal+0xd6>
	{
		case GPIOA :	PORTA &= 0x0F ;
    3852:	ab e3       	ldi	r26, 0x3B	; 59
    3854:	b0 e0       	ldi	r27, 0x00	; 0
    3856:	eb e3       	ldi	r30, 0x3B	; 59
    3858:	f0 e0       	ldi	r31, 0x00	; 0
    385a:	80 81       	ld	r24, Z
    385c:	8f 70       	andi	r24, 0x0F	; 15
    385e:	8c 93       	st	X, r24
						PORTA |= temp_data;
    3860:	ab e3       	ldi	r26, 0x3B	; 59
    3862:	b0 e0       	ldi	r27, 0x00	; 0
    3864:	eb e3       	ldi	r30, 0x3B	; 59
    3866:	f0 e0       	ldi	r31, 0x00	; 0
    3868:	90 81       	ld	r25, Z
    386a:	89 81       	ldd	r24, Y+1	; 0x01
    386c:	89 2b       	or	r24, r25
    386e:	8c 93       	st	X, r24
    3870:	2f c0       	rjmp	.+94     	; 0x38d0 <GPIO_voidSet_HIGH_NibbleVal+0xd6>
						break;
		
		case GPIOB :	PORTB &= 0x0F ;
    3872:	a8 e3       	ldi	r26, 0x38	; 56
    3874:	b0 e0       	ldi	r27, 0x00	; 0
    3876:	e8 e3       	ldi	r30, 0x38	; 56
    3878:	f0 e0       	ldi	r31, 0x00	; 0
    387a:	80 81       	ld	r24, Z
    387c:	8f 70       	andi	r24, 0x0F	; 15
    387e:	8c 93       	st	X, r24
						PORTB |= temp_data;
    3880:	a8 e3       	ldi	r26, 0x38	; 56
    3882:	b0 e0       	ldi	r27, 0x00	; 0
    3884:	e8 e3       	ldi	r30, 0x38	; 56
    3886:	f0 e0       	ldi	r31, 0x00	; 0
    3888:	90 81       	ld	r25, Z
    388a:	89 81       	ldd	r24, Y+1	; 0x01
    388c:	89 2b       	or	r24, r25
    388e:	8c 93       	st	X, r24
    3890:	1f c0       	rjmp	.+62     	; 0x38d0 <GPIO_voidSet_HIGH_NibbleVal+0xd6>
						break;
		
		case GPIOC :    PORTC &= 0x0F ;
    3892:	a5 e3       	ldi	r26, 0x35	; 53
    3894:	b0 e0       	ldi	r27, 0x00	; 0
    3896:	e5 e3       	ldi	r30, 0x35	; 53
    3898:	f0 e0       	ldi	r31, 0x00	; 0
    389a:	80 81       	ld	r24, Z
    389c:	8f 70       	andi	r24, 0x0F	; 15
    389e:	8c 93       	st	X, r24
						PORTC |= temp_data;
    38a0:	a5 e3       	ldi	r26, 0x35	; 53
    38a2:	b0 e0       	ldi	r27, 0x00	; 0
    38a4:	e5 e3       	ldi	r30, 0x35	; 53
    38a6:	f0 e0       	ldi	r31, 0x00	; 0
    38a8:	90 81       	ld	r25, Z
    38aa:	89 81       	ldd	r24, Y+1	; 0x01
    38ac:	89 2b       	or	r24, r25
    38ae:	8c 93       	st	X, r24
    38b0:	0f c0       	rjmp	.+30     	; 0x38d0 <GPIO_voidSet_HIGH_NibbleVal+0xd6>
						break;
		
		case GPIOD :	PORTD &= 0x0F;
    38b2:	a2 e3       	ldi	r26, 0x32	; 50
    38b4:	b0 e0       	ldi	r27, 0x00	; 0
    38b6:	e2 e3       	ldi	r30, 0x32	; 50
    38b8:	f0 e0       	ldi	r31, 0x00	; 0
    38ba:	80 81       	ld	r24, Z
    38bc:	8f 70       	andi	r24, 0x0F	; 15
    38be:	8c 93       	st	X, r24
						PORTD |= temp_data;
    38c0:	a2 e3       	ldi	r26, 0x32	; 50
    38c2:	b0 e0       	ldi	r27, 0x00	; 0
    38c4:	e2 e3       	ldi	r30, 0x32	; 50
    38c6:	f0 e0       	ldi	r31, 0x00	; 0
    38c8:	90 81       	ld	r25, Z
    38ca:	89 81       	ldd	r24, Y+1	; 0x01
    38cc:	89 2b       	or	r24, r25
    38ce:	8c 93       	st	X, r24
						break;
		default: /* return error */break;
		
	}
	
}
    38d0:	0f 90       	pop	r0
    38d2:	0f 90       	pop	r0
    38d4:	0f 90       	pop	r0
    38d6:	0f 90       	pop	r0
    38d8:	0f 90       	pop	r0
    38da:	cf 91       	pop	r28
    38dc:	df 91       	pop	r29
    38de:	08 95       	ret

000038e0 <CLCD_voidInit>:
#include "CLCD_private.h"
#include "util/delay.h"


void CLCD_voidInit(void)
{
    38e0:	df 93       	push	r29
    38e2:	cf 93       	push	r28
    38e4:	cd b7       	in	r28, 0x3d	; 61
    38e6:	de b7       	in	r29, 0x3e	; 62
    38e8:	e8 97       	sbiw	r28, 0x38	; 56
    38ea:	0f b6       	in	r0, 0x3f	; 63
    38ec:	f8 94       	cli
    38ee:	de bf       	out	0x3e, r29	; 62
    38f0:	0f be       	out	0x3f, r0	; 63
    38f2:	cd bf       	out	0x3d, r28	; 61
	GPIO_voidSetPortDir	(	CLCD_DATA_PORT	, 	0xFF	);
    38f4:	80 e0       	ldi	r24, 0x00	; 0
    38f6:	6f ef       	ldi	r22, 0xFF	; 255
    38f8:	0e 94 ce 17 	call	0x2f9c	; 0x2f9c <GPIO_voidSetPortDir>
	GPIO_voidSetPinDir	(	CLCD_RW			,	OUTPUT	);
    38fc:	81 e0       	ldi	r24, 0x01	; 1
    38fe:	61 e0       	ldi	r22, 0x01	; 1
    3900:	41 e0       	ldi	r20, 0x01	; 1
    3902:	0e 94 23 15 	call	0x2a46	; 0x2a46 <GPIO_voidSetPinDir>
	GPIO_voidSetPinDir	(	CLCD_EN			,	OUTPUT	);
    3906:	81 e0       	ldi	r24, 0x01	; 1
    3908:	62 e0       	ldi	r22, 0x02	; 2
    390a:	41 e0       	ldi	r20, 0x01	; 1
    390c:	0e 94 23 15 	call	0x2a46	; 0x2a46 <GPIO_voidSetPinDir>
	GPIO_voidSetPinDir	(	CLCD_RS			,	OUTPUT	);
    3910:	81 e0       	ldi	r24, 0x01	; 1
    3912:	60 e0       	ldi	r22, 0x00	; 0
    3914:	41 e0       	ldi	r20, 0x01	; 1
    3916:	0e 94 23 15 	call	0x2a46	; 0x2a46 <GPIO_voidSetPinDir>
    391a:	80 e0       	ldi	r24, 0x00	; 0
    391c:	90 e0       	ldi	r25, 0x00	; 0
    391e:	a8 e4       	ldi	r26, 0x48	; 72
    3920:	b2 e4       	ldi	r27, 0x42	; 66
    3922:	8d ab       	std	Y+53, r24	; 0x35
    3924:	9e ab       	std	Y+54, r25	; 0x36
    3926:	af ab       	std	Y+55, r26	; 0x37
    3928:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    392a:	6d a9       	ldd	r22, Y+53	; 0x35
    392c:	7e a9       	ldd	r23, Y+54	; 0x36
    392e:	8f a9       	ldd	r24, Y+55	; 0x37
    3930:	98 ad       	ldd	r25, Y+56	; 0x38
    3932:	20 e0       	ldi	r18, 0x00	; 0
    3934:	30 e0       	ldi	r19, 0x00	; 0
    3936:	4a e7       	ldi	r20, 0x7A	; 122
    3938:	53 e4       	ldi	r21, 0x43	; 67
    393a:	0e 94 2b 10 	call	0x2056	; 0x2056 <__mulsf3>
    393e:	dc 01       	movw	r26, r24
    3940:	cb 01       	movw	r24, r22
    3942:	89 ab       	std	Y+49, r24	; 0x31
    3944:	9a ab       	std	Y+50, r25	; 0x32
    3946:	ab ab       	std	Y+51, r26	; 0x33
    3948:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    394a:	69 a9       	ldd	r22, Y+49	; 0x31
    394c:	7a a9       	ldd	r23, Y+50	; 0x32
    394e:	8b a9       	ldd	r24, Y+51	; 0x33
    3950:	9c a9       	ldd	r25, Y+52	; 0x34
    3952:	20 e0       	ldi	r18, 0x00	; 0
    3954:	30 e0       	ldi	r19, 0x00	; 0
    3956:	40 e8       	ldi	r20, 0x80	; 128
    3958:	5f e3       	ldi	r21, 0x3F	; 63
    395a:	0e 94 31 12 	call	0x2462	; 0x2462 <__ltsf2>
    395e:	88 23       	and	r24, r24
    3960:	2c f4       	brge	.+10     	; 0x396c <CLCD_voidInit+0x8c>
		__ticks = 1;
    3962:	81 e0       	ldi	r24, 0x01	; 1
    3964:	90 e0       	ldi	r25, 0x00	; 0
    3966:	98 ab       	std	Y+48, r25	; 0x30
    3968:	8f a7       	std	Y+47, r24	; 0x2f
    396a:	3f c0       	rjmp	.+126    	; 0x39ea <CLCD_voidInit+0x10a>
	else if (__tmp > 65535)
    396c:	69 a9       	ldd	r22, Y+49	; 0x31
    396e:	7a a9       	ldd	r23, Y+50	; 0x32
    3970:	8b a9       	ldd	r24, Y+51	; 0x33
    3972:	9c a9       	ldd	r25, Y+52	; 0x34
    3974:	20 e0       	ldi	r18, 0x00	; 0
    3976:	3f ef       	ldi	r19, 0xFF	; 255
    3978:	4f e7       	ldi	r20, 0x7F	; 127
    397a:	57 e4       	ldi	r21, 0x47	; 71
    397c:	0e 94 d1 11 	call	0x23a2	; 0x23a2 <__gtsf2>
    3980:	18 16       	cp	r1, r24
    3982:	4c f5       	brge	.+82     	; 0x39d6 <CLCD_voidInit+0xf6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3984:	6d a9       	ldd	r22, Y+53	; 0x35
    3986:	7e a9       	ldd	r23, Y+54	; 0x36
    3988:	8f a9       	ldd	r24, Y+55	; 0x37
    398a:	98 ad       	ldd	r25, Y+56	; 0x38
    398c:	20 e0       	ldi	r18, 0x00	; 0
    398e:	30 e0       	ldi	r19, 0x00	; 0
    3990:	40 e2       	ldi	r20, 0x20	; 32
    3992:	51 e4       	ldi	r21, 0x41	; 65
    3994:	0e 94 2b 10 	call	0x2056	; 0x2056 <__mulsf3>
    3998:	dc 01       	movw	r26, r24
    399a:	cb 01       	movw	r24, r22
    399c:	bc 01       	movw	r22, r24
    399e:	cd 01       	movw	r24, r26
    39a0:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    39a4:	dc 01       	movw	r26, r24
    39a6:	cb 01       	movw	r24, r22
    39a8:	98 ab       	std	Y+48, r25	; 0x30
    39aa:	8f a7       	std	Y+47, r24	; 0x2f
    39ac:	0f c0       	rjmp	.+30     	; 0x39cc <CLCD_voidInit+0xec>
    39ae:	89 e1       	ldi	r24, 0x19	; 25
    39b0:	90 e0       	ldi	r25, 0x00	; 0
    39b2:	9e a7       	std	Y+46, r25	; 0x2e
    39b4:	8d a7       	std	Y+45, r24	; 0x2d
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    39b6:	8d a5       	ldd	r24, Y+45	; 0x2d
    39b8:	9e a5       	ldd	r25, Y+46	; 0x2e
    39ba:	01 97       	sbiw	r24, 0x01	; 1
    39bc:	f1 f7       	brne	.-4      	; 0x39ba <CLCD_voidInit+0xda>
    39be:	9e a7       	std	Y+46, r25	; 0x2e
    39c0:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    39c2:	8f a5       	ldd	r24, Y+47	; 0x2f
    39c4:	98 a9       	ldd	r25, Y+48	; 0x30
    39c6:	01 97       	sbiw	r24, 0x01	; 1
    39c8:	98 ab       	std	Y+48, r25	; 0x30
    39ca:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    39cc:	8f a5       	ldd	r24, Y+47	; 0x2f
    39ce:	98 a9       	ldd	r25, Y+48	; 0x30
    39d0:	00 97       	sbiw	r24, 0x00	; 0
    39d2:	69 f7       	brne	.-38     	; 0x39ae <CLCD_voidInit+0xce>
    39d4:	14 c0       	rjmp	.+40     	; 0x39fe <CLCD_voidInit+0x11e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    39d6:	69 a9       	ldd	r22, Y+49	; 0x31
    39d8:	7a a9       	ldd	r23, Y+50	; 0x32
    39da:	8b a9       	ldd	r24, Y+51	; 0x33
    39dc:	9c a9       	ldd	r25, Y+52	; 0x34
    39de:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    39e2:	dc 01       	movw	r26, r24
    39e4:	cb 01       	movw	r24, r22
    39e6:	98 ab       	std	Y+48, r25	; 0x30
    39e8:	8f a7       	std	Y+47, r24	; 0x2f
    39ea:	8f a5       	ldd	r24, Y+47	; 0x2f
    39ec:	98 a9       	ldd	r25, Y+48	; 0x30
    39ee:	9c a7       	std	Y+44, r25	; 0x2c
    39f0:	8b a7       	std	Y+43, r24	; 0x2b
    39f2:	8b a5       	ldd	r24, Y+43	; 0x2b
    39f4:	9c a5       	ldd	r25, Y+44	; 0x2c
    39f6:	01 97       	sbiw	r24, 0x01	; 1
    39f8:	f1 f7       	brne	.-4      	; 0x39f6 <CLCD_voidInit+0x116>
    39fa:	9c a7       	std	Y+44, r25	; 0x2c
    39fc:	8b a7       	std	Y+43, r24	; 0x2b
	_delay_ms(50);
	CLCD_voidSendCommand	( CLCD_EIGHT_BIT_TWO_LINE_5_8 );
    39fe:	8c e3       	ldi	r24, 0x3C	; 60
    3a00:	0e 94 6a 1e 	call	0x3cd4	; 0x3cd4 <CLCD_voidSendCommand>
    3a04:	80 e0       	ldi	r24, 0x00	; 0
    3a06:	90 e0       	ldi	r25, 0x00	; 0
    3a08:	a0 e8       	ldi	r26, 0x80	; 128
    3a0a:	bf e3       	ldi	r27, 0x3F	; 63
    3a0c:	8f a3       	std	Y+39, r24	; 0x27
    3a0e:	98 a7       	std	Y+40, r25	; 0x28
    3a10:	a9 a7       	std	Y+41, r26	; 0x29
    3a12:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3a14:	6f a1       	ldd	r22, Y+39	; 0x27
    3a16:	78 a5       	ldd	r23, Y+40	; 0x28
    3a18:	89 a5       	ldd	r24, Y+41	; 0x29
    3a1a:	9a a5       	ldd	r25, Y+42	; 0x2a
    3a1c:	20 e0       	ldi	r18, 0x00	; 0
    3a1e:	30 e0       	ldi	r19, 0x00	; 0
    3a20:	4a e7       	ldi	r20, 0x7A	; 122
    3a22:	53 e4       	ldi	r21, 0x43	; 67
    3a24:	0e 94 2b 10 	call	0x2056	; 0x2056 <__mulsf3>
    3a28:	dc 01       	movw	r26, r24
    3a2a:	cb 01       	movw	r24, r22
    3a2c:	8b a3       	std	Y+35, r24	; 0x23
    3a2e:	9c a3       	std	Y+36, r25	; 0x24
    3a30:	ad a3       	std	Y+37, r26	; 0x25
    3a32:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    3a34:	6b a1       	ldd	r22, Y+35	; 0x23
    3a36:	7c a1       	ldd	r23, Y+36	; 0x24
    3a38:	8d a1       	ldd	r24, Y+37	; 0x25
    3a3a:	9e a1       	ldd	r25, Y+38	; 0x26
    3a3c:	20 e0       	ldi	r18, 0x00	; 0
    3a3e:	30 e0       	ldi	r19, 0x00	; 0
    3a40:	40 e8       	ldi	r20, 0x80	; 128
    3a42:	5f e3       	ldi	r21, 0x3F	; 63
    3a44:	0e 94 31 12 	call	0x2462	; 0x2462 <__ltsf2>
    3a48:	88 23       	and	r24, r24
    3a4a:	2c f4       	brge	.+10     	; 0x3a56 <CLCD_voidInit+0x176>
		__ticks = 1;
    3a4c:	81 e0       	ldi	r24, 0x01	; 1
    3a4e:	90 e0       	ldi	r25, 0x00	; 0
    3a50:	9a a3       	std	Y+34, r25	; 0x22
    3a52:	89 a3       	std	Y+33, r24	; 0x21
    3a54:	3f c0       	rjmp	.+126    	; 0x3ad4 <CLCD_voidInit+0x1f4>
	else if (__tmp > 65535)
    3a56:	6b a1       	ldd	r22, Y+35	; 0x23
    3a58:	7c a1       	ldd	r23, Y+36	; 0x24
    3a5a:	8d a1       	ldd	r24, Y+37	; 0x25
    3a5c:	9e a1       	ldd	r25, Y+38	; 0x26
    3a5e:	20 e0       	ldi	r18, 0x00	; 0
    3a60:	3f ef       	ldi	r19, 0xFF	; 255
    3a62:	4f e7       	ldi	r20, 0x7F	; 127
    3a64:	57 e4       	ldi	r21, 0x47	; 71
    3a66:	0e 94 d1 11 	call	0x23a2	; 0x23a2 <__gtsf2>
    3a6a:	18 16       	cp	r1, r24
    3a6c:	4c f5       	brge	.+82     	; 0x3ac0 <CLCD_voidInit+0x1e0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3a6e:	6f a1       	ldd	r22, Y+39	; 0x27
    3a70:	78 a5       	ldd	r23, Y+40	; 0x28
    3a72:	89 a5       	ldd	r24, Y+41	; 0x29
    3a74:	9a a5       	ldd	r25, Y+42	; 0x2a
    3a76:	20 e0       	ldi	r18, 0x00	; 0
    3a78:	30 e0       	ldi	r19, 0x00	; 0
    3a7a:	40 e2       	ldi	r20, 0x20	; 32
    3a7c:	51 e4       	ldi	r21, 0x41	; 65
    3a7e:	0e 94 2b 10 	call	0x2056	; 0x2056 <__mulsf3>
    3a82:	dc 01       	movw	r26, r24
    3a84:	cb 01       	movw	r24, r22
    3a86:	bc 01       	movw	r22, r24
    3a88:	cd 01       	movw	r24, r26
    3a8a:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    3a8e:	dc 01       	movw	r26, r24
    3a90:	cb 01       	movw	r24, r22
    3a92:	9a a3       	std	Y+34, r25	; 0x22
    3a94:	89 a3       	std	Y+33, r24	; 0x21
    3a96:	0f c0       	rjmp	.+30     	; 0x3ab6 <CLCD_voidInit+0x1d6>
    3a98:	89 e1       	ldi	r24, 0x19	; 25
    3a9a:	90 e0       	ldi	r25, 0x00	; 0
    3a9c:	98 a3       	std	Y+32, r25	; 0x20
    3a9e:	8f 8f       	std	Y+31, r24	; 0x1f
    3aa0:	8f 8d       	ldd	r24, Y+31	; 0x1f
    3aa2:	98 a1       	ldd	r25, Y+32	; 0x20
    3aa4:	01 97       	sbiw	r24, 0x01	; 1
    3aa6:	f1 f7       	brne	.-4      	; 0x3aa4 <CLCD_voidInit+0x1c4>
    3aa8:	98 a3       	std	Y+32, r25	; 0x20
    3aaa:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3aac:	89 a1       	ldd	r24, Y+33	; 0x21
    3aae:	9a a1       	ldd	r25, Y+34	; 0x22
    3ab0:	01 97       	sbiw	r24, 0x01	; 1
    3ab2:	9a a3       	std	Y+34, r25	; 0x22
    3ab4:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3ab6:	89 a1       	ldd	r24, Y+33	; 0x21
    3ab8:	9a a1       	ldd	r25, Y+34	; 0x22
    3aba:	00 97       	sbiw	r24, 0x00	; 0
    3abc:	69 f7       	brne	.-38     	; 0x3a98 <CLCD_voidInit+0x1b8>
    3abe:	14 c0       	rjmp	.+40     	; 0x3ae8 <CLCD_voidInit+0x208>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3ac0:	6b a1       	ldd	r22, Y+35	; 0x23
    3ac2:	7c a1       	ldd	r23, Y+36	; 0x24
    3ac4:	8d a1       	ldd	r24, Y+37	; 0x25
    3ac6:	9e a1       	ldd	r25, Y+38	; 0x26
    3ac8:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    3acc:	dc 01       	movw	r26, r24
    3ace:	cb 01       	movw	r24, r22
    3ad0:	9a a3       	std	Y+34, r25	; 0x22
    3ad2:	89 a3       	std	Y+33, r24	; 0x21
    3ad4:	89 a1       	ldd	r24, Y+33	; 0x21
    3ad6:	9a a1       	ldd	r25, Y+34	; 0x22
    3ad8:	9e 8f       	std	Y+30, r25	; 0x1e
    3ada:	8d 8f       	std	Y+29, r24	; 0x1d
    3adc:	8d 8d       	ldd	r24, Y+29	; 0x1d
    3ade:	9e 8d       	ldd	r25, Y+30	; 0x1e
    3ae0:	01 97       	sbiw	r24, 0x01	; 1
    3ae2:	f1 f7       	brne	.-4      	; 0x3ae0 <CLCD_voidInit+0x200>
    3ae4:	9e 8f       	std	Y+30, r25	; 0x1e
    3ae6:	8d 8f       	std	Y+29, r24	; 0x1d
	_delay_ms(1);
	CLCD_voidSendCommand	( CLCD_DISPLAY_ON_CURSOR_ON   );
    3ae8:	8f e0       	ldi	r24, 0x0F	; 15
    3aea:	0e 94 6a 1e 	call	0x3cd4	; 0x3cd4 <CLCD_voidSendCommand>
    3aee:	80 e0       	ldi	r24, 0x00	; 0
    3af0:	90 e0       	ldi	r25, 0x00	; 0
    3af2:	a0 e8       	ldi	r26, 0x80	; 128
    3af4:	bf e3       	ldi	r27, 0x3F	; 63
    3af6:	89 8f       	std	Y+25, r24	; 0x19
    3af8:	9a 8f       	std	Y+26, r25	; 0x1a
    3afa:	ab 8f       	std	Y+27, r26	; 0x1b
    3afc:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3afe:	69 8d       	ldd	r22, Y+25	; 0x19
    3b00:	7a 8d       	ldd	r23, Y+26	; 0x1a
    3b02:	8b 8d       	ldd	r24, Y+27	; 0x1b
    3b04:	9c 8d       	ldd	r25, Y+28	; 0x1c
    3b06:	20 e0       	ldi	r18, 0x00	; 0
    3b08:	30 e0       	ldi	r19, 0x00	; 0
    3b0a:	4a e7       	ldi	r20, 0x7A	; 122
    3b0c:	53 e4       	ldi	r21, 0x43	; 67
    3b0e:	0e 94 2b 10 	call	0x2056	; 0x2056 <__mulsf3>
    3b12:	dc 01       	movw	r26, r24
    3b14:	cb 01       	movw	r24, r22
    3b16:	8d 8b       	std	Y+21, r24	; 0x15
    3b18:	9e 8b       	std	Y+22, r25	; 0x16
    3b1a:	af 8b       	std	Y+23, r26	; 0x17
    3b1c:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    3b1e:	6d 89       	ldd	r22, Y+21	; 0x15
    3b20:	7e 89       	ldd	r23, Y+22	; 0x16
    3b22:	8f 89       	ldd	r24, Y+23	; 0x17
    3b24:	98 8d       	ldd	r25, Y+24	; 0x18
    3b26:	20 e0       	ldi	r18, 0x00	; 0
    3b28:	30 e0       	ldi	r19, 0x00	; 0
    3b2a:	40 e8       	ldi	r20, 0x80	; 128
    3b2c:	5f e3       	ldi	r21, 0x3F	; 63
    3b2e:	0e 94 31 12 	call	0x2462	; 0x2462 <__ltsf2>
    3b32:	88 23       	and	r24, r24
    3b34:	2c f4       	brge	.+10     	; 0x3b40 <CLCD_voidInit+0x260>
		__ticks = 1;
    3b36:	81 e0       	ldi	r24, 0x01	; 1
    3b38:	90 e0       	ldi	r25, 0x00	; 0
    3b3a:	9c 8b       	std	Y+20, r25	; 0x14
    3b3c:	8b 8b       	std	Y+19, r24	; 0x13
    3b3e:	3f c0       	rjmp	.+126    	; 0x3bbe <CLCD_voidInit+0x2de>
	else if (__tmp > 65535)
    3b40:	6d 89       	ldd	r22, Y+21	; 0x15
    3b42:	7e 89       	ldd	r23, Y+22	; 0x16
    3b44:	8f 89       	ldd	r24, Y+23	; 0x17
    3b46:	98 8d       	ldd	r25, Y+24	; 0x18
    3b48:	20 e0       	ldi	r18, 0x00	; 0
    3b4a:	3f ef       	ldi	r19, 0xFF	; 255
    3b4c:	4f e7       	ldi	r20, 0x7F	; 127
    3b4e:	57 e4       	ldi	r21, 0x47	; 71
    3b50:	0e 94 d1 11 	call	0x23a2	; 0x23a2 <__gtsf2>
    3b54:	18 16       	cp	r1, r24
    3b56:	4c f5       	brge	.+82     	; 0x3baa <CLCD_voidInit+0x2ca>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3b58:	69 8d       	ldd	r22, Y+25	; 0x19
    3b5a:	7a 8d       	ldd	r23, Y+26	; 0x1a
    3b5c:	8b 8d       	ldd	r24, Y+27	; 0x1b
    3b5e:	9c 8d       	ldd	r25, Y+28	; 0x1c
    3b60:	20 e0       	ldi	r18, 0x00	; 0
    3b62:	30 e0       	ldi	r19, 0x00	; 0
    3b64:	40 e2       	ldi	r20, 0x20	; 32
    3b66:	51 e4       	ldi	r21, 0x41	; 65
    3b68:	0e 94 2b 10 	call	0x2056	; 0x2056 <__mulsf3>
    3b6c:	dc 01       	movw	r26, r24
    3b6e:	cb 01       	movw	r24, r22
    3b70:	bc 01       	movw	r22, r24
    3b72:	cd 01       	movw	r24, r26
    3b74:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    3b78:	dc 01       	movw	r26, r24
    3b7a:	cb 01       	movw	r24, r22
    3b7c:	9c 8b       	std	Y+20, r25	; 0x14
    3b7e:	8b 8b       	std	Y+19, r24	; 0x13
    3b80:	0f c0       	rjmp	.+30     	; 0x3ba0 <CLCD_voidInit+0x2c0>
    3b82:	89 e1       	ldi	r24, 0x19	; 25
    3b84:	90 e0       	ldi	r25, 0x00	; 0
    3b86:	9a 8b       	std	Y+18, r25	; 0x12
    3b88:	89 8b       	std	Y+17, r24	; 0x11
    3b8a:	89 89       	ldd	r24, Y+17	; 0x11
    3b8c:	9a 89       	ldd	r25, Y+18	; 0x12
    3b8e:	01 97       	sbiw	r24, 0x01	; 1
    3b90:	f1 f7       	brne	.-4      	; 0x3b8e <CLCD_voidInit+0x2ae>
    3b92:	9a 8b       	std	Y+18, r25	; 0x12
    3b94:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3b96:	8b 89       	ldd	r24, Y+19	; 0x13
    3b98:	9c 89       	ldd	r25, Y+20	; 0x14
    3b9a:	01 97       	sbiw	r24, 0x01	; 1
    3b9c:	9c 8b       	std	Y+20, r25	; 0x14
    3b9e:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3ba0:	8b 89       	ldd	r24, Y+19	; 0x13
    3ba2:	9c 89       	ldd	r25, Y+20	; 0x14
    3ba4:	00 97       	sbiw	r24, 0x00	; 0
    3ba6:	69 f7       	brne	.-38     	; 0x3b82 <CLCD_voidInit+0x2a2>
    3ba8:	14 c0       	rjmp	.+40     	; 0x3bd2 <CLCD_voidInit+0x2f2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3baa:	6d 89       	ldd	r22, Y+21	; 0x15
    3bac:	7e 89       	ldd	r23, Y+22	; 0x16
    3bae:	8f 89       	ldd	r24, Y+23	; 0x17
    3bb0:	98 8d       	ldd	r25, Y+24	; 0x18
    3bb2:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    3bb6:	dc 01       	movw	r26, r24
    3bb8:	cb 01       	movw	r24, r22
    3bba:	9c 8b       	std	Y+20, r25	; 0x14
    3bbc:	8b 8b       	std	Y+19, r24	; 0x13
    3bbe:	8b 89       	ldd	r24, Y+19	; 0x13
    3bc0:	9c 89       	ldd	r25, Y+20	; 0x14
    3bc2:	98 8b       	std	Y+16, r25	; 0x10
    3bc4:	8f 87       	std	Y+15, r24	; 0x0f
    3bc6:	8f 85       	ldd	r24, Y+15	; 0x0f
    3bc8:	98 89       	ldd	r25, Y+16	; 0x10
    3bca:	01 97       	sbiw	r24, 0x01	; 1
    3bcc:	f1 f7       	brne	.-4      	; 0x3bca <CLCD_voidInit+0x2ea>
    3bce:	98 8b       	std	Y+16, r25	; 0x10
    3bd0:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(1);
	CLCD_voidSendCommand	( CLCD_DISPLAY_CLEAR          );
    3bd2:	81 e0       	ldi	r24, 0x01	; 1
    3bd4:	0e 94 6a 1e 	call	0x3cd4	; 0x3cd4 <CLCD_voidSendCommand>
    3bd8:	80 e0       	ldi	r24, 0x00	; 0
    3bda:	90 e0       	ldi	r25, 0x00	; 0
    3bdc:	a0 e0       	ldi	r26, 0x00	; 0
    3bde:	b0 e4       	ldi	r27, 0x40	; 64
    3be0:	8b 87       	std	Y+11, r24	; 0x0b
    3be2:	9c 87       	std	Y+12, r25	; 0x0c
    3be4:	ad 87       	std	Y+13, r26	; 0x0d
    3be6:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3be8:	6b 85       	ldd	r22, Y+11	; 0x0b
    3bea:	7c 85       	ldd	r23, Y+12	; 0x0c
    3bec:	8d 85       	ldd	r24, Y+13	; 0x0d
    3bee:	9e 85       	ldd	r25, Y+14	; 0x0e
    3bf0:	20 e0       	ldi	r18, 0x00	; 0
    3bf2:	30 e0       	ldi	r19, 0x00	; 0
    3bf4:	4a e7       	ldi	r20, 0x7A	; 122
    3bf6:	53 e4       	ldi	r21, 0x43	; 67
    3bf8:	0e 94 2b 10 	call	0x2056	; 0x2056 <__mulsf3>
    3bfc:	dc 01       	movw	r26, r24
    3bfe:	cb 01       	movw	r24, r22
    3c00:	8f 83       	std	Y+7, r24	; 0x07
    3c02:	98 87       	std	Y+8, r25	; 0x08
    3c04:	a9 87       	std	Y+9, r26	; 0x09
    3c06:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    3c08:	6f 81       	ldd	r22, Y+7	; 0x07
    3c0a:	78 85       	ldd	r23, Y+8	; 0x08
    3c0c:	89 85       	ldd	r24, Y+9	; 0x09
    3c0e:	9a 85       	ldd	r25, Y+10	; 0x0a
    3c10:	20 e0       	ldi	r18, 0x00	; 0
    3c12:	30 e0       	ldi	r19, 0x00	; 0
    3c14:	40 e8       	ldi	r20, 0x80	; 128
    3c16:	5f e3       	ldi	r21, 0x3F	; 63
    3c18:	0e 94 31 12 	call	0x2462	; 0x2462 <__ltsf2>
    3c1c:	88 23       	and	r24, r24
    3c1e:	2c f4       	brge	.+10     	; 0x3c2a <CLCD_voidInit+0x34a>
		__ticks = 1;
    3c20:	81 e0       	ldi	r24, 0x01	; 1
    3c22:	90 e0       	ldi	r25, 0x00	; 0
    3c24:	9e 83       	std	Y+6, r25	; 0x06
    3c26:	8d 83       	std	Y+5, r24	; 0x05
    3c28:	3f c0       	rjmp	.+126    	; 0x3ca8 <CLCD_voidInit+0x3c8>
	else if (__tmp > 65535)
    3c2a:	6f 81       	ldd	r22, Y+7	; 0x07
    3c2c:	78 85       	ldd	r23, Y+8	; 0x08
    3c2e:	89 85       	ldd	r24, Y+9	; 0x09
    3c30:	9a 85       	ldd	r25, Y+10	; 0x0a
    3c32:	20 e0       	ldi	r18, 0x00	; 0
    3c34:	3f ef       	ldi	r19, 0xFF	; 255
    3c36:	4f e7       	ldi	r20, 0x7F	; 127
    3c38:	57 e4       	ldi	r21, 0x47	; 71
    3c3a:	0e 94 d1 11 	call	0x23a2	; 0x23a2 <__gtsf2>
    3c3e:	18 16       	cp	r1, r24
    3c40:	4c f5       	brge	.+82     	; 0x3c94 <CLCD_voidInit+0x3b4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3c42:	6b 85       	ldd	r22, Y+11	; 0x0b
    3c44:	7c 85       	ldd	r23, Y+12	; 0x0c
    3c46:	8d 85       	ldd	r24, Y+13	; 0x0d
    3c48:	9e 85       	ldd	r25, Y+14	; 0x0e
    3c4a:	20 e0       	ldi	r18, 0x00	; 0
    3c4c:	30 e0       	ldi	r19, 0x00	; 0
    3c4e:	40 e2       	ldi	r20, 0x20	; 32
    3c50:	51 e4       	ldi	r21, 0x41	; 65
    3c52:	0e 94 2b 10 	call	0x2056	; 0x2056 <__mulsf3>
    3c56:	dc 01       	movw	r26, r24
    3c58:	cb 01       	movw	r24, r22
    3c5a:	bc 01       	movw	r22, r24
    3c5c:	cd 01       	movw	r24, r26
    3c5e:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    3c62:	dc 01       	movw	r26, r24
    3c64:	cb 01       	movw	r24, r22
    3c66:	9e 83       	std	Y+6, r25	; 0x06
    3c68:	8d 83       	std	Y+5, r24	; 0x05
    3c6a:	0f c0       	rjmp	.+30     	; 0x3c8a <CLCD_voidInit+0x3aa>
    3c6c:	89 e1       	ldi	r24, 0x19	; 25
    3c6e:	90 e0       	ldi	r25, 0x00	; 0
    3c70:	9c 83       	std	Y+4, r25	; 0x04
    3c72:	8b 83       	std	Y+3, r24	; 0x03
    3c74:	8b 81       	ldd	r24, Y+3	; 0x03
    3c76:	9c 81       	ldd	r25, Y+4	; 0x04
    3c78:	01 97       	sbiw	r24, 0x01	; 1
    3c7a:	f1 f7       	brne	.-4      	; 0x3c78 <CLCD_voidInit+0x398>
    3c7c:	9c 83       	std	Y+4, r25	; 0x04
    3c7e:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3c80:	8d 81       	ldd	r24, Y+5	; 0x05
    3c82:	9e 81       	ldd	r25, Y+6	; 0x06
    3c84:	01 97       	sbiw	r24, 0x01	; 1
    3c86:	9e 83       	std	Y+6, r25	; 0x06
    3c88:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3c8a:	8d 81       	ldd	r24, Y+5	; 0x05
    3c8c:	9e 81       	ldd	r25, Y+6	; 0x06
    3c8e:	00 97       	sbiw	r24, 0x00	; 0
    3c90:	69 f7       	brne	.-38     	; 0x3c6c <CLCD_voidInit+0x38c>
    3c92:	14 c0       	rjmp	.+40     	; 0x3cbc <CLCD_voidInit+0x3dc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3c94:	6f 81       	ldd	r22, Y+7	; 0x07
    3c96:	78 85       	ldd	r23, Y+8	; 0x08
    3c98:	89 85       	ldd	r24, Y+9	; 0x09
    3c9a:	9a 85       	ldd	r25, Y+10	; 0x0a
    3c9c:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    3ca0:	dc 01       	movw	r26, r24
    3ca2:	cb 01       	movw	r24, r22
    3ca4:	9e 83       	std	Y+6, r25	; 0x06
    3ca6:	8d 83       	std	Y+5, r24	; 0x05
    3ca8:	8d 81       	ldd	r24, Y+5	; 0x05
    3caa:	9e 81       	ldd	r25, Y+6	; 0x06
    3cac:	9a 83       	std	Y+2, r25	; 0x02
    3cae:	89 83       	std	Y+1, r24	; 0x01
    3cb0:	89 81       	ldd	r24, Y+1	; 0x01
    3cb2:	9a 81       	ldd	r25, Y+2	; 0x02
    3cb4:	01 97       	sbiw	r24, 0x01	; 1
    3cb6:	f1 f7       	brne	.-4      	; 0x3cb4 <CLCD_voidInit+0x3d4>
    3cb8:	9a 83       	std	Y+2, r25	; 0x02
    3cba:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(2);
	CLCD_voidSendCommand	( CLCD_SHIFT_DISABEL          );
    3cbc:	86 e0       	ldi	r24, 0x06	; 6
    3cbe:	0e 94 6a 1e 	call	0x3cd4	; 0x3cd4 <CLCD_voidSendCommand>

}
    3cc2:	e8 96       	adiw	r28, 0x38	; 56
    3cc4:	0f b6       	in	r0, 0x3f	; 63
    3cc6:	f8 94       	cli
    3cc8:	de bf       	out	0x3e, r29	; 62
    3cca:	0f be       	out	0x3f, r0	; 63
    3ccc:	cd bf       	out	0x3d, r28	; 61
    3cce:	cf 91       	pop	r28
    3cd0:	df 91       	pop	r29
    3cd2:	08 95       	ret

00003cd4 <CLCD_voidSendCommand>:

void CLCD_voidSendCommand	( u8 Copy_u8Command		)
{
    3cd4:	df 93       	push	r29
    3cd6:	cf 93       	push	r28
    3cd8:	0f 92       	push	r0
    3cda:	cd b7       	in	r28, 0x3d	; 61
    3cdc:	de b7       	in	r29, 0x3e	; 62
    3cde:	89 83       	std	Y+1, r24	; 0x01
	/*
	 * Send Command --> Write '0' to the RS Pin of LCD
	 * Writing to the LCD --> Write '0' to  RW Pin of the LCD
	 *   */
	GPIO_voidSetPortVal	(	CLCD_DATA_PORT	, Copy_u8Command	);
    3ce0:	80 e0       	ldi	r24, 0x00	; 0
    3ce2:	69 81       	ldd	r22, Y+1	; 0x01
    3ce4:	0e 94 0f 18 	call	0x301e	; 0x301e <GPIO_voidSetPortVal>
	GPIO_voidSetPinVal	(	CLCD_RS			, LOW				);
    3ce8:	81 e0       	ldi	r24, 0x01	; 1
    3cea:	60 e0       	ldi	r22, 0x00	; 0
    3cec:	40 e0       	ldi	r20, 0x00	; 0
    3cee:	0e 94 3a 16 	call	0x2c74	; 0x2c74 <GPIO_voidSetPinVal>
	GPIO_voidSetPinVal	(	CLCD_RW			, LOW				);
    3cf2:	81 e0       	ldi	r24, 0x01	; 1
    3cf4:	61 e0       	ldi	r22, 0x01	; 1
    3cf6:	40 e0       	ldi	r20, 0x00	; 0
    3cf8:	0e 94 3a 16 	call	0x2c74	; 0x2c74 <GPIO_voidSetPinVal>

	/*Send Trigger to EN Pin*/
	CLCD_voidSendEnableTrigger();
    3cfc:	0e 94 64 25 	call	0x4ac8	; 0x4ac8 <CLCD_voidSendEnableTrigger>
}
    3d00:	0f 90       	pop	r0
    3d02:	cf 91       	pop	r28
    3d04:	df 91       	pop	r29
    3d06:	08 95       	ret

00003d08 <CLCD_voidSendCharacter>:
void CLCD_voidSendCharacter	( u8 Copy_u8Char		)
{
    3d08:	df 93       	push	r29
    3d0a:	cf 93       	push	r28
    3d0c:	0f 92       	push	r0
    3d0e:	cd b7       	in	r28, 0x3d	; 61
    3d10:	de b7       	in	r29, 0x3e	; 62
    3d12:	89 83       	std	Y+1, r24	; 0x01
	/*
	 * Send Data --> Write '1' to the RS Pin of LCD
	 * Writing to the LCD --> Write '0' to  RW Pin of the LCD
	 *  */
	GPIO_voidSetPortVal ( 	CLCD_DATA_PORT	, Copy_u8Char	);
    3d14:	80 e0       	ldi	r24, 0x00	; 0
    3d16:	69 81       	ldd	r22, Y+1	; 0x01
    3d18:	0e 94 0f 18 	call	0x301e	; 0x301e <GPIO_voidSetPortVal>
	GPIO_voidSetPinVal 	( 	CLCD_RS       	, HIGH			);
    3d1c:	81 e0       	ldi	r24, 0x01	; 1
    3d1e:	60 e0       	ldi	r22, 0x00	; 0
    3d20:	41 e0       	ldi	r20, 0x01	; 1
    3d22:	0e 94 3a 16 	call	0x2c74	; 0x2c74 <GPIO_voidSetPinVal>
	GPIO_voidSetPinVal 	( 	CLCD_RW			, LOW			);
    3d26:	81 e0       	ldi	r24, 0x01	; 1
    3d28:	61 e0       	ldi	r22, 0x01	; 1
    3d2a:	40 e0       	ldi	r20, 0x00	; 0
    3d2c:	0e 94 3a 16 	call	0x2c74	; 0x2c74 <GPIO_voidSetPinVal>
	/*Send Trigger to EN Pin*/
	CLCD_voidSendEnableTrigger();
    3d30:	0e 94 64 25 	call	0x4ac8	; 0x4ac8 <CLCD_voidSendEnableTrigger>
}
    3d34:	0f 90       	pop	r0
    3d36:	cf 91       	pop	r28
    3d38:	df 91       	pop	r29
    3d3a:	08 95       	ret

00003d3c <CLCD_voidSendString>:
void CLCD_voidSendString	( u8 * Copy_ptrString	)
{
    3d3c:	df 93       	push	r29
    3d3e:	cf 93       	push	r28
    3d40:	00 d0       	rcall	.+0      	; 0x3d42 <CLCD_voidSendString+0x6>
    3d42:	0f 92       	push	r0
    3d44:	cd b7       	in	r28, 0x3d	; 61
    3d46:	de b7       	in	r29, 0x3e	; 62
    3d48:	9b 83       	std	Y+3, r25	; 0x03
    3d4a:	8a 83       	std	Y+2, r24	; 0x02
	u8 LOC_u8CharCounter = 0;
    3d4c:	19 82       	std	Y+1, r1	; 0x01
    3d4e:	0f c0       	rjmp	.+30     	; 0x3d6e <CLCD_voidSendString+0x32>
	while( Copy_ptrString[LOC_u8CharCounter] != '\0')
	{
		CLCD_voidSendCharacter(Copy_ptrString[LOC_u8CharCounter++]);
    3d50:	89 81       	ldd	r24, Y+1	; 0x01
    3d52:	28 2f       	mov	r18, r24
    3d54:	30 e0       	ldi	r19, 0x00	; 0
    3d56:	8a 81       	ldd	r24, Y+2	; 0x02
    3d58:	9b 81       	ldd	r25, Y+3	; 0x03
    3d5a:	fc 01       	movw	r30, r24
    3d5c:	e2 0f       	add	r30, r18
    3d5e:	f3 1f       	adc	r31, r19
    3d60:	90 81       	ld	r25, Z
    3d62:	89 81       	ldd	r24, Y+1	; 0x01
    3d64:	8f 5f       	subi	r24, 0xFF	; 255
    3d66:	89 83       	std	Y+1, r24	; 0x01
    3d68:	89 2f       	mov	r24, r25
    3d6a:	0e 94 84 1e 	call	0x3d08	; 0x3d08 <CLCD_voidSendCharacter>
	CLCD_voidSendEnableTrigger();
}
void CLCD_voidSendString	( u8 * Copy_ptrString	)
{
	u8 LOC_u8CharCounter = 0;
	while( Copy_ptrString[LOC_u8CharCounter] != '\0')
    3d6e:	89 81       	ldd	r24, Y+1	; 0x01
    3d70:	28 2f       	mov	r18, r24
    3d72:	30 e0       	ldi	r19, 0x00	; 0
    3d74:	8a 81       	ldd	r24, Y+2	; 0x02
    3d76:	9b 81       	ldd	r25, Y+3	; 0x03
    3d78:	fc 01       	movw	r30, r24
    3d7a:	e2 0f       	add	r30, r18
    3d7c:	f3 1f       	adc	r31, r19
    3d7e:	80 81       	ld	r24, Z
    3d80:	88 23       	and	r24, r24
    3d82:	31 f7       	brne	.-52     	; 0x3d50 <CLCD_voidSendString+0x14>
	{
		CLCD_voidSendCharacter(Copy_ptrString[LOC_u8CharCounter++]);
	}
}
    3d84:	0f 90       	pop	r0
    3d86:	0f 90       	pop	r0
    3d88:	0f 90       	pop	r0
    3d8a:	cf 91       	pop	r28
    3d8c:	df 91       	pop	r29
    3d8e:	08 95       	ret

00003d90 <CLCD_voidSendNumber>:
void CLCD_voidSendNumber	( u64 Copy_u64Number	)
{
    3d90:	af 92       	push	r10
    3d92:	bf 92       	push	r11
    3d94:	cf 92       	push	r12
    3d96:	df 92       	push	r13
    3d98:	ef 92       	push	r14
    3d9a:	ff 92       	push	r15
    3d9c:	0f 93       	push	r16
    3d9e:	1f 93       	push	r17
    3da0:	df 93       	push	r29
    3da2:	cf 93       	push	r28
    3da4:	cd b7       	in	r28, 0x3d	; 61
    3da6:	de b7       	in	r29, 0x3e	; 62
    3da8:	c6 56       	subi	r28, 0x66	; 102
    3daa:	d0 40       	sbci	r29, 0x00	; 0
    3dac:	0f b6       	in	r0, 0x3f	; 63
    3dae:	f8 94       	cli
    3db0:	de bf       	out	0x3e, r29	; 62
    3db2:	0f be       	out	0x3f, r0	; 63
    3db4:	cd bf       	out	0x3d, r28	; 61
    3db6:	29 87       	std	Y+9, r18	; 0x09
    3db8:	3a 87       	std	Y+10, r19	; 0x0a
    3dba:	4b 87       	std	Y+11, r20	; 0x0b
    3dbc:	5c 87       	std	Y+12, r21	; 0x0c
    3dbe:	6d 87       	std	Y+13, r22	; 0x0d
    3dc0:	7e 87       	std	Y+14, r23	; 0x0e
    3dc2:	8f 87       	std	Y+15, r24	; 0x0f
    3dc4:	98 8b       	std	Y+16, r25	; 0x10
	u64 LOC_u64Reversed = 1;
    3dc6:	81 e0       	ldi	r24, 0x01	; 1
    3dc8:	89 83       	std	Y+1, r24	; 0x01
    3dca:	1a 82       	std	Y+2, r1	; 0x02
    3dcc:	1b 82       	std	Y+3, r1	; 0x03
    3dce:	1c 82       	std	Y+4, r1	; 0x04
    3dd0:	1d 82       	std	Y+5, r1	; 0x05
    3dd2:	1e 82       	std	Y+6, r1	; 0x06
    3dd4:	1f 82       	std	Y+7, r1	; 0x07
    3dd6:	18 86       	std	Y+8, r1	; 0x08
	if(Copy_u64Number == 0)
    3dd8:	89 85       	ldd	r24, Y+9	; 0x09
    3dda:	9a 85       	ldd	r25, Y+10	; 0x0a
    3ddc:	89 2b       	or	r24, r25
    3dde:	9b 85       	ldd	r25, Y+11	; 0x0b
    3de0:	89 2b       	or	r24, r25
    3de2:	9c 85       	ldd	r25, Y+12	; 0x0c
    3de4:	89 2b       	or	r24, r25
    3de6:	9d 85       	ldd	r25, Y+13	; 0x0d
    3de8:	89 2b       	or	r24, r25
    3dea:	9e 85       	ldd	r25, Y+14	; 0x0e
    3dec:	89 2b       	or	r24, r25
    3dee:	9f 85       	ldd	r25, Y+15	; 0x0f
    3df0:	89 2b       	or	r24, r25
    3df2:	98 89       	ldd	r25, Y+16	; 0x10
    3df4:	89 2b       	or	r24, r25
    3df6:	88 23       	and	r24, r24
    3df8:	09 f0       	breq	.+2      	; 0x3dfc <CLCD_voidSendNumber+0x6c>
    3dfa:	62 c3       	rjmp	.+1732   	; 0x44c0 <CLCD_voidSendNumber+0x730>
	{
		CLCD_voidSendCharacter('0');
    3dfc:	80 e3       	ldi	r24, 0x30	; 48
    3dfe:	0e 94 84 1e 	call	0x3d08	; 0x3d08 <CLCD_voidSendCharacter>
    3e02:	ef c3       	rjmp	.+2014   	; 0x45e2 <CLCD_voidSendNumber+0x852>
	else
	{

		while(Copy_u64Number != 0)
		{
			LOC_u64Reversed = (LOC_u64Reversed*10) + (Copy_u64Number%10);
    3e04:	29 81       	ldd	r18, Y+1	; 0x01
    3e06:	3a 81       	ldd	r19, Y+2	; 0x02
    3e08:	4b 81       	ldd	r20, Y+3	; 0x03
    3e0a:	5c 81       	ldd	r21, Y+4	; 0x04
    3e0c:	6d 81       	ldd	r22, Y+5	; 0x05
    3e0e:	7e 81       	ldd	r23, Y+6	; 0x06
    3e10:	8f 81       	ldd	r24, Y+7	; 0x07
    3e12:	98 85       	ldd	r25, Y+8	; 0x08
    3e14:	a2 2e       	mov	r10, r18
    3e16:	b3 2e       	mov	r11, r19
    3e18:	c4 2e       	mov	r12, r20
    3e1a:	d5 2e       	mov	r13, r21
    3e1c:	e6 2e       	mov	r14, r22
    3e1e:	f7 2e       	mov	r15, r23
    3e20:	08 2f       	mov	r16, r24
    3e22:	19 2f       	mov	r17, r25
    3e24:	2a 2d       	mov	r18, r10
    3e26:	3b 2d       	mov	r19, r11
    3e28:	4c 2d       	mov	r20, r12
    3e2a:	5d 2d       	mov	r21, r13
    3e2c:	6e 2d       	mov	r22, r14
    3e2e:	7f 2d       	mov	r23, r15
    3e30:	80 2f       	mov	r24, r16
    3e32:	91 2f       	mov	r25, r17
    3e34:	01 e0       	ldi	r16, 0x01	; 1
    3e36:	0e 94 49 00 	call	0x92	; 0x92 <__ashldi3>
    3e3a:	29 a3       	std	Y+33, r18	; 0x21
    3e3c:	3a a3       	std	Y+34, r19	; 0x22
    3e3e:	4b a3       	std	Y+35, r20	; 0x23
    3e40:	5c a3       	std	Y+36, r21	; 0x24
    3e42:	6d a3       	std	Y+37, r22	; 0x25
    3e44:	7e a3       	std	Y+38, r23	; 0x26
    3e46:	8f a3       	std	Y+39, r24	; 0x27
    3e48:	98 a7       	std	Y+40, r25	; 0x28
    3e4a:	29 a1       	ldd	r18, Y+33	; 0x21
    3e4c:	3a a1       	ldd	r19, Y+34	; 0x22
    3e4e:	4b a1       	ldd	r20, Y+35	; 0x23
    3e50:	5c a1       	ldd	r21, Y+36	; 0x24
    3e52:	6d a1       	ldd	r22, Y+37	; 0x25
    3e54:	7e a1       	ldd	r23, Y+38	; 0x26
    3e56:	8f a1       	ldd	r24, Y+39	; 0x27
    3e58:	98 a5       	ldd	r25, Y+40	; 0x28
    3e5a:	02 e0       	ldi	r16, 0x02	; 2
    3e5c:	0e 94 49 00 	call	0x92	; 0x92 <__ashldi3>
    3e60:	29 a7       	std	Y+41, r18	; 0x29
    3e62:	3a a7       	std	Y+42, r19	; 0x2a
    3e64:	4b a7       	std	Y+43, r20	; 0x2b
    3e66:	5c a7       	std	Y+44, r21	; 0x2c
    3e68:	6d a7       	std	Y+45, r22	; 0x2d
    3e6a:	7e a7       	std	Y+46, r23	; 0x2e
    3e6c:	8f a7       	std	Y+47, r24	; 0x2f
    3e6e:	98 ab       	std	Y+48, r25	; 0x30
    3e70:	89 a1       	ldd	r24, Y+33	; 0x21
    3e72:	99 a5       	ldd	r25, Y+41	; 0x29
    3e74:	89 0f       	add	r24, r25
    3e76:	89 ab       	std	Y+49, r24	; 0x31
    3e78:	81 e0       	ldi	r24, 0x01	; 1
    3e7a:	89 af       	std	Y+57, r24	; 0x39
    3e7c:	99 a9       	ldd	r25, Y+49	; 0x31
    3e7e:	89 a1       	ldd	r24, Y+33	; 0x21
    3e80:	98 17       	cp	r25, r24
    3e82:	08 f0       	brcs	.+2      	; 0x3e86 <CLCD_voidSendNumber+0xf6>
    3e84:	19 ae       	std	Y+57, r1	; 0x39
    3e86:	9a a1       	ldd	r25, Y+34	; 0x22
    3e88:	8a a5       	ldd	r24, Y+42	; 0x2a
    3e8a:	98 0f       	add	r25, r24
    3e8c:	9a ab       	std	Y+50, r25	; 0x32
    3e8e:	91 e0       	ldi	r25, 0x01	; 1
    3e90:	9a af       	std	Y+58, r25	; 0x3a
    3e92:	8a a9       	ldd	r24, Y+50	; 0x32
    3e94:	9a a1       	ldd	r25, Y+34	; 0x22
    3e96:	89 17       	cp	r24, r25
    3e98:	08 f0       	brcs	.+2      	; 0x3e9c <CLCD_voidSendNumber+0x10c>
    3e9a:	1a ae       	std	Y+58, r1	; 0x3a
    3e9c:	89 ad       	ldd	r24, Y+57	; 0x39
    3e9e:	9a a9       	ldd	r25, Y+50	; 0x32
    3ea0:	89 0f       	add	r24, r25
    3ea2:	8b af       	std	Y+59, r24	; 0x3b
    3ea4:	81 e0       	ldi	r24, 0x01	; 1
    3ea6:	8c af       	std	Y+60, r24	; 0x3c
    3ea8:	9b ad       	ldd	r25, Y+59	; 0x3b
    3eaa:	8a a9       	ldd	r24, Y+50	; 0x32
    3eac:	98 17       	cp	r25, r24
    3eae:	08 f0       	brcs	.+2      	; 0x3eb2 <CLCD_voidSendNumber+0x122>
    3eb0:	1c ae       	std	Y+60, r1	; 0x3c
    3eb2:	9a ad       	ldd	r25, Y+58	; 0x3a
    3eb4:	8c ad       	ldd	r24, Y+60	; 0x3c
    3eb6:	98 2b       	or	r25, r24
    3eb8:	9a af       	std	Y+58, r25	; 0x3a
    3eba:	9b ad       	ldd	r25, Y+59	; 0x3b
    3ebc:	9a ab       	std	Y+50, r25	; 0x32
    3ebe:	8b a1       	ldd	r24, Y+35	; 0x23
    3ec0:	9b a5       	ldd	r25, Y+43	; 0x2b
    3ec2:	89 0f       	add	r24, r25
    3ec4:	8b ab       	std	Y+51, r24	; 0x33
    3ec6:	81 e0       	ldi	r24, 0x01	; 1
    3ec8:	8d af       	std	Y+61, r24	; 0x3d
    3eca:	9b a9       	ldd	r25, Y+51	; 0x33
    3ecc:	8b a1       	ldd	r24, Y+35	; 0x23
    3ece:	98 17       	cp	r25, r24
    3ed0:	08 f0       	brcs	.+2      	; 0x3ed4 <CLCD_voidSendNumber+0x144>
    3ed2:	1d ae       	std	Y+61, r1	; 0x3d
    3ed4:	9a ad       	ldd	r25, Y+58	; 0x3a
    3ed6:	8b a9       	ldd	r24, Y+51	; 0x33
    3ed8:	98 0f       	add	r25, r24
    3eda:	9e af       	std	Y+62, r25	; 0x3e
    3edc:	91 e0       	ldi	r25, 0x01	; 1
    3ede:	9f af       	std	Y+63, r25	; 0x3f
    3ee0:	8e ad       	ldd	r24, Y+62	; 0x3e
    3ee2:	9b a9       	ldd	r25, Y+51	; 0x33
    3ee4:	89 17       	cp	r24, r25
    3ee6:	08 f0       	brcs	.+2      	; 0x3eea <CLCD_voidSendNumber+0x15a>
    3ee8:	1f ae       	std	Y+63, r1	; 0x3f
    3eea:	8d ad       	ldd	r24, Y+61	; 0x3d
    3eec:	9f ad       	ldd	r25, Y+63	; 0x3f
    3eee:	89 2b       	or	r24, r25
    3ef0:	8d af       	std	Y+61, r24	; 0x3d
    3ef2:	8e ad       	ldd	r24, Y+62	; 0x3e
    3ef4:	8b ab       	std	Y+51, r24	; 0x33
    3ef6:	9c a1       	ldd	r25, Y+36	; 0x24
    3ef8:	8c a5       	ldd	r24, Y+44	; 0x2c
    3efa:	98 0f       	add	r25, r24
    3efc:	9c ab       	std	Y+52, r25	; 0x34
    3efe:	91 e0       	ldi	r25, 0x01	; 1
    3f00:	21 96       	adiw	r28, 0x01	; 1
    3f02:	9f af       	std	Y+63, r25	; 0x3f
    3f04:	21 97       	sbiw	r28, 0x01	; 1
    3f06:	8c a9       	ldd	r24, Y+52	; 0x34
    3f08:	9c a1       	ldd	r25, Y+36	; 0x24
    3f0a:	89 17       	cp	r24, r25
    3f0c:	18 f0       	brcs	.+6      	; 0x3f14 <CLCD_voidSendNumber+0x184>
    3f0e:	21 96       	adiw	r28, 0x01	; 1
    3f10:	1f ae       	std	Y+63, r1	; 0x3f
    3f12:	21 97       	sbiw	r28, 0x01	; 1
    3f14:	8d ad       	ldd	r24, Y+61	; 0x3d
    3f16:	9c a9       	ldd	r25, Y+52	; 0x34
    3f18:	89 0f       	add	r24, r25
    3f1a:	22 96       	adiw	r28, 0x02	; 2
    3f1c:	8f af       	std	Y+63, r24	; 0x3f
    3f1e:	22 97       	sbiw	r28, 0x02	; 2
    3f20:	81 e0       	ldi	r24, 0x01	; 1
    3f22:	23 96       	adiw	r28, 0x03	; 3
    3f24:	8f af       	std	Y+63, r24	; 0x3f
    3f26:	23 97       	sbiw	r28, 0x03	; 3
    3f28:	22 96       	adiw	r28, 0x02	; 2
    3f2a:	9f ad       	ldd	r25, Y+63	; 0x3f
    3f2c:	22 97       	sbiw	r28, 0x02	; 2
    3f2e:	8c a9       	ldd	r24, Y+52	; 0x34
    3f30:	98 17       	cp	r25, r24
    3f32:	18 f0       	brcs	.+6      	; 0x3f3a <CLCD_voidSendNumber+0x1aa>
    3f34:	23 96       	adiw	r28, 0x03	; 3
    3f36:	1f ae       	std	Y+63, r1	; 0x3f
    3f38:	23 97       	sbiw	r28, 0x03	; 3
    3f3a:	21 96       	adiw	r28, 0x01	; 1
    3f3c:	9f ad       	ldd	r25, Y+63	; 0x3f
    3f3e:	21 97       	sbiw	r28, 0x01	; 1
    3f40:	23 96       	adiw	r28, 0x03	; 3
    3f42:	8f ad       	ldd	r24, Y+63	; 0x3f
    3f44:	23 97       	sbiw	r28, 0x03	; 3
    3f46:	98 2b       	or	r25, r24
    3f48:	21 96       	adiw	r28, 0x01	; 1
    3f4a:	9f af       	std	Y+63, r25	; 0x3f
    3f4c:	21 97       	sbiw	r28, 0x01	; 1
    3f4e:	22 96       	adiw	r28, 0x02	; 2
    3f50:	9f ad       	ldd	r25, Y+63	; 0x3f
    3f52:	22 97       	sbiw	r28, 0x02	; 2
    3f54:	9c ab       	std	Y+52, r25	; 0x34
    3f56:	8d a1       	ldd	r24, Y+37	; 0x25
    3f58:	9d a5       	ldd	r25, Y+45	; 0x2d
    3f5a:	89 0f       	add	r24, r25
    3f5c:	8d ab       	std	Y+53, r24	; 0x35
    3f5e:	81 e0       	ldi	r24, 0x01	; 1
    3f60:	24 96       	adiw	r28, 0x04	; 4
    3f62:	8f af       	std	Y+63, r24	; 0x3f
    3f64:	24 97       	sbiw	r28, 0x04	; 4
    3f66:	9d a9       	ldd	r25, Y+53	; 0x35
    3f68:	8d a1       	ldd	r24, Y+37	; 0x25
    3f6a:	98 17       	cp	r25, r24
    3f6c:	18 f0       	brcs	.+6      	; 0x3f74 <CLCD_voidSendNumber+0x1e4>
    3f6e:	24 96       	adiw	r28, 0x04	; 4
    3f70:	1f ae       	std	Y+63, r1	; 0x3f
    3f72:	24 97       	sbiw	r28, 0x04	; 4
    3f74:	21 96       	adiw	r28, 0x01	; 1
    3f76:	9f ad       	ldd	r25, Y+63	; 0x3f
    3f78:	21 97       	sbiw	r28, 0x01	; 1
    3f7a:	8d a9       	ldd	r24, Y+53	; 0x35
    3f7c:	98 0f       	add	r25, r24
    3f7e:	25 96       	adiw	r28, 0x05	; 5
    3f80:	9f af       	std	Y+63, r25	; 0x3f
    3f82:	25 97       	sbiw	r28, 0x05	; 5
    3f84:	91 e0       	ldi	r25, 0x01	; 1
    3f86:	26 96       	adiw	r28, 0x06	; 6
    3f88:	9f af       	std	Y+63, r25	; 0x3f
    3f8a:	26 97       	sbiw	r28, 0x06	; 6
    3f8c:	25 96       	adiw	r28, 0x05	; 5
    3f8e:	8f ad       	ldd	r24, Y+63	; 0x3f
    3f90:	25 97       	sbiw	r28, 0x05	; 5
    3f92:	9d a9       	ldd	r25, Y+53	; 0x35
    3f94:	89 17       	cp	r24, r25
    3f96:	18 f0       	brcs	.+6      	; 0x3f9e <CLCD_voidSendNumber+0x20e>
    3f98:	26 96       	adiw	r28, 0x06	; 6
    3f9a:	1f ae       	std	Y+63, r1	; 0x3f
    3f9c:	26 97       	sbiw	r28, 0x06	; 6
    3f9e:	24 96       	adiw	r28, 0x04	; 4
    3fa0:	8f ad       	ldd	r24, Y+63	; 0x3f
    3fa2:	24 97       	sbiw	r28, 0x04	; 4
    3fa4:	26 96       	adiw	r28, 0x06	; 6
    3fa6:	9f ad       	ldd	r25, Y+63	; 0x3f
    3fa8:	26 97       	sbiw	r28, 0x06	; 6
    3faa:	89 2b       	or	r24, r25
    3fac:	24 96       	adiw	r28, 0x04	; 4
    3fae:	8f af       	std	Y+63, r24	; 0x3f
    3fb0:	24 97       	sbiw	r28, 0x04	; 4
    3fb2:	25 96       	adiw	r28, 0x05	; 5
    3fb4:	8f ad       	ldd	r24, Y+63	; 0x3f
    3fb6:	25 97       	sbiw	r28, 0x05	; 5
    3fb8:	8d ab       	std	Y+53, r24	; 0x35
    3fba:	9e a1       	ldd	r25, Y+38	; 0x26
    3fbc:	8e a5       	ldd	r24, Y+46	; 0x2e
    3fbe:	98 0f       	add	r25, r24
    3fc0:	9e ab       	std	Y+54, r25	; 0x36
    3fc2:	91 e0       	ldi	r25, 0x01	; 1
    3fc4:	27 96       	adiw	r28, 0x07	; 7
    3fc6:	9f af       	std	Y+63, r25	; 0x3f
    3fc8:	27 97       	sbiw	r28, 0x07	; 7
    3fca:	8e a9       	ldd	r24, Y+54	; 0x36
    3fcc:	9e a1       	ldd	r25, Y+38	; 0x26
    3fce:	89 17       	cp	r24, r25
    3fd0:	18 f0       	brcs	.+6      	; 0x3fd8 <CLCD_voidSendNumber+0x248>
    3fd2:	27 96       	adiw	r28, 0x07	; 7
    3fd4:	1f ae       	std	Y+63, r1	; 0x3f
    3fd6:	27 97       	sbiw	r28, 0x07	; 7
    3fd8:	24 96       	adiw	r28, 0x04	; 4
    3fda:	8f ad       	ldd	r24, Y+63	; 0x3f
    3fdc:	24 97       	sbiw	r28, 0x04	; 4
    3fde:	9e a9       	ldd	r25, Y+54	; 0x36
    3fe0:	89 0f       	add	r24, r25
    3fe2:	28 96       	adiw	r28, 0x08	; 8
    3fe4:	8f af       	std	Y+63, r24	; 0x3f
    3fe6:	28 97       	sbiw	r28, 0x08	; 8
    3fe8:	81 e0       	ldi	r24, 0x01	; 1
    3fea:	29 96       	adiw	r28, 0x09	; 9
    3fec:	8f af       	std	Y+63, r24	; 0x3f
    3fee:	29 97       	sbiw	r28, 0x09	; 9
    3ff0:	28 96       	adiw	r28, 0x08	; 8
    3ff2:	9f ad       	ldd	r25, Y+63	; 0x3f
    3ff4:	28 97       	sbiw	r28, 0x08	; 8
    3ff6:	8e a9       	ldd	r24, Y+54	; 0x36
    3ff8:	98 17       	cp	r25, r24
    3ffa:	18 f0       	brcs	.+6      	; 0x4002 <CLCD_voidSendNumber+0x272>
    3ffc:	29 96       	adiw	r28, 0x09	; 9
    3ffe:	1f ae       	std	Y+63, r1	; 0x3f
    4000:	29 97       	sbiw	r28, 0x09	; 9
    4002:	27 96       	adiw	r28, 0x07	; 7
    4004:	9f ad       	ldd	r25, Y+63	; 0x3f
    4006:	27 97       	sbiw	r28, 0x07	; 7
    4008:	29 96       	adiw	r28, 0x09	; 9
    400a:	8f ad       	ldd	r24, Y+63	; 0x3f
    400c:	29 97       	sbiw	r28, 0x09	; 9
    400e:	98 2b       	or	r25, r24
    4010:	27 96       	adiw	r28, 0x07	; 7
    4012:	9f af       	std	Y+63, r25	; 0x3f
    4014:	27 97       	sbiw	r28, 0x07	; 7
    4016:	28 96       	adiw	r28, 0x08	; 8
    4018:	9f ad       	ldd	r25, Y+63	; 0x3f
    401a:	28 97       	sbiw	r28, 0x08	; 8
    401c:	9e ab       	std	Y+54, r25	; 0x36
    401e:	8f a1       	ldd	r24, Y+39	; 0x27
    4020:	9f a5       	ldd	r25, Y+47	; 0x2f
    4022:	89 0f       	add	r24, r25
    4024:	8f ab       	std	Y+55, r24	; 0x37
    4026:	81 e0       	ldi	r24, 0x01	; 1
    4028:	2a 96       	adiw	r28, 0x0a	; 10
    402a:	8f af       	std	Y+63, r24	; 0x3f
    402c:	2a 97       	sbiw	r28, 0x0a	; 10
    402e:	9f a9       	ldd	r25, Y+55	; 0x37
    4030:	8f a1       	ldd	r24, Y+39	; 0x27
    4032:	98 17       	cp	r25, r24
    4034:	18 f0       	brcs	.+6      	; 0x403c <CLCD_voidSendNumber+0x2ac>
    4036:	2a 96       	adiw	r28, 0x0a	; 10
    4038:	1f ae       	std	Y+63, r1	; 0x3f
    403a:	2a 97       	sbiw	r28, 0x0a	; 10
    403c:	27 96       	adiw	r28, 0x07	; 7
    403e:	9f ad       	ldd	r25, Y+63	; 0x3f
    4040:	27 97       	sbiw	r28, 0x07	; 7
    4042:	8f a9       	ldd	r24, Y+55	; 0x37
    4044:	98 0f       	add	r25, r24
    4046:	2b 96       	adiw	r28, 0x0b	; 11
    4048:	9f af       	std	Y+63, r25	; 0x3f
    404a:	2b 97       	sbiw	r28, 0x0b	; 11
    404c:	91 e0       	ldi	r25, 0x01	; 1
    404e:	2c 96       	adiw	r28, 0x0c	; 12
    4050:	9f af       	std	Y+63, r25	; 0x3f
    4052:	2c 97       	sbiw	r28, 0x0c	; 12
    4054:	2b 96       	adiw	r28, 0x0b	; 11
    4056:	8f ad       	ldd	r24, Y+63	; 0x3f
    4058:	2b 97       	sbiw	r28, 0x0b	; 11
    405a:	9f a9       	ldd	r25, Y+55	; 0x37
    405c:	89 17       	cp	r24, r25
    405e:	18 f0       	brcs	.+6      	; 0x4066 <CLCD_voidSendNumber+0x2d6>
    4060:	2c 96       	adiw	r28, 0x0c	; 12
    4062:	1f ae       	std	Y+63, r1	; 0x3f
    4064:	2c 97       	sbiw	r28, 0x0c	; 12
    4066:	2a 96       	adiw	r28, 0x0a	; 10
    4068:	8f ad       	ldd	r24, Y+63	; 0x3f
    406a:	2a 97       	sbiw	r28, 0x0a	; 10
    406c:	2c 96       	adiw	r28, 0x0c	; 12
    406e:	9f ad       	ldd	r25, Y+63	; 0x3f
    4070:	2c 97       	sbiw	r28, 0x0c	; 12
    4072:	89 2b       	or	r24, r25
    4074:	2a 96       	adiw	r28, 0x0a	; 10
    4076:	8f af       	std	Y+63, r24	; 0x3f
    4078:	2a 97       	sbiw	r28, 0x0a	; 10
    407a:	2b 96       	adiw	r28, 0x0b	; 11
    407c:	8f ad       	ldd	r24, Y+63	; 0x3f
    407e:	2b 97       	sbiw	r28, 0x0b	; 11
    4080:	8f ab       	std	Y+55, r24	; 0x37
    4082:	98 a5       	ldd	r25, Y+40	; 0x28
    4084:	88 a9       	ldd	r24, Y+48	; 0x30
    4086:	98 0f       	add	r25, r24
    4088:	98 af       	std	Y+56, r25	; 0x38
    408a:	2a 96       	adiw	r28, 0x0a	; 10
    408c:	8f ad       	ldd	r24, Y+63	; 0x3f
    408e:	2a 97       	sbiw	r28, 0x0a	; 10
    4090:	98 ad       	ldd	r25, Y+56	; 0x38
    4092:	89 0f       	add	r24, r25
    4094:	88 af       	std	Y+56, r24	; 0x38
    4096:	89 a9       	ldd	r24, Y+49	; 0x31
    4098:	89 8f       	std	Y+25, r24	; 0x19
    409a:	9a a9       	ldd	r25, Y+50	; 0x32
    409c:	9a 8f       	std	Y+26, r25	; 0x1a
    409e:	8b a9       	ldd	r24, Y+51	; 0x33
    40a0:	8b 8f       	std	Y+27, r24	; 0x1b
    40a2:	9c a9       	ldd	r25, Y+52	; 0x34
    40a4:	9c 8f       	std	Y+28, r25	; 0x1c
    40a6:	8d a9       	ldd	r24, Y+53	; 0x35
    40a8:	8d 8f       	std	Y+29, r24	; 0x1d
    40aa:	9e a9       	ldd	r25, Y+54	; 0x36
    40ac:	9e 8f       	std	Y+30, r25	; 0x1e
    40ae:	8f a9       	ldd	r24, Y+55	; 0x37
    40b0:	8f 8f       	std	Y+31, r24	; 0x1f
    40b2:	98 ad       	ldd	r25, Y+56	; 0x38
    40b4:	98 a3       	std	Y+32, r25	; 0x20
    40b6:	a9 84       	ldd	r10, Y+9	; 0x09
    40b8:	ba 84       	ldd	r11, Y+10	; 0x0a
    40ba:	cb 84       	ldd	r12, Y+11	; 0x0b
    40bc:	dc 84       	ldd	r13, Y+12	; 0x0c
    40be:	ed 84       	ldd	r14, Y+13	; 0x0d
    40c0:	fe 84       	ldd	r15, Y+14	; 0x0e
    40c2:	0f 85       	ldd	r16, Y+15	; 0x0f
    40c4:	18 89       	ldd	r17, Y+16	; 0x10
    40c6:	2a 2d       	mov	r18, r10
    40c8:	3b 2d       	mov	r19, r11
    40ca:	4c 2d       	mov	r20, r12
    40cc:	5d 2d       	mov	r21, r13
    40ce:	6e 2d       	mov	r22, r14
    40d0:	7f 2d       	mov	r23, r15
    40d2:	80 2f       	mov	r24, r16
    40d4:	91 2f       	mov	r25, r17
    40d6:	0f 2e       	mov	r0, r31
    40d8:	fa e0       	ldi	r31, 0x0A	; 10
    40da:	af 2e       	mov	r10, r31
    40dc:	f0 2d       	mov	r31, r0
    40de:	bb 24       	eor	r11, r11
    40e0:	cc 24       	eor	r12, r12
    40e2:	dd 24       	eor	r13, r13
    40e4:	ee 24       	eor	r14, r14
    40e6:	ff 24       	eor	r15, r15
    40e8:	00 e0       	ldi	r16, 0x00	; 0
    40ea:	10 e0       	ldi	r17, 0x00	; 0
    40ec:	0e 94 11 08 	call	0x1022	; 0x1022 <__umoddi3>
    40f0:	a2 2e       	mov	r10, r18
    40f2:	b3 2e       	mov	r11, r19
    40f4:	c4 2e       	mov	r12, r20
    40f6:	d5 2e       	mov	r13, r21
    40f8:	e6 2e       	mov	r14, r22
    40fa:	f7 2e       	mov	r15, r23
    40fc:	08 2f       	mov	r16, r24
    40fe:	19 2f       	mov	r17, r25
    4100:	a9 8a       	std	Y+17, r10	; 0x11
    4102:	ba 8a       	std	Y+18, r11	; 0x12
    4104:	cb 8a       	std	Y+19, r12	; 0x13
    4106:	dc 8a       	std	Y+20, r13	; 0x14
    4108:	ed 8a       	std	Y+21, r14	; 0x15
    410a:	fe 8a       	std	Y+22, r15	; 0x16
    410c:	0f 8b       	std	Y+23, r16	; 0x17
    410e:	18 8f       	std	Y+24, r17	; 0x18
    4110:	89 8d       	ldd	r24, Y+25	; 0x19
    4112:	99 89       	ldd	r25, Y+17	; 0x11
    4114:	89 0f       	add	r24, r25
    4116:	2d 96       	adiw	r28, 0x0d	; 13
    4118:	8f af       	std	Y+63, r24	; 0x3f
    411a:	2d 97       	sbiw	r28, 0x0d	; 13
    411c:	81 e0       	ldi	r24, 0x01	; 1
    411e:	65 96       	adiw	r28, 0x15	; 21
    4120:	8f af       	std	Y+63, r24	; 0x3f
    4122:	65 97       	sbiw	r28, 0x15	; 21
    4124:	2d 96       	adiw	r28, 0x0d	; 13
    4126:	9f ad       	ldd	r25, Y+63	; 0x3f
    4128:	2d 97       	sbiw	r28, 0x0d	; 13
    412a:	89 8d       	ldd	r24, Y+25	; 0x19
    412c:	98 17       	cp	r25, r24
    412e:	18 f0       	brcs	.+6      	; 0x4136 <CLCD_voidSendNumber+0x3a6>
    4130:	65 96       	adiw	r28, 0x15	; 21
    4132:	1f ae       	std	Y+63, r1	; 0x3f
    4134:	65 97       	sbiw	r28, 0x15	; 21
    4136:	9a 8d       	ldd	r25, Y+26	; 0x1a
    4138:	8a 89       	ldd	r24, Y+18	; 0x12
    413a:	98 0f       	add	r25, r24
    413c:	2e 96       	adiw	r28, 0x0e	; 14
    413e:	9f af       	std	Y+63, r25	; 0x3f
    4140:	2e 97       	sbiw	r28, 0x0e	; 14
    4142:	91 e0       	ldi	r25, 0x01	; 1
    4144:	66 96       	adiw	r28, 0x16	; 22
    4146:	9f af       	std	Y+63, r25	; 0x3f
    4148:	66 97       	sbiw	r28, 0x16	; 22
    414a:	2e 96       	adiw	r28, 0x0e	; 14
    414c:	8f ad       	ldd	r24, Y+63	; 0x3f
    414e:	2e 97       	sbiw	r28, 0x0e	; 14
    4150:	9a 8d       	ldd	r25, Y+26	; 0x1a
    4152:	89 17       	cp	r24, r25
    4154:	18 f0       	brcs	.+6      	; 0x415c <CLCD_voidSendNumber+0x3cc>
    4156:	66 96       	adiw	r28, 0x16	; 22
    4158:	1f ae       	std	Y+63, r1	; 0x3f
    415a:	66 97       	sbiw	r28, 0x16	; 22
    415c:	65 96       	adiw	r28, 0x15	; 21
    415e:	8f ad       	ldd	r24, Y+63	; 0x3f
    4160:	65 97       	sbiw	r28, 0x15	; 21
    4162:	2e 96       	adiw	r28, 0x0e	; 14
    4164:	9f ad       	ldd	r25, Y+63	; 0x3f
    4166:	2e 97       	sbiw	r28, 0x0e	; 14
    4168:	89 0f       	add	r24, r25
    416a:	67 96       	adiw	r28, 0x17	; 23
    416c:	8f af       	std	Y+63, r24	; 0x3f
    416e:	67 97       	sbiw	r28, 0x17	; 23
    4170:	81 e0       	ldi	r24, 0x01	; 1
    4172:	68 96       	adiw	r28, 0x18	; 24
    4174:	8f af       	std	Y+63, r24	; 0x3f
    4176:	68 97       	sbiw	r28, 0x18	; 24
    4178:	67 96       	adiw	r28, 0x17	; 23
    417a:	9f ad       	ldd	r25, Y+63	; 0x3f
    417c:	67 97       	sbiw	r28, 0x17	; 23
    417e:	2e 96       	adiw	r28, 0x0e	; 14
    4180:	8f ad       	ldd	r24, Y+63	; 0x3f
    4182:	2e 97       	sbiw	r28, 0x0e	; 14
    4184:	98 17       	cp	r25, r24
    4186:	18 f0       	brcs	.+6      	; 0x418e <CLCD_voidSendNumber+0x3fe>
    4188:	68 96       	adiw	r28, 0x18	; 24
    418a:	1f ae       	std	Y+63, r1	; 0x3f
    418c:	68 97       	sbiw	r28, 0x18	; 24
    418e:	66 96       	adiw	r28, 0x16	; 22
    4190:	9f ad       	ldd	r25, Y+63	; 0x3f
    4192:	66 97       	sbiw	r28, 0x16	; 22
    4194:	68 96       	adiw	r28, 0x18	; 24
    4196:	8f ad       	ldd	r24, Y+63	; 0x3f
    4198:	68 97       	sbiw	r28, 0x18	; 24
    419a:	98 2b       	or	r25, r24
    419c:	66 96       	adiw	r28, 0x16	; 22
    419e:	9f af       	std	Y+63, r25	; 0x3f
    41a0:	66 97       	sbiw	r28, 0x16	; 22
    41a2:	67 96       	adiw	r28, 0x17	; 23
    41a4:	9f ad       	ldd	r25, Y+63	; 0x3f
    41a6:	67 97       	sbiw	r28, 0x17	; 23
    41a8:	2e 96       	adiw	r28, 0x0e	; 14
    41aa:	9f af       	std	Y+63, r25	; 0x3f
    41ac:	2e 97       	sbiw	r28, 0x0e	; 14
    41ae:	8b 8d       	ldd	r24, Y+27	; 0x1b
    41b0:	9b 89       	ldd	r25, Y+19	; 0x13
    41b2:	89 0f       	add	r24, r25
    41b4:	2f 96       	adiw	r28, 0x0f	; 15
    41b6:	8f af       	std	Y+63, r24	; 0x3f
    41b8:	2f 97       	sbiw	r28, 0x0f	; 15
    41ba:	81 e0       	ldi	r24, 0x01	; 1
    41bc:	69 96       	adiw	r28, 0x19	; 25
    41be:	8f af       	std	Y+63, r24	; 0x3f
    41c0:	69 97       	sbiw	r28, 0x19	; 25
    41c2:	2f 96       	adiw	r28, 0x0f	; 15
    41c4:	9f ad       	ldd	r25, Y+63	; 0x3f
    41c6:	2f 97       	sbiw	r28, 0x0f	; 15
    41c8:	8b 8d       	ldd	r24, Y+27	; 0x1b
    41ca:	98 17       	cp	r25, r24
    41cc:	18 f0       	brcs	.+6      	; 0x41d4 <CLCD_voidSendNumber+0x444>
    41ce:	69 96       	adiw	r28, 0x19	; 25
    41d0:	1f ae       	std	Y+63, r1	; 0x3f
    41d2:	69 97       	sbiw	r28, 0x19	; 25
    41d4:	66 96       	adiw	r28, 0x16	; 22
    41d6:	9f ad       	ldd	r25, Y+63	; 0x3f
    41d8:	66 97       	sbiw	r28, 0x16	; 22
    41da:	2f 96       	adiw	r28, 0x0f	; 15
    41dc:	8f ad       	ldd	r24, Y+63	; 0x3f
    41de:	2f 97       	sbiw	r28, 0x0f	; 15
    41e0:	98 0f       	add	r25, r24
    41e2:	6a 96       	adiw	r28, 0x1a	; 26
    41e4:	9f af       	std	Y+63, r25	; 0x3f
    41e6:	6a 97       	sbiw	r28, 0x1a	; 26
    41e8:	91 e0       	ldi	r25, 0x01	; 1
    41ea:	6b 96       	adiw	r28, 0x1b	; 27
    41ec:	9f af       	std	Y+63, r25	; 0x3f
    41ee:	6b 97       	sbiw	r28, 0x1b	; 27
    41f0:	6a 96       	adiw	r28, 0x1a	; 26
    41f2:	8f ad       	ldd	r24, Y+63	; 0x3f
    41f4:	6a 97       	sbiw	r28, 0x1a	; 26
    41f6:	2f 96       	adiw	r28, 0x0f	; 15
    41f8:	9f ad       	ldd	r25, Y+63	; 0x3f
    41fa:	2f 97       	sbiw	r28, 0x0f	; 15
    41fc:	89 17       	cp	r24, r25
    41fe:	18 f0       	brcs	.+6      	; 0x4206 <CLCD_voidSendNumber+0x476>
    4200:	6b 96       	adiw	r28, 0x1b	; 27
    4202:	1f ae       	std	Y+63, r1	; 0x3f
    4204:	6b 97       	sbiw	r28, 0x1b	; 27
    4206:	69 96       	adiw	r28, 0x19	; 25
    4208:	8f ad       	ldd	r24, Y+63	; 0x3f
    420a:	69 97       	sbiw	r28, 0x19	; 25
    420c:	6b 96       	adiw	r28, 0x1b	; 27
    420e:	9f ad       	ldd	r25, Y+63	; 0x3f
    4210:	6b 97       	sbiw	r28, 0x1b	; 27
    4212:	89 2b       	or	r24, r25
    4214:	69 96       	adiw	r28, 0x19	; 25
    4216:	8f af       	std	Y+63, r24	; 0x3f
    4218:	69 97       	sbiw	r28, 0x19	; 25
    421a:	6a 96       	adiw	r28, 0x1a	; 26
    421c:	8f ad       	ldd	r24, Y+63	; 0x3f
    421e:	6a 97       	sbiw	r28, 0x1a	; 26
    4220:	2f 96       	adiw	r28, 0x0f	; 15
    4222:	8f af       	std	Y+63, r24	; 0x3f
    4224:	2f 97       	sbiw	r28, 0x0f	; 15
    4226:	9c 8d       	ldd	r25, Y+28	; 0x1c
    4228:	8c 89       	ldd	r24, Y+20	; 0x14
    422a:	98 0f       	add	r25, r24
    422c:	60 96       	adiw	r28, 0x10	; 16
    422e:	9f af       	std	Y+63, r25	; 0x3f
    4230:	60 97       	sbiw	r28, 0x10	; 16
    4232:	91 e0       	ldi	r25, 0x01	; 1
    4234:	6c 96       	adiw	r28, 0x1c	; 28
    4236:	9f af       	std	Y+63, r25	; 0x3f
    4238:	6c 97       	sbiw	r28, 0x1c	; 28
    423a:	60 96       	adiw	r28, 0x10	; 16
    423c:	8f ad       	ldd	r24, Y+63	; 0x3f
    423e:	60 97       	sbiw	r28, 0x10	; 16
    4240:	9c 8d       	ldd	r25, Y+28	; 0x1c
    4242:	89 17       	cp	r24, r25
    4244:	18 f0       	brcs	.+6      	; 0x424c <CLCD_voidSendNumber+0x4bc>
    4246:	6c 96       	adiw	r28, 0x1c	; 28
    4248:	1f ae       	std	Y+63, r1	; 0x3f
    424a:	6c 97       	sbiw	r28, 0x1c	; 28
    424c:	69 96       	adiw	r28, 0x19	; 25
    424e:	8f ad       	ldd	r24, Y+63	; 0x3f
    4250:	69 97       	sbiw	r28, 0x19	; 25
    4252:	60 96       	adiw	r28, 0x10	; 16
    4254:	9f ad       	ldd	r25, Y+63	; 0x3f
    4256:	60 97       	sbiw	r28, 0x10	; 16
    4258:	89 0f       	add	r24, r25
    425a:	6d 96       	adiw	r28, 0x1d	; 29
    425c:	8f af       	std	Y+63, r24	; 0x3f
    425e:	6d 97       	sbiw	r28, 0x1d	; 29
    4260:	81 e0       	ldi	r24, 0x01	; 1
    4262:	6e 96       	adiw	r28, 0x1e	; 30
    4264:	8f af       	std	Y+63, r24	; 0x3f
    4266:	6e 97       	sbiw	r28, 0x1e	; 30
    4268:	6d 96       	adiw	r28, 0x1d	; 29
    426a:	9f ad       	ldd	r25, Y+63	; 0x3f
    426c:	6d 97       	sbiw	r28, 0x1d	; 29
    426e:	60 96       	adiw	r28, 0x10	; 16
    4270:	8f ad       	ldd	r24, Y+63	; 0x3f
    4272:	60 97       	sbiw	r28, 0x10	; 16
    4274:	98 17       	cp	r25, r24
    4276:	18 f0       	brcs	.+6      	; 0x427e <CLCD_voidSendNumber+0x4ee>
    4278:	6e 96       	adiw	r28, 0x1e	; 30
    427a:	1f ae       	std	Y+63, r1	; 0x3f
    427c:	6e 97       	sbiw	r28, 0x1e	; 30
    427e:	6c 96       	adiw	r28, 0x1c	; 28
    4280:	9f ad       	ldd	r25, Y+63	; 0x3f
    4282:	6c 97       	sbiw	r28, 0x1c	; 28
    4284:	6e 96       	adiw	r28, 0x1e	; 30
    4286:	8f ad       	ldd	r24, Y+63	; 0x3f
    4288:	6e 97       	sbiw	r28, 0x1e	; 30
    428a:	98 2b       	or	r25, r24
    428c:	6c 96       	adiw	r28, 0x1c	; 28
    428e:	9f af       	std	Y+63, r25	; 0x3f
    4290:	6c 97       	sbiw	r28, 0x1c	; 28
    4292:	6d 96       	adiw	r28, 0x1d	; 29
    4294:	9f ad       	ldd	r25, Y+63	; 0x3f
    4296:	6d 97       	sbiw	r28, 0x1d	; 29
    4298:	60 96       	adiw	r28, 0x10	; 16
    429a:	9f af       	std	Y+63, r25	; 0x3f
    429c:	60 97       	sbiw	r28, 0x10	; 16
    429e:	8d 8d       	ldd	r24, Y+29	; 0x1d
    42a0:	9d 89       	ldd	r25, Y+21	; 0x15
    42a2:	89 0f       	add	r24, r25
    42a4:	61 96       	adiw	r28, 0x11	; 17
    42a6:	8f af       	std	Y+63, r24	; 0x3f
    42a8:	61 97       	sbiw	r28, 0x11	; 17
    42aa:	81 e0       	ldi	r24, 0x01	; 1
    42ac:	6f 96       	adiw	r28, 0x1f	; 31
    42ae:	8f af       	std	Y+63, r24	; 0x3f
    42b0:	6f 97       	sbiw	r28, 0x1f	; 31
    42b2:	61 96       	adiw	r28, 0x11	; 17
    42b4:	9f ad       	ldd	r25, Y+63	; 0x3f
    42b6:	61 97       	sbiw	r28, 0x11	; 17
    42b8:	8d 8d       	ldd	r24, Y+29	; 0x1d
    42ba:	98 17       	cp	r25, r24
    42bc:	18 f0       	brcs	.+6      	; 0x42c4 <CLCD_voidSendNumber+0x534>
    42be:	6f 96       	adiw	r28, 0x1f	; 31
    42c0:	1f ae       	std	Y+63, r1	; 0x3f
    42c2:	6f 97       	sbiw	r28, 0x1f	; 31
    42c4:	6c 96       	adiw	r28, 0x1c	; 28
    42c6:	9f ad       	ldd	r25, Y+63	; 0x3f
    42c8:	6c 97       	sbiw	r28, 0x1c	; 28
    42ca:	61 96       	adiw	r28, 0x11	; 17
    42cc:	8f ad       	ldd	r24, Y+63	; 0x3f
    42ce:	61 97       	sbiw	r28, 0x11	; 17
    42d0:	98 0f       	add	r25, r24
    42d2:	a0 96       	adiw	r28, 0x20	; 32
    42d4:	9f af       	std	Y+63, r25	; 0x3f
    42d6:	a0 97       	sbiw	r28, 0x20	; 32
    42d8:	91 e0       	ldi	r25, 0x01	; 1
    42da:	a1 96       	adiw	r28, 0x21	; 33
    42dc:	9f af       	std	Y+63, r25	; 0x3f
    42de:	a1 97       	sbiw	r28, 0x21	; 33
    42e0:	a0 96       	adiw	r28, 0x20	; 32
    42e2:	8f ad       	ldd	r24, Y+63	; 0x3f
    42e4:	a0 97       	sbiw	r28, 0x20	; 32
    42e6:	61 96       	adiw	r28, 0x11	; 17
    42e8:	9f ad       	ldd	r25, Y+63	; 0x3f
    42ea:	61 97       	sbiw	r28, 0x11	; 17
    42ec:	89 17       	cp	r24, r25
    42ee:	18 f0       	brcs	.+6      	; 0x42f6 <CLCD_voidSendNumber+0x566>
    42f0:	a1 96       	adiw	r28, 0x21	; 33
    42f2:	1f ae       	std	Y+63, r1	; 0x3f
    42f4:	a1 97       	sbiw	r28, 0x21	; 33
    42f6:	6f 96       	adiw	r28, 0x1f	; 31
    42f8:	8f ad       	ldd	r24, Y+63	; 0x3f
    42fa:	6f 97       	sbiw	r28, 0x1f	; 31
    42fc:	a1 96       	adiw	r28, 0x21	; 33
    42fe:	9f ad       	ldd	r25, Y+63	; 0x3f
    4300:	a1 97       	sbiw	r28, 0x21	; 33
    4302:	89 2b       	or	r24, r25
    4304:	6f 96       	adiw	r28, 0x1f	; 31
    4306:	8f af       	std	Y+63, r24	; 0x3f
    4308:	6f 97       	sbiw	r28, 0x1f	; 31
    430a:	a0 96       	adiw	r28, 0x20	; 32
    430c:	8f ad       	ldd	r24, Y+63	; 0x3f
    430e:	a0 97       	sbiw	r28, 0x20	; 32
    4310:	61 96       	adiw	r28, 0x11	; 17
    4312:	8f af       	std	Y+63, r24	; 0x3f
    4314:	61 97       	sbiw	r28, 0x11	; 17
    4316:	9e 8d       	ldd	r25, Y+30	; 0x1e
    4318:	8e 89       	ldd	r24, Y+22	; 0x16
    431a:	98 0f       	add	r25, r24
    431c:	62 96       	adiw	r28, 0x12	; 18
    431e:	9f af       	std	Y+63, r25	; 0x3f
    4320:	62 97       	sbiw	r28, 0x12	; 18
    4322:	91 e0       	ldi	r25, 0x01	; 1
    4324:	a2 96       	adiw	r28, 0x22	; 34
    4326:	9f af       	std	Y+63, r25	; 0x3f
    4328:	a2 97       	sbiw	r28, 0x22	; 34
    432a:	62 96       	adiw	r28, 0x12	; 18
    432c:	8f ad       	ldd	r24, Y+63	; 0x3f
    432e:	62 97       	sbiw	r28, 0x12	; 18
    4330:	9e 8d       	ldd	r25, Y+30	; 0x1e
    4332:	89 17       	cp	r24, r25
    4334:	18 f0       	brcs	.+6      	; 0x433c <CLCD_voidSendNumber+0x5ac>
    4336:	a2 96       	adiw	r28, 0x22	; 34
    4338:	1f ae       	std	Y+63, r1	; 0x3f
    433a:	a2 97       	sbiw	r28, 0x22	; 34
    433c:	6f 96       	adiw	r28, 0x1f	; 31
    433e:	8f ad       	ldd	r24, Y+63	; 0x3f
    4340:	6f 97       	sbiw	r28, 0x1f	; 31
    4342:	62 96       	adiw	r28, 0x12	; 18
    4344:	9f ad       	ldd	r25, Y+63	; 0x3f
    4346:	62 97       	sbiw	r28, 0x12	; 18
    4348:	89 0f       	add	r24, r25
    434a:	a3 96       	adiw	r28, 0x23	; 35
    434c:	8f af       	std	Y+63, r24	; 0x3f
    434e:	a3 97       	sbiw	r28, 0x23	; 35
    4350:	81 e0       	ldi	r24, 0x01	; 1
    4352:	a4 96       	adiw	r28, 0x24	; 36
    4354:	8f af       	std	Y+63, r24	; 0x3f
    4356:	a4 97       	sbiw	r28, 0x24	; 36
    4358:	a3 96       	adiw	r28, 0x23	; 35
    435a:	9f ad       	ldd	r25, Y+63	; 0x3f
    435c:	a3 97       	sbiw	r28, 0x23	; 35
    435e:	62 96       	adiw	r28, 0x12	; 18
    4360:	8f ad       	ldd	r24, Y+63	; 0x3f
    4362:	62 97       	sbiw	r28, 0x12	; 18
    4364:	98 17       	cp	r25, r24
    4366:	18 f0       	brcs	.+6      	; 0x436e <CLCD_voidSendNumber+0x5de>
    4368:	a4 96       	adiw	r28, 0x24	; 36
    436a:	1f ae       	std	Y+63, r1	; 0x3f
    436c:	a4 97       	sbiw	r28, 0x24	; 36
    436e:	a2 96       	adiw	r28, 0x22	; 34
    4370:	9f ad       	ldd	r25, Y+63	; 0x3f
    4372:	a2 97       	sbiw	r28, 0x22	; 34
    4374:	a4 96       	adiw	r28, 0x24	; 36
    4376:	8f ad       	ldd	r24, Y+63	; 0x3f
    4378:	a4 97       	sbiw	r28, 0x24	; 36
    437a:	98 2b       	or	r25, r24
    437c:	a2 96       	adiw	r28, 0x22	; 34
    437e:	9f af       	std	Y+63, r25	; 0x3f
    4380:	a2 97       	sbiw	r28, 0x22	; 34
    4382:	a3 96       	adiw	r28, 0x23	; 35
    4384:	9f ad       	ldd	r25, Y+63	; 0x3f
    4386:	a3 97       	sbiw	r28, 0x23	; 35
    4388:	62 96       	adiw	r28, 0x12	; 18
    438a:	9f af       	std	Y+63, r25	; 0x3f
    438c:	62 97       	sbiw	r28, 0x12	; 18
    438e:	8f 8d       	ldd	r24, Y+31	; 0x1f
    4390:	9f 89       	ldd	r25, Y+23	; 0x17
    4392:	89 0f       	add	r24, r25
    4394:	63 96       	adiw	r28, 0x13	; 19
    4396:	8f af       	std	Y+63, r24	; 0x3f
    4398:	63 97       	sbiw	r28, 0x13	; 19
    439a:	81 e0       	ldi	r24, 0x01	; 1
    439c:	a5 96       	adiw	r28, 0x25	; 37
    439e:	8f af       	std	Y+63, r24	; 0x3f
    43a0:	a5 97       	sbiw	r28, 0x25	; 37
    43a2:	63 96       	adiw	r28, 0x13	; 19
    43a4:	9f ad       	ldd	r25, Y+63	; 0x3f
    43a6:	63 97       	sbiw	r28, 0x13	; 19
    43a8:	8f 8d       	ldd	r24, Y+31	; 0x1f
    43aa:	98 17       	cp	r25, r24
    43ac:	18 f0       	brcs	.+6      	; 0x43b4 <CLCD_voidSendNumber+0x624>
    43ae:	a5 96       	adiw	r28, 0x25	; 37
    43b0:	1f ae       	std	Y+63, r1	; 0x3f
    43b2:	a5 97       	sbiw	r28, 0x25	; 37
    43b4:	a2 96       	adiw	r28, 0x22	; 34
    43b6:	9f ad       	ldd	r25, Y+63	; 0x3f
    43b8:	a2 97       	sbiw	r28, 0x22	; 34
    43ba:	63 96       	adiw	r28, 0x13	; 19
    43bc:	8f ad       	ldd	r24, Y+63	; 0x3f
    43be:	63 97       	sbiw	r28, 0x13	; 19
    43c0:	98 0f       	add	r25, r24
    43c2:	a6 96       	adiw	r28, 0x26	; 38
    43c4:	9f af       	std	Y+63, r25	; 0x3f
    43c6:	a6 97       	sbiw	r28, 0x26	; 38
    43c8:	91 e0       	ldi	r25, 0x01	; 1
    43ca:	a7 96       	adiw	r28, 0x27	; 39
    43cc:	9f af       	std	Y+63, r25	; 0x3f
    43ce:	a7 97       	sbiw	r28, 0x27	; 39
    43d0:	a6 96       	adiw	r28, 0x26	; 38
    43d2:	8f ad       	ldd	r24, Y+63	; 0x3f
    43d4:	a6 97       	sbiw	r28, 0x26	; 38
    43d6:	63 96       	adiw	r28, 0x13	; 19
    43d8:	9f ad       	ldd	r25, Y+63	; 0x3f
    43da:	63 97       	sbiw	r28, 0x13	; 19
    43dc:	89 17       	cp	r24, r25
    43de:	18 f0       	brcs	.+6      	; 0x43e6 <CLCD_voidSendNumber+0x656>
    43e0:	a7 96       	adiw	r28, 0x27	; 39
    43e2:	1f ae       	std	Y+63, r1	; 0x3f
    43e4:	a7 97       	sbiw	r28, 0x27	; 39
    43e6:	a5 96       	adiw	r28, 0x25	; 37
    43e8:	8f ad       	ldd	r24, Y+63	; 0x3f
    43ea:	a5 97       	sbiw	r28, 0x25	; 37
    43ec:	a7 96       	adiw	r28, 0x27	; 39
    43ee:	9f ad       	ldd	r25, Y+63	; 0x3f
    43f0:	a7 97       	sbiw	r28, 0x27	; 39
    43f2:	89 2b       	or	r24, r25
    43f4:	a5 96       	adiw	r28, 0x25	; 37
    43f6:	8f af       	std	Y+63, r24	; 0x3f
    43f8:	a5 97       	sbiw	r28, 0x25	; 37
    43fa:	a6 96       	adiw	r28, 0x26	; 38
    43fc:	8f ad       	ldd	r24, Y+63	; 0x3f
    43fe:	a6 97       	sbiw	r28, 0x26	; 38
    4400:	63 96       	adiw	r28, 0x13	; 19
    4402:	8f af       	std	Y+63, r24	; 0x3f
    4404:	63 97       	sbiw	r28, 0x13	; 19
    4406:	98 a1       	ldd	r25, Y+32	; 0x20
    4408:	88 8d       	ldd	r24, Y+24	; 0x18
    440a:	98 0f       	add	r25, r24
    440c:	64 96       	adiw	r28, 0x14	; 20
    440e:	9f af       	std	Y+63, r25	; 0x3f
    4410:	64 97       	sbiw	r28, 0x14	; 20
    4412:	a5 96       	adiw	r28, 0x25	; 37
    4414:	8f ad       	ldd	r24, Y+63	; 0x3f
    4416:	a5 97       	sbiw	r28, 0x25	; 37
    4418:	64 96       	adiw	r28, 0x14	; 20
    441a:	9f ad       	ldd	r25, Y+63	; 0x3f
    441c:	64 97       	sbiw	r28, 0x14	; 20
    441e:	89 0f       	add	r24, r25
    4420:	64 96       	adiw	r28, 0x14	; 20
    4422:	8f af       	std	Y+63, r24	; 0x3f
    4424:	64 97       	sbiw	r28, 0x14	; 20
    4426:	2d 96       	adiw	r28, 0x0d	; 13
    4428:	8f ad       	ldd	r24, Y+63	; 0x3f
    442a:	2d 97       	sbiw	r28, 0x0d	; 13
    442c:	89 83       	std	Y+1, r24	; 0x01
    442e:	2e 96       	adiw	r28, 0x0e	; 14
    4430:	9f ad       	ldd	r25, Y+63	; 0x3f
    4432:	2e 97       	sbiw	r28, 0x0e	; 14
    4434:	9a 83       	std	Y+2, r25	; 0x02
    4436:	2f 96       	adiw	r28, 0x0f	; 15
    4438:	8f ad       	ldd	r24, Y+63	; 0x3f
    443a:	2f 97       	sbiw	r28, 0x0f	; 15
    443c:	8b 83       	std	Y+3, r24	; 0x03
    443e:	60 96       	adiw	r28, 0x10	; 16
    4440:	9f ad       	ldd	r25, Y+63	; 0x3f
    4442:	60 97       	sbiw	r28, 0x10	; 16
    4444:	9c 83       	std	Y+4, r25	; 0x04
    4446:	61 96       	adiw	r28, 0x11	; 17
    4448:	8f ad       	ldd	r24, Y+63	; 0x3f
    444a:	61 97       	sbiw	r28, 0x11	; 17
    444c:	8d 83       	std	Y+5, r24	; 0x05
    444e:	62 96       	adiw	r28, 0x12	; 18
    4450:	9f ad       	ldd	r25, Y+63	; 0x3f
    4452:	62 97       	sbiw	r28, 0x12	; 18
    4454:	9e 83       	std	Y+6, r25	; 0x06
    4456:	63 96       	adiw	r28, 0x13	; 19
    4458:	8f ad       	ldd	r24, Y+63	; 0x3f
    445a:	63 97       	sbiw	r28, 0x13	; 19
    445c:	8f 83       	std	Y+7, r24	; 0x07
    445e:	64 96       	adiw	r28, 0x14	; 20
    4460:	9f ad       	ldd	r25, Y+63	; 0x3f
    4462:	64 97       	sbiw	r28, 0x14	; 20
    4464:	98 87       	std	Y+8, r25	; 0x08
			Copy_u64Number/=10;
    4466:	a9 84       	ldd	r10, Y+9	; 0x09
    4468:	ba 84       	ldd	r11, Y+10	; 0x0a
    446a:	cb 84       	ldd	r12, Y+11	; 0x0b
    446c:	dc 84       	ldd	r13, Y+12	; 0x0c
    446e:	ed 84       	ldd	r14, Y+13	; 0x0d
    4470:	fe 84       	ldd	r15, Y+14	; 0x0e
    4472:	0f 85       	ldd	r16, Y+15	; 0x0f
    4474:	18 89       	ldd	r17, Y+16	; 0x10
    4476:	2a 2d       	mov	r18, r10
    4478:	3b 2d       	mov	r19, r11
    447a:	4c 2d       	mov	r20, r12
    447c:	5d 2d       	mov	r21, r13
    447e:	6e 2d       	mov	r22, r14
    4480:	7f 2d       	mov	r23, r15
    4482:	80 2f       	mov	r24, r16
    4484:	91 2f       	mov	r25, r17
    4486:	0f 2e       	mov	r0, r31
    4488:	fa e0       	ldi	r31, 0x0A	; 10
    448a:	af 2e       	mov	r10, r31
    448c:	f0 2d       	mov	r31, r0
    448e:	bb 24       	eor	r11, r11
    4490:	cc 24       	eor	r12, r12
    4492:	dd 24       	eor	r13, r13
    4494:	ee 24       	eor	r14, r14
    4496:	ff 24       	eor	r15, r15
    4498:	00 e0       	ldi	r16, 0x00	; 0
    449a:	10 e0       	ldi	r17, 0x00	; 0
    449c:	0e 94 9c 01 	call	0x338	; 0x338 <__udivdi3>
    44a0:	a2 2e       	mov	r10, r18
    44a2:	b3 2e       	mov	r11, r19
    44a4:	c4 2e       	mov	r12, r20
    44a6:	d5 2e       	mov	r13, r21
    44a8:	e6 2e       	mov	r14, r22
    44aa:	f7 2e       	mov	r15, r23
    44ac:	08 2f       	mov	r16, r24
    44ae:	19 2f       	mov	r17, r25
    44b0:	a9 86       	std	Y+9, r10	; 0x09
    44b2:	ba 86       	std	Y+10, r11	; 0x0a
    44b4:	cb 86       	std	Y+11, r12	; 0x0b
    44b6:	dc 86       	std	Y+12, r13	; 0x0c
    44b8:	ed 86       	std	Y+13, r14	; 0x0d
    44ba:	fe 86       	std	Y+14, r15	; 0x0e
    44bc:	0f 87       	std	Y+15, r16	; 0x0f
    44be:	18 8b       	std	Y+16, r17	; 0x10
		CLCD_voidSendCharacter('0');
	}
	else
	{

		while(Copy_u64Number != 0)
    44c0:	89 85       	ldd	r24, Y+9	; 0x09
    44c2:	9a 85       	ldd	r25, Y+10	; 0x0a
    44c4:	89 2b       	or	r24, r25
    44c6:	9b 85       	ldd	r25, Y+11	; 0x0b
    44c8:	89 2b       	or	r24, r25
    44ca:	9c 85       	ldd	r25, Y+12	; 0x0c
    44cc:	89 2b       	or	r24, r25
    44ce:	9d 85       	ldd	r25, Y+13	; 0x0d
    44d0:	89 2b       	or	r24, r25
    44d2:	9e 85       	ldd	r25, Y+14	; 0x0e
    44d4:	89 2b       	or	r24, r25
    44d6:	9f 85       	ldd	r25, Y+15	; 0x0f
    44d8:	89 2b       	or	r24, r25
    44da:	98 89       	ldd	r25, Y+16	; 0x10
    44dc:	89 2b       	or	r24, r25
    44de:	88 23       	and	r24, r24
    44e0:	09 f0       	breq	.+2      	; 0x44e4 <CLCD_voidSendNumber+0x754>
    44e2:	90 cc       	rjmp	.-1760   	; 0x3e04 <CLCD_voidSendNumber+0x74>
    44e4:	5e c0       	rjmp	.+188    	; 0x45a2 <CLCD_voidSendNumber+0x812>
			LOC_u64Reversed = (LOC_u64Reversed*10) + (Copy_u64Number%10);
			Copy_u64Number/=10;
		}
		while(LOC_u64Reversed != 1)
		{
			CLCD_voidSendCharacter( ( LOC_u64Reversed%10) + 48 );
    44e6:	a9 80       	ldd	r10, Y+1	; 0x01
    44e8:	ba 80       	ldd	r11, Y+2	; 0x02
    44ea:	cb 80       	ldd	r12, Y+3	; 0x03
    44ec:	dc 80       	ldd	r13, Y+4	; 0x04
    44ee:	ed 80       	ldd	r14, Y+5	; 0x05
    44f0:	fe 80       	ldd	r15, Y+6	; 0x06
    44f2:	0f 81       	ldd	r16, Y+7	; 0x07
    44f4:	18 85       	ldd	r17, Y+8	; 0x08
    44f6:	2a 2d       	mov	r18, r10
    44f8:	3b 2d       	mov	r19, r11
    44fa:	4c 2d       	mov	r20, r12
    44fc:	5d 2d       	mov	r21, r13
    44fe:	6e 2d       	mov	r22, r14
    4500:	7f 2d       	mov	r23, r15
    4502:	80 2f       	mov	r24, r16
    4504:	91 2f       	mov	r25, r17
    4506:	0f 2e       	mov	r0, r31
    4508:	fa e0       	ldi	r31, 0x0A	; 10
    450a:	af 2e       	mov	r10, r31
    450c:	f0 2d       	mov	r31, r0
    450e:	bb 24       	eor	r11, r11
    4510:	cc 24       	eor	r12, r12
    4512:	dd 24       	eor	r13, r13
    4514:	ee 24       	eor	r14, r14
    4516:	ff 24       	eor	r15, r15
    4518:	00 e0       	ldi	r16, 0x00	; 0
    451a:	10 e0       	ldi	r17, 0x00	; 0
    451c:	0e 94 11 08 	call	0x1022	; 0x1022 <__umoddi3>
    4520:	a2 2e       	mov	r10, r18
    4522:	b3 2e       	mov	r11, r19
    4524:	c4 2e       	mov	r12, r20
    4526:	d5 2e       	mov	r13, r21
    4528:	e6 2e       	mov	r14, r22
    452a:	f7 2e       	mov	r15, r23
    452c:	08 2f       	mov	r16, r24
    452e:	19 2f       	mov	r17, r25
    4530:	2a 2d       	mov	r18, r10
    4532:	3b 2d       	mov	r19, r11
    4534:	4c 2d       	mov	r20, r12
    4536:	5d 2d       	mov	r21, r13
    4538:	6e 2d       	mov	r22, r14
    453a:	7f 2d       	mov	r23, r15
    453c:	80 2f       	mov	r24, r16
    453e:	91 2f       	mov	r25, r17
    4540:	82 2f       	mov	r24, r18
    4542:	80 5d       	subi	r24, 0xD0	; 208
    4544:	0e 94 84 1e 	call	0x3d08	; 0x3d08 <CLCD_voidSendCharacter>
			LOC_u64Reversed/=10;
    4548:	a9 80       	ldd	r10, Y+1	; 0x01
    454a:	ba 80       	ldd	r11, Y+2	; 0x02
    454c:	cb 80       	ldd	r12, Y+3	; 0x03
    454e:	dc 80       	ldd	r13, Y+4	; 0x04
    4550:	ed 80       	ldd	r14, Y+5	; 0x05
    4552:	fe 80       	ldd	r15, Y+6	; 0x06
    4554:	0f 81       	ldd	r16, Y+7	; 0x07
    4556:	18 85       	ldd	r17, Y+8	; 0x08
    4558:	2a 2d       	mov	r18, r10
    455a:	3b 2d       	mov	r19, r11
    455c:	4c 2d       	mov	r20, r12
    455e:	5d 2d       	mov	r21, r13
    4560:	6e 2d       	mov	r22, r14
    4562:	7f 2d       	mov	r23, r15
    4564:	80 2f       	mov	r24, r16
    4566:	91 2f       	mov	r25, r17
    4568:	0f 2e       	mov	r0, r31
    456a:	fa e0       	ldi	r31, 0x0A	; 10
    456c:	af 2e       	mov	r10, r31
    456e:	f0 2d       	mov	r31, r0
    4570:	bb 24       	eor	r11, r11
    4572:	cc 24       	eor	r12, r12
    4574:	dd 24       	eor	r13, r13
    4576:	ee 24       	eor	r14, r14
    4578:	ff 24       	eor	r15, r15
    457a:	00 e0       	ldi	r16, 0x00	; 0
    457c:	10 e0       	ldi	r17, 0x00	; 0
    457e:	0e 94 9c 01 	call	0x338	; 0x338 <__udivdi3>
    4582:	a2 2e       	mov	r10, r18
    4584:	b3 2e       	mov	r11, r19
    4586:	c4 2e       	mov	r12, r20
    4588:	d5 2e       	mov	r13, r21
    458a:	e6 2e       	mov	r14, r22
    458c:	f7 2e       	mov	r15, r23
    458e:	08 2f       	mov	r16, r24
    4590:	19 2f       	mov	r17, r25
    4592:	a9 82       	std	Y+1, r10	; 0x01
    4594:	ba 82       	std	Y+2, r11	; 0x02
    4596:	cb 82       	std	Y+3, r12	; 0x03
    4598:	dc 82       	std	Y+4, r13	; 0x04
    459a:	ed 82       	std	Y+5, r14	; 0x05
    459c:	fe 82       	std	Y+6, r15	; 0x06
    459e:	0f 83       	std	Y+7, r16	; 0x07
    45a0:	18 87       	std	Y+8, r17	; 0x08
		while(Copy_u64Number != 0)
		{
			LOC_u64Reversed = (LOC_u64Reversed*10) + (Copy_u64Number%10);
			Copy_u64Number/=10;
		}
		while(LOC_u64Reversed != 1)
    45a2:	89 81       	ldd	r24, Y+1	; 0x01
    45a4:	81 30       	cpi	r24, 0x01	; 1
    45a6:	09 f0       	breq	.+2      	; 0x45aa <CLCD_voidSendNumber+0x81a>
    45a8:	9e cf       	rjmp	.-196    	; 0x44e6 <CLCD_voidSendNumber+0x756>
    45aa:	8a 81       	ldd	r24, Y+2	; 0x02
    45ac:	88 23       	and	r24, r24
    45ae:	09 f0       	breq	.+2      	; 0x45b2 <CLCD_voidSendNumber+0x822>
    45b0:	9a cf       	rjmp	.-204    	; 0x44e6 <CLCD_voidSendNumber+0x756>
    45b2:	8b 81       	ldd	r24, Y+3	; 0x03
    45b4:	88 23       	and	r24, r24
    45b6:	09 f0       	breq	.+2      	; 0x45ba <CLCD_voidSendNumber+0x82a>
    45b8:	96 cf       	rjmp	.-212    	; 0x44e6 <CLCD_voidSendNumber+0x756>
    45ba:	8c 81       	ldd	r24, Y+4	; 0x04
    45bc:	88 23       	and	r24, r24
    45be:	09 f0       	breq	.+2      	; 0x45c2 <CLCD_voidSendNumber+0x832>
    45c0:	92 cf       	rjmp	.-220    	; 0x44e6 <CLCD_voidSendNumber+0x756>
    45c2:	8d 81       	ldd	r24, Y+5	; 0x05
    45c4:	88 23       	and	r24, r24
    45c6:	09 f0       	breq	.+2      	; 0x45ca <CLCD_voidSendNumber+0x83a>
    45c8:	8e cf       	rjmp	.-228    	; 0x44e6 <CLCD_voidSendNumber+0x756>
    45ca:	8e 81       	ldd	r24, Y+6	; 0x06
    45cc:	88 23       	and	r24, r24
    45ce:	09 f0       	breq	.+2      	; 0x45d2 <CLCD_voidSendNumber+0x842>
    45d0:	8a cf       	rjmp	.-236    	; 0x44e6 <CLCD_voidSendNumber+0x756>
    45d2:	8f 81       	ldd	r24, Y+7	; 0x07
    45d4:	88 23       	and	r24, r24
    45d6:	09 f0       	breq	.+2      	; 0x45da <CLCD_voidSendNumber+0x84a>
    45d8:	86 cf       	rjmp	.-244    	; 0x44e6 <CLCD_voidSendNumber+0x756>
    45da:	88 85       	ldd	r24, Y+8	; 0x08
    45dc:	88 23       	and	r24, r24
    45de:	09 f0       	breq	.+2      	; 0x45e2 <CLCD_voidSendNumber+0x852>
    45e0:	82 cf       	rjmp	.-252    	; 0x44e6 <CLCD_voidSendNumber+0x756>
		{
			CLCD_voidSendCharacter( ( LOC_u64Reversed%10) + 48 );
			LOC_u64Reversed/=10;
		}
	}
}
    45e2:	ca 59       	subi	r28, 0x9A	; 154
    45e4:	df 4f       	sbci	r29, 0xFF	; 255
    45e6:	0f b6       	in	r0, 0x3f	; 63
    45e8:	f8 94       	cli
    45ea:	de bf       	out	0x3e, r29	; 62
    45ec:	0f be       	out	0x3f, r0	; 63
    45ee:	cd bf       	out	0x3d, r28	; 61
    45f0:	cf 91       	pop	r28
    45f2:	df 91       	pop	r29
    45f4:	1f 91       	pop	r17
    45f6:	0f 91       	pop	r16
    45f8:	ff 90       	pop	r15
    45fa:	ef 90       	pop	r14
    45fc:	df 90       	pop	r13
    45fe:	cf 90       	pop	r12
    4600:	bf 90       	pop	r11
    4602:	af 90       	pop	r10
    4604:	08 95       	ret

00004606 <CLCD_voidSendFloatNumber>:

void CLCD_voidSendFloatNumber(f64 Copy_f32Number)
{
    4606:	2f 92       	push	r2
    4608:	3f 92       	push	r3
    460a:	4f 92       	push	r4
    460c:	5f 92       	push	r5
    460e:	6f 92       	push	r6
    4610:	7f 92       	push	r7
    4612:	8f 92       	push	r8
    4614:	9f 92       	push	r9
    4616:	af 92       	push	r10
    4618:	bf 92       	push	r11
    461a:	cf 92       	push	r12
    461c:	df 92       	push	r13
    461e:	ef 92       	push	r14
    4620:	ff 92       	push	r15
    4622:	0f 93       	push	r16
    4624:	1f 93       	push	r17
    4626:	df 93       	push	r29
    4628:	cf 93       	push	r28
    462a:	cd b7       	in	r28, 0x3d	; 61
    462c:	de b7       	in	r29, 0x3e	; 62
    462e:	ef 97       	sbiw	r28, 0x3f	; 63
    4630:	0f b6       	in	r0, 0x3f	; 63
    4632:	f8 94       	cli
    4634:	de bf       	out	0x3e, r29	; 62
    4636:	0f be       	out	0x3f, r0	; 63
    4638:	cd bf       	out	0x3d, r28	; 61
    463a:	69 87       	std	Y+9, r22	; 0x09
    463c:	7a 87       	std	Y+10, r23	; 0x0a
    463e:	8b 87       	std	Y+11, r24	; 0x0b
    4640:	9c 87       	std	Y+12, r25	; 0x0c
	// Cast the float Number to Integer value (ex: 25.6942325 --> 25)
	CLCD_voidSendNumber((u64)Copy_f32Number ); // Send the integer Number to the LCD
    4642:	69 85       	ldd	r22, Y+9	; 0x09
    4644:	7a 85       	ldd	r23, Y+10	; 0x0a
    4646:	8b 85       	ldd	r24, Y+11	; 0x0b
    4648:	9c 85       	ldd	r25, Y+12	; 0x0c
    464a:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <__fixunssfdi>
    464e:	a2 2e       	mov	r10, r18
    4650:	b3 2e       	mov	r11, r19
    4652:	c4 2e       	mov	r12, r20
    4654:	d5 2e       	mov	r13, r21
    4656:	e6 2e       	mov	r14, r22
    4658:	f7 2e       	mov	r15, r23
    465a:	08 2f       	mov	r16, r24
    465c:	19 2f       	mov	r17, r25
    465e:	2a 2d       	mov	r18, r10
    4660:	3b 2d       	mov	r19, r11
    4662:	4c 2d       	mov	r20, r12
    4664:	5d 2d       	mov	r21, r13
    4666:	6e 2d       	mov	r22, r14
    4668:	7f 2d       	mov	r23, r15
    466a:	80 2f       	mov	r24, r16
    466c:	91 2f       	mov	r25, r17
    466e:	0e 94 c8 1e 	call	0x3d90	; 0x3d90 <CLCD_voidSendNumber>
	CLCD_voidSendCharacter('.'); // Send the decimal point
    4672:	8e e2       	ldi	r24, 0x2E	; 46
    4674:	0e 94 84 1e 	call	0x3d08	; 0x3d08 <CLCD_voidSendCharacter>
	// Multiply the Float Number by 10^6 so the decimal number becomes part of the number
	//(ex: 25.6942325--> 25694232.5
	// save the result as integer"saved in u64" (ex: 25.6942325--> 25694232
	u64 Local_u64tempNumber = Copy_f32Number*1000000;
    4678:	69 85       	ldd	r22, Y+9	; 0x09
    467a:	7a 85       	ldd	r23, Y+10	; 0x0a
    467c:	8b 85       	ldd	r24, Y+11	; 0x0b
    467e:	9c 85       	ldd	r25, Y+12	; 0x0c
    4680:	20 e0       	ldi	r18, 0x00	; 0
    4682:	34 e2       	ldi	r19, 0x24	; 36
    4684:	44 e7       	ldi	r20, 0x74	; 116
    4686:	59 e4       	ldi	r21, 0x49	; 73
    4688:	0e 94 2b 10 	call	0x2056	; 0x2056 <__mulsf3>
    468c:	dc 01       	movw	r26, r24
    468e:	cb 01       	movw	r24, r22
    4690:	bc 01       	movw	r22, r24
    4692:	cd 01       	movw	r24, r26
    4694:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <__fixunssfdi>
    4698:	a2 2e       	mov	r10, r18
    469a:	b3 2e       	mov	r11, r19
    469c:	c4 2e       	mov	r12, r20
    469e:	d5 2e       	mov	r13, r21
    46a0:	e6 2e       	mov	r14, r22
    46a2:	f7 2e       	mov	r15, r23
    46a4:	08 2f       	mov	r16, r24
    46a6:	19 2f       	mov	r17, r25
    46a8:	a9 82       	std	Y+1, r10	; 0x01
    46aa:	ba 82       	std	Y+2, r11	; 0x02
    46ac:	cb 82       	std	Y+3, r12	; 0x03
    46ae:	dc 82       	std	Y+4, r13	; 0x04
    46b0:	ed 82       	std	Y+5, r14	; 0x05
    46b2:	fe 82       	std	Y+6, r15	; 0x06
    46b4:	0f 83       	std	Y+7, r16	; 0x07
    46b6:	18 87       	std	Y+8, r17	; 0x08
	// if the first digit is greater than or equal 5
	if( Local_u64tempNumber%10 >=5 )
    46b8:	a9 80       	ldd	r10, Y+1	; 0x01
    46ba:	ba 80       	ldd	r11, Y+2	; 0x02
    46bc:	cb 80       	ldd	r12, Y+3	; 0x03
    46be:	dc 80       	ldd	r13, Y+4	; 0x04
    46c0:	ed 80       	ldd	r14, Y+5	; 0x05
    46c2:	fe 80       	ldd	r15, Y+6	; 0x06
    46c4:	0f 81       	ldd	r16, Y+7	; 0x07
    46c6:	18 85       	ldd	r17, Y+8	; 0x08
    46c8:	2a 2d       	mov	r18, r10
    46ca:	3b 2d       	mov	r19, r11
    46cc:	4c 2d       	mov	r20, r12
    46ce:	5d 2d       	mov	r21, r13
    46d0:	6e 2d       	mov	r22, r14
    46d2:	7f 2d       	mov	r23, r15
    46d4:	80 2f       	mov	r24, r16
    46d6:	91 2f       	mov	r25, r17
    46d8:	0f 2e       	mov	r0, r31
    46da:	fa e0       	ldi	r31, 0x0A	; 10
    46dc:	af 2e       	mov	r10, r31
    46de:	f0 2d       	mov	r31, r0
    46e0:	bb 24       	eor	r11, r11
    46e2:	cc 24       	eor	r12, r12
    46e4:	dd 24       	eor	r13, r13
    46e6:	ee 24       	eor	r14, r14
    46e8:	ff 24       	eor	r15, r15
    46ea:	00 e0       	ldi	r16, 0x00	; 0
    46ec:	10 e0       	ldi	r17, 0x00	; 0
    46ee:	0e 94 11 08 	call	0x1022	; 0x1022 <__umoddi3>
    46f2:	a2 2e       	mov	r10, r18
    46f4:	b3 2e       	mov	r11, r19
    46f6:	c4 2e       	mov	r12, r20
    46f8:	d5 2e       	mov	r13, r21
    46fa:	e6 2e       	mov	r14, r22
    46fc:	f7 2e       	mov	r15, r23
    46fe:	08 2f       	mov	r16, r24
    4700:	19 2f       	mov	r17, r25
    4702:	ad 8a       	std	Y+21, r10	; 0x15
    4704:	be 8a       	std	Y+22, r11	; 0x16
    4706:	cf 8a       	std	Y+23, r12	; 0x17
    4708:	d8 8e       	std	Y+24, r13	; 0x18
    470a:	e9 8e       	std	Y+25, r14	; 0x19
    470c:	fa 8e       	std	Y+26, r15	; 0x1a
    470e:	0b 8f       	std	Y+27, r16	; 0x1b
    4710:	1c 8f       	std	Y+28, r17	; 0x1c
    4712:	8c 8d       	ldd	r24, Y+28	; 0x1c
    4714:	88 23       	and	r24, r24
    4716:	91 f5       	brne	.+100    	; 0x477c <CLCD_voidSendFloatNumber+0x176>
    4718:	9c 8d       	ldd	r25, Y+28	; 0x1c
    471a:	99 23       	and	r25, r25
    471c:	09 f0       	breq	.+2      	; 0x4720 <CLCD_voidSendFloatNumber+0x11a>
    471e:	5b c1       	rjmp	.+694    	; 0x49d6 <CLCD_voidSendFloatNumber+0x3d0>
    4720:	8b 8d       	ldd	r24, Y+27	; 0x1b
    4722:	88 23       	and	r24, r24
    4724:	59 f5       	brne	.+86     	; 0x477c <CLCD_voidSendFloatNumber+0x176>
    4726:	9b 8d       	ldd	r25, Y+27	; 0x1b
    4728:	99 23       	and	r25, r25
    472a:	09 f0       	breq	.+2      	; 0x472e <CLCD_voidSendFloatNumber+0x128>
    472c:	54 c1       	rjmp	.+680    	; 0x49d6 <CLCD_voidSendFloatNumber+0x3d0>
    472e:	8a 8d       	ldd	r24, Y+26	; 0x1a
    4730:	88 23       	and	r24, r24
    4732:	21 f5       	brne	.+72     	; 0x477c <CLCD_voidSendFloatNumber+0x176>
    4734:	9a 8d       	ldd	r25, Y+26	; 0x1a
    4736:	99 23       	and	r25, r25
    4738:	09 f0       	breq	.+2      	; 0x473c <CLCD_voidSendFloatNumber+0x136>
    473a:	4d c1       	rjmp	.+666    	; 0x49d6 <CLCD_voidSendFloatNumber+0x3d0>
    473c:	89 8d       	ldd	r24, Y+25	; 0x19
    473e:	88 23       	and	r24, r24
    4740:	e9 f4       	brne	.+58     	; 0x477c <CLCD_voidSendFloatNumber+0x176>
    4742:	99 8d       	ldd	r25, Y+25	; 0x19
    4744:	99 23       	and	r25, r25
    4746:	09 f0       	breq	.+2      	; 0x474a <CLCD_voidSendFloatNumber+0x144>
    4748:	46 c1       	rjmp	.+652    	; 0x49d6 <CLCD_voidSendFloatNumber+0x3d0>
    474a:	88 8d       	ldd	r24, Y+24	; 0x18
    474c:	88 23       	and	r24, r24
    474e:	b1 f4       	brne	.+44     	; 0x477c <CLCD_voidSendFloatNumber+0x176>
    4750:	98 8d       	ldd	r25, Y+24	; 0x18
    4752:	99 23       	and	r25, r25
    4754:	09 f0       	breq	.+2      	; 0x4758 <CLCD_voidSendFloatNumber+0x152>
    4756:	3f c1       	rjmp	.+638    	; 0x49d6 <CLCD_voidSendFloatNumber+0x3d0>
    4758:	8f 89       	ldd	r24, Y+23	; 0x17
    475a:	88 23       	and	r24, r24
    475c:	79 f4       	brne	.+30     	; 0x477c <CLCD_voidSendFloatNumber+0x176>
    475e:	9f 89       	ldd	r25, Y+23	; 0x17
    4760:	99 23       	and	r25, r25
    4762:	09 f0       	breq	.+2      	; 0x4766 <CLCD_voidSendFloatNumber+0x160>
    4764:	38 c1       	rjmp	.+624    	; 0x49d6 <CLCD_voidSendFloatNumber+0x3d0>
    4766:	8e 89       	ldd	r24, Y+22	; 0x16
    4768:	88 23       	and	r24, r24
    476a:	41 f4       	brne	.+16     	; 0x477c <CLCD_voidSendFloatNumber+0x176>
    476c:	9e 89       	ldd	r25, Y+22	; 0x16
    476e:	99 23       	and	r25, r25
    4770:	09 f0       	breq	.+2      	; 0x4774 <CLCD_voidSendFloatNumber+0x16e>
    4772:	31 c1       	rjmp	.+610    	; 0x49d6 <CLCD_voidSendFloatNumber+0x3d0>
    4774:	8d 89       	ldd	r24, Y+21	; 0x15
    4776:	85 30       	cpi	r24, 0x05	; 5
    4778:	08 f4       	brcc	.+2      	; 0x477c <CLCD_voidSendFloatNumber+0x176>
    477a:	2d c1       	rjmp	.+602    	; 0x49d6 <CLCD_voidSendFloatNumber+0x3d0>
	{
		// then divide the number by 10  (ex : 25694236 ---> 2569423 )
		// add 1 to the number to round the number up
		//then module the number by 100000  (ex : 2569423 ---> 69424 )
		CLCD_voidSendNumber((u64)((( Local_u64tempNumber/10)+1) % 100000));
    477c:	a9 80       	ldd	r10, Y+1	; 0x01
    477e:	ba 80       	ldd	r11, Y+2	; 0x02
    4780:	cb 80       	ldd	r12, Y+3	; 0x03
    4782:	dc 80       	ldd	r13, Y+4	; 0x04
    4784:	ed 80       	ldd	r14, Y+5	; 0x05
    4786:	fe 80       	ldd	r15, Y+6	; 0x06
    4788:	0f 81       	ldd	r16, Y+7	; 0x07
    478a:	18 85       	ldd	r17, Y+8	; 0x08
    478c:	2a 2d       	mov	r18, r10
    478e:	3b 2d       	mov	r19, r11
    4790:	4c 2d       	mov	r20, r12
    4792:	5d 2d       	mov	r21, r13
    4794:	6e 2d       	mov	r22, r14
    4796:	7f 2d       	mov	r23, r15
    4798:	80 2f       	mov	r24, r16
    479a:	91 2f       	mov	r25, r17
    479c:	0f 2e       	mov	r0, r31
    479e:	fa e0       	ldi	r31, 0x0A	; 10
    47a0:	af 2e       	mov	r10, r31
    47a2:	f0 2d       	mov	r31, r0
    47a4:	bb 24       	eor	r11, r11
    47a6:	cc 24       	eor	r12, r12
    47a8:	dd 24       	eor	r13, r13
    47aa:	ee 24       	eor	r14, r14
    47ac:	ff 24       	eor	r15, r15
    47ae:	00 e0       	ldi	r16, 0x00	; 0
    47b0:	10 e0       	ldi	r17, 0x00	; 0
    47b2:	0e 94 9c 01 	call	0x338	; 0x338 <__udivdi3>
    47b6:	a2 2e       	mov	r10, r18
    47b8:	b3 2e       	mov	r11, r19
    47ba:	c4 2e       	mov	r12, r20
    47bc:	d5 2e       	mov	r13, r21
    47be:	e6 2e       	mov	r14, r22
    47c0:	f7 2e       	mov	r15, r23
    47c2:	08 2f       	mov	r16, r24
    47c4:	19 2f       	mov	r17, r25
    47c6:	ad 86       	std	Y+13, r10	; 0x0d
    47c8:	be 86       	std	Y+14, r11	; 0x0e
    47ca:	cf 86       	std	Y+15, r12	; 0x0f
    47cc:	d8 8a       	std	Y+16, r13	; 0x10
    47ce:	e9 8a       	std	Y+17, r14	; 0x11
    47d0:	fa 8a       	std	Y+18, r15	; 0x12
    47d2:	0b 8b       	std	Y+19, r16	; 0x13
    47d4:	1c 8b       	std	Y+20, r17	; 0x14
    47d6:	91 e0       	ldi	r25, 0x01	; 1
    47d8:	9d 8f       	std	Y+29, r25	; 0x1d
    47da:	1e 8e       	std	Y+30, r1	; 0x1e
    47dc:	1f 8e       	std	Y+31, r1	; 0x1f
    47de:	18 a2       	std	Y+32, r1	; 0x20
    47e0:	19 a2       	std	Y+33, r1	; 0x21
    47e2:	1a a2       	std	Y+34, r1	; 0x22
    47e4:	1b a2       	std	Y+35, r1	; 0x23
    47e6:	1c a2       	std	Y+36, r1	; 0x24
    47e8:	8d 85       	ldd	r24, Y+13	; 0x0d
    47ea:	9d 8d       	ldd	r25, Y+29	; 0x1d
    47ec:	89 0f       	add	r24, r25
    47ee:	8d a3       	std	Y+37, r24	; 0x25
    47f0:	81 e0       	ldi	r24, 0x01	; 1
    47f2:	8d a7       	std	Y+45, r24	; 0x2d
    47f4:	9d a1       	ldd	r25, Y+37	; 0x25
    47f6:	8d 85       	ldd	r24, Y+13	; 0x0d
    47f8:	98 17       	cp	r25, r24
    47fa:	08 f0       	brcs	.+2      	; 0x47fe <CLCD_voidSendFloatNumber+0x1f8>
    47fc:	1d a6       	std	Y+45, r1	; 0x2d
    47fe:	9e 85       	ldd	r25, Y+14	; 0x0e
    4800:	8e 8d       	ldd	r24, Y+30	; 0x1e
    4802:	98 0f       	add	r25, r24
    4804:	9e a3       	std	Y+38, r25	; 0x26
    4806:	91 e0       	ldi	r25, 0x01	; 1
    4808:	9e a7       	std	Y+46, r25	; 0x2e
    480a:	8e a1       	ldd	r24, Y+38	; 0x26
    480c:	9e 85       	ldd	r25, Y+14	; 0x0e
    480e:	89 17       	cp	r24, r25
    4810:	08 f0       	brcs	.+2      	; 0x4814 <CLCD_voidSendFloatNumber+0x20e>
    4812:	1e a6       	std	Y+46, r1	; 0x2e
    4814:	8d a5       	ldd	r24, Y+45	; 0x2d
    4816:	9e a1       	ldd	r25, Y+38	; 0x26
    4818:	89 0f       	add	r24, r25
    481a:	8f a7       	std	Y+47, r24	; 0x2f
    481c:	81 e0       	ldi	r24, 0x01	; 1
    481e:	88 ab       	std	Y+48, r24	; 0x30
    4820:	9f a5       	ldd	r25, Y+47	; 0x2f
    4822:	8e a1       	ldd	r24, Y+38	; 0x26
    4824:	98 17       	cp	r25, r24
    4826:	08 f0       	brcs	.+2      	; 0x482a <CLCD_voidSendFloatNumber+0x224>
    4828:	18 aa       	std	Y+48, r1	; 0x30
    482a:	9e a5       	ldd	r25, Y+46	; 0x2e
    482c:	88 a9       	ldd	r24, Y+48	; 0x30
    482e:	98 2b       	or	r25, r24
    4830:	9e a7       	std	Y+46, r25	; 0x2e
    4832:	9f a5       	ldd	r25, Y+47	; 0x2f
    4834:	9e a3       	std	Y+38, r25	; 0x26
    4836:	8f 85       	ldd	r24, Y+15	; 0x0f
    4838:	9f 8d       	ldd	r25, Y+31	; 0x1f
    483a:	89 0f       	add	r24, r25
    483c:	8f a3       	std	Y+39, r24	; 0x27
    483e:	81 e0       	ldi	r24, 0x01	; 1
    4840:	89 ab       	std	Y+49, r24	; 0x31
    4842:	9f a1       	ldd	r25, Y+39	; 0x27
    4844:	8f 85       	ldd	r24, Y+15	; 0x0f
    4846:	98 17       	cp	r25, r24
    4848:	08 f0       	brcs	.+2      	; 0x484c <CLCD_voidSendFloatNumber+0x246>
    484a:	19 aa       	std	Y+49, r1	; 0x31
    484c:	9e a5       	ldd	r25, Y+46	; 0x2e
    484e:	8f a1       	ldd	r24, Y+39	; 0x27
    4850:	98 0f       	add	r25, r24
    4852:	9a ab       	std	Y+50, r25	; 0x32
    4854:	91 e0       	ldi	r25, 0x01	; 1
    4856:	9b ab       	std	Y+51, r25	; 0x33
    4858:	8a a9       	ldd	r24, Y+50	; 0x32
    485a:	9f a1       	ldd	r25, Y+39	; 0x27
    485c:	89 17       	cp	r24, r25
    485e:	08 f0       	brcs	.+2      	; 0x4862 <CLCD_voidSendFloatNumber+0x25c>
    4860:	1b aa       	std	Y+51, r1	; 0x33
    4862:	89 a9       	ldd	r24, Y+49	; 0x31
    4864:	9b a9       	ldd	r25, Y+51	; 0x33
    4866:	89 2b       	or	r24, r25
    4868:	89 ab       	std	Y+49, r24	; 0x31
    486a:	8a a9       	ldd	r24, Y+50	; 0x32
    486c:	8f a3       	std	Y+39, r24	; 0x27
    486e:	98 89       	ldd	r25, Y+16	; 0x10
    4870:	88 a1       	ldd	r24, Y+32	; 0x20
    4872:	98 0f       	add	r25, r24
    4874:	98 a7       	std	Y+40, r25	; 0x28
    4876:	91 e0       	ldi	r25, 0x01	; 1
    4878:	9c ab       	std	Y+52, r25	; 0x34
    487a:	88 a5       	ldd	r24, Y+40	; 0x28
    487c:	98 89       	ldd	r25, Y+16	; 0x10
    487e:	89 17       	cp	r24, r25
    4880:	08 f0       	brcs	.+2      	; 0x4884 <CLCD_voidSendFloatNumber+0x27e>
    4882:	1c aa       	std	Y+52, r1	; 0x34
    4884:	89 a9       	ldd	r24, Y+49	; 0x31
    4886:	98 a5       	ldd	r25, Y+40	; 0x28
    4888:	89 0f       	add	r24, r25
    488a:	8d ab       	std	Y+53, r24	; 0x35
    488c:	81 e0       	ldi	r24, 0x01	; 1
    488e:	8e ab       	std	Y+54, r24	; 0x36
    4890:	9d a9       	ldd	r25, Y+53	; 0x35
    4892:	88 a5       	ldd	r24, Y+40	; 0x28
    4894:	98 17       	cp	r25, r24
    4896:	08 f0       	brcs	.+2      	; 0x489a <CLCD_voidSendFloatNumber+0x294>
    4898:	1e aa       	std	Y+54, r1	; 0x36
    489a:	9c a9       	ldd	r25, Y+52	; 0x34
    489c:	8e a9       	ldd	r24, Y+54	; 0x36
    489e:	98 2b       	or	r25, r24
    48a0:	9c ab       	std	Y+52, r25	; 0x34
    48a2:	9d a9       	ldd	r25, Y+53	; 0x35
    48a4:	98 a7       	std	Y+40, r25	; 0x28
    48a6:	89 89       	ldd	r24, Y+17	; 0x11
    48a8:	99 a1       	ldd	r25, Y+33	; 0x21
    48aa:	89 0f       	add	r24, r25
    48ac:	89 a7       	std	Y+41, r24	; 0x29
    48ae:	81 e0       	ldi	r24, 0x01	; 1
    48b0:	8f ab       	std	Y+55, r24	; 0x37
    48b2:	99 a5       	ldd	r25, Y+41	; 0x29
    48b4:	89 89       	ldd	r24, Y+17	; 0x11
    48b6:	98 17       	cp	r25, r24
    48b8:	08 f0       	brcs	.+2      	; 0x48bc <CLCD_voidSendFloatNumber+0x2b6>
    48ba:	1f aa       	std	Y+55, r1	; 0x37
    48bc:	9c a9       	ldd	r25, Y+52	; 0x34
    48be:	89 a5       	ldd	r24, Y+41	; 0x29
    48c0:	98 0f       	add	r25, r24
    48c2:	98 af       	std	Y+56, r25	; 0x38
    48c4:	91 e0       	ldi	r25, 0x01	; 1
    48c6:	99 af       	std	Y+57, r25	; 0x39
    48c8:	88 ad       	ldd	r24, Y+56	; 0x38
    48ca:	99 a5       	ldd	r25, Y+41	; 0x29
    48cc:	89 17       	cp	r24, r25
    48ce:	08 f0       	brcs	.+2      	; 0x48d2 <CLCD_voidSendFloatNumber+0x2cc>
    48d0:	19 ae       	std	Y+57, r1	; 0x39
    48d2:	8f a9       	ldd	r24, Y+55	; 0x37
    48d4:	99 ad       	ldd	r25, Y+57	; 0x39
    48d6:	89 2b       	or	r24, r25
    48d8:	8f ab       	std	Y+55, r24	; 0x37
    48da:	88 ad       	ldd	r24, Y+56	; 0x38
    48dc:	89 a7       	std	Y+41, r24	; 0x29
    48de:	9a 89       	ldd	r25, Y+18	; 0x12
    48e0:	8a a1       	ldd	r24, Y+34	; 0x22
    48e2:	98 0f       	add	r25, r24
    48e4:	9a a7       	std	Y+42, r25	; 0x2a
    48e6:	91 e0       	ldi	r25, 0x01	; 1
    48e8:	9a af       	std	Y+58, r25	; 0x3a
    48ea:	8a a5       	ldd	r24, Y+42	; 0x2a
    48ec:	9a 89       	ldd	r25, Y+18	; 0x12
    48ee:	89 17       	cp	r24, r25
    48f0:	08 f0       	brcs	.+2      	; 0x48f4 <CLCD_voidSendFloatNumber+0x2ee>
    48f2:	1a ae       	std	Y+58, r1	; 0x3a
    48f4:	8f a9       	ldd	r24, Y+55	; 0x37
    48f6:	9a a5       	ldd	r25, Y+42	; 0x2a
    48f8:	89 0f       	add	r24, r25
    48fa:	8b af       	std	Y+59, r24	; 0x3b
    48fc:	81 e0       	ldi	r24, 0x01	; 1
    48fe:	8c af       	std	Y+60, r24	; 0x3c
    4900:	9b ad       	ldd	r25, Y+59	; 0x3b
    4902:	8a a5       	ldd	r24, Y+42	; 0x2a
    4904:	98 17       	cp	r25, r24
    4906:	08 f0       	brcs	.+2      	; 0x490a <CLCD_voidSendFloatNumber+0x304>
    4908:	1c ae       	std	Y+60, r1	; 0x3c
    490a:	9a ad       	ldd	r25, Y+58	; 0x3a
    490c:	8c ad       	ldd	r24, Y+60	; 0x3c
    490e:	98 2b       	or	r25, r24
    4910:	9a af       	std	Y+58, r25	; 0x3a
    4912:	9b ad       	ldd	r25, Y+59	; 0x3b
    4914:	9a a7       	std	Y+42, r25	; 0x2a
    4916:	8b 89       	ldd	r24, Y+19	; 0x13
    4918:	9b a1       	ldd	r25, Y+35	; 0x23
    491a:	89 0f       	add	r24, r25
    491c:	8b a7       	std	Y+43, r24	; 0x2b
    491e:	81 e0       	ldi	r24, 0x01	; 1
    4920:	8d af       	std	Y+61, r24	; 0x3d
    4922:	9b a5       	ldd	r25, Y+43	; 0x2b
    4924:	8b 89       	ldd	r24, Y+19	; 0x13
    4926:	98 17       	cp	r25, r24
    4928:	08 f0       	brcs	.+2      	; 0x492c <CLCD_voidSendFloatNumber+0x326>
    492a:	1d ae       	std	Y+61, r1	; 0x3d
    492c:	9a ad       	ldd	r25, Y+58	; 0x3a
    492e:	8b a5       	ldd	r24, Y+43	; 0x2b
    4930:	98 0f       	add	r25, r24
    4932:	9e af       	std	Y+62, r25	; 0x3e
    4934:	91 e0       	ldi	r25, 0x01	; 1
    4936:	9f af       	std	Y+63, r25	; 0x3f
    4938:	8e ad       	ldd	r24, Y+62	; 0x3e
    493a:	9b a5       	ldd	r25, Y+43	; 0x2b
    493c:	89 17       	cp	r24, r25
    493e:	08 f0       	brcs	.+2      	; 0x4942 <CLCD_voidSendFloatNumber+0x33c>
    4940:	1f ae       	std	Y+63, r1	; 0x3f
    4942:	8d ad       	ldd	r24, Y+61	; 0x3d
    4944:	9f ad       	ldd	r25, Y+63	; 0x3f
    4946:	89 2b       	or	r24, r25
    4948:	8d af       	std	Y+61, r24	; 0x3d
    494a:	8e ad       	ldd	r24, Y+62	; 0x3e
    494c:	8b a7       	std	Y+43, r24	; 0x2b
    494e:	9c 89       	ldd	r25, Y+20	; 0x14
    4950:	8c a1       	ldd	r24, Y+36	; 0x24
    4952:	98 0f       	add	r25, r24
    4954:	9c a7       	std	Y+44, r25	; 0x2c
    4956:	8d ad       	ldd	r24, Y+61	; 0x3d
    4958:	9c a5       	ldd	r25, Y+44	; 0x2c
    495a:	89 0f       	add	r24, r25
    495c:	8c a7       	std	Y+44, r24	; 0x2c
    495e:	ad a0       	ldd	r10, Y+37	; 0x25
    4960:	be a0       	ldd	r11, Y+38	; 0x26
    4962:	cf a0       	ldd	r12, Y+39	; 0x27
    4964:	d8 a4       	ldd	r13, Y+40	; 0x28
    4966:	e9 a4       	ldd	r14, Y+41	; 0x29
    4968:	fa a4       	ldd	r15, Y+42	; 0x2a
    496a:	0b a5       	ldd	r16, Y+43	; 0x2b
    496c:	1c a5       	ldd	r17, Y+44	; 0x2c
    496e:	2a 2d       	mov	r18, r10
    4970:	3b 2d       	mov	r19, r11
    4972:	4c 2d       	mov	r20, r12
    4974:	5d 2d       	mov	r21, r13
    4976:	6e 2d       	mov	r22, r14
    4978:	7f 2d       	mov	r23, r15
    497a:	80 2f       	mov	r24, r16
    497c:	91 2f       	mov	r25, r17
    497e:	0f 2e       	mov	r0, r31
    4980:	f0 ea       	ldi	r31, 0xA0	; 160
    4982:	af 2e       	mov	r10, r31
    4984:	f0 2d       	mov	r31, r0
    4986:	0f 2e       	mov	r0, r31
    4988:	f6 e8       	ldi	r31, 0x86	; 134
    498a:	bf 2e       	mov	r11, r31
    498c:	f0 2d       	mov	r31, r0
    498e:	cc 24       	eor	r12, r12
    4990:	c3 94       	inc	r12
    4992:	dd 24       	eor	r13, r13
    4994:	ee 24       	eor	r14, r14
    4996:	ff 24       	eor	r15, r15
    4998:	00 e0       	ldi	r16, 0x00	; 0
    499a:	10 e0       	ldi	r17, 0x00	; 0
    499c:	0e 94 11 08 	call	0x1022	; 0x1022 <__umoddi3>
    49a0:	22 2e       	mov	r2, r18
    49a2:	33 2e       	mov	r3, r19
    49a4:	44 2e       	mov	r4, r20
    49a6:	55 2e       	mov	r5, r21
    49a8:	66 2e       	mov	r6, r22
    49aa:	77 2e       	mov	r7, r23
    49ac:	88 2e       	mov	r8, r24
    49ae:	99 2e       	mov	r9, r25
    49b0:	a2 2c       	mov	r10, r2
    49b2:	b3 2c       	mov	r11, r3
    49b4:	c4 2c       	mov	r12, r4
    49b6:	d5 2c       	mov	r13, r5
    49b8:	e6 2c       	mov	r14, r6
    49ba:	f7 2c       	mov	r15, r7
    49bc:	08 2d       	mov	r16, r8
    49be:	19 2d       	mov	r17, r9
    49c0:	2a 2d       	mov	r18, r10
    49c2:	3b 2d       	mov	r19, r11
    49c4:	4c 2d       	mov	r20, r12
    49c6:	5d 2d       	mov	r21, r13
    49c8:	6e 2d       	mov	r22, r14
    49ca:	7f 2d       	mov	r23, r15
    49cc:	80 2f       	mov	r24, r16
    49ce:	91 2f       	mov	r25, r17
    49d0:	0e 94 c8 1e 	call	0x3d90	; 0x3d90 <CLCD_voidSendNumber>
    49d4:	60 c0       	rjmp	.+192    	; 0x4a96 <CLCD_voidSendFloatNumber+0x490>
	else
	{
		// then divide the number by 10  (ex : 25694232 ---> 2569423)
		// then module the number by 100000  (ex : 25694232 ---> 69423
		// Display the number
		CLCD_voidSendNumber((u64)(( Local_u64tempNumber/10) % 100000)); // Function to send the integer number
    49d6:	a9 80       	ldd	r10, Y+1	; 0x01
    49d8:	ba 80       	ldd	r11, Y+2	; 0x02
    49da:	cb 80       	ldd	r12, Y+3	; 0x03
    49dc:	dc 80       	ldd	r13, Y+4	; 0x04
    49de:	ed 80       	ldd	r14, Y+5	; 0x05
    49e0:	fe 80       	ldd	r15, Y+6	; 0x06
    49e2:	0f 81       	ldd	r16, Y+7	; 0x07
    49e4:	18 85       	ldd	r17, Y+8	; 0x08
    49e6:	2a 2d       	mov	r18, r10
    49e8:	3b 2d       	mov	r19, r11
    49ea:	4c 2d       	mov	r20, r12
    49ec:	5d 2d       	mov	r21, r13
    49ee:	6e 2d       	mov	r22, r14
    49f0:	7f 2d       	mov	r23, r15
    49f2:	80 2f       	mov	r24, r16
    49f4:	91 2f       	mov	r25, r17
    49f6:	0f 2e       	mov	r0, r31
    49f8:	fa e0       	ldi	r31, 0x0A	; 10
    49fa:	af 2e       	mov	r10, r31
    49fc:	f0 2d       	mov	r31, r0
    49fe:	bb 24       	eor	r11, r11
    4a00:	cc 24       	eor	r12, r12
    4a02:	dd 24       	eor	r13, r13
    4a04:	ee 24       	eor	r14, r14
    4a06:	ff 24       	eor	r15, r15
    4a08:	00 e0       	ldi	r16, 0x00	; 0
    4a0a:	10 e0       	ldi	r17, 0x00	; 0
    4a0c:	0e 94 9c 01 	call	0x338	; 0x338 <__udivdi3>
    4a10:	22 2e       	mov	r2, r18
    4a12:	33 2e       	mov	r3, r19
    4a14:	44 2e       	mov	r4, r20
    4a16:	55 2e       	mov	r5, r21
    4a18:	66 2e       	mov	r6, r22
    4a1a:	77 2e       	mov	r7, r23
    4a1c:	88 2e       	mov	r8, r24
    4a1e:	99 2e       	mov	r9, r25
    4a20:	a2 2c       	mov	r10, r2
    4a22:	b3 2c       	mov	r11, r3
    4a24:	c4 2c       	mov	r12, r4
    4a26:	d5 2c       	mov	r13, r5
    4a28:	e6 2c       	mov	r14, r6
    4a2a:	f7 2c       	mov	r15, r7
    4a2c:	08 2d       	mov	r16, r8
    4a2e:	19 2d       	mov	r17, r9
    4a30:	2a 2d       	mov	r18, r10
    4a32:	3b 2d       	mov	r19, r11
    4a34:	4c 2d       	mov	r20, r12
    4a36:	5d 2d       	mov	r21, r13
    4a38:	6e 2d       	mov	r22, r14
    4a3a:	7f 2d       	mov	r23, r15
    4a3c:	80 2f       	mov	r24, r16
    4a3e:	91 2f       	mov	r25, r17
    4a40:	0f 2e       	mov	r0, r31
    4a42:	f0 ea       	ldi	r31, 0xA0	; 160
    4a44:	af 2e       	mov	r10, r31
    4a46:	f0 2d       	mov	r31, r0
    4a48:	0f 2e       	mov	r0, r31
    4a4a:	f6 e8       	ldi	r31, 0x86	; 134
    4a4c:	bf 2e       	mov	r11, r31
    4a4e:	f0 2d       	mov	r31, r0
    4a50:	cc 24       	eor	r12, r12
    4a52:	c3 94       	inc	r12
    4a54:	dd 24       	eor	r13, r13
    4a56:	ee 24       	eor	r14, r14
    4a58:	ff 24       	eor	r15, r15
    4a5a:	00 e0       	ldi	r16, 0x00	; 0
    4a5c:	10 e0       	ldi	r17, 0x00	; 0
    4a5e:	0e 94 11 08 	call	0x1022	; 0x1022 <__umoddi3>
    4a62:	22 2e       	mov	r2, r18
    4a64:	33 2e       	mov	r3, r19
    4a66:	44 2e       	mov	r4, r20
    4a68:	55 2e       	mov	r5, r21
    4a6a:	66 2e       	mov	r6, r22
    4a6c:	77 2e       	mov	r7, r23
    4a6e:	88 2e       	mov	r8, r24
    4a70:	99 2e       	mov	r9, r25
    4a72:	a2 2c       	mov	r10, r2
    4a74:	b3 2c       	mov	r11, r3
    4a76:	c4 2c       	mov	r12, r4
    4a78:	d5 2c       	mov	r13, r5
    4a7a:	e6 2c       	mov	r14, r6
    4a7c:	f7 2c       	mov	r15, r7
    4a7e:	08 2d       	mov	r16, r8
    4a80:	19 2d       	mov	r17, r9
    4a82:	2a 2d       	mov	r18, r10
    4a84:	3b 2d       	mov	r19, r11
    4a86:	4c 2d       	mov	r20, r12
    4a88:	5d 2d       	mov	r21, r13
    4a8a:	6e 2d       	mov	r22, r14
    4a8c:	7f 2d       	mov	r23, r15
    4a8e:	80 2f       	mov	r24, r16
    4a90:	91 2f       	mov	r25, r17
    4a92:	0e 94 c8 1e 	call	0x3d90	; 0x3d90 <CLCD_voidSendNumber>
	}

}
    4a96:	ef 96       	adiw	r28, 0x3f	; 63
    4a98:	0f b6       	in	r0, 0x3f	; 63
    4a9a:	f8 94       	cli
    4a9c:	de bf       	out	0x3e, r29	; 62
    4a9e:	0f be       	out	0x3f, r0	; 63
    4aa0:	cd bf       	out	0x3d, r28	; 61
    4aa2:	cf 91       	pop	r28
    4aa4:	df 91       	pop	r29
    4aa6:	1f 91       	pop	r17
    4aa8:	0f 91       	pop	r16
    4aaa:	ff 90       	pop	r15
    4aac:	ef 90       	pop	r14
    4aae:	df 90       	pop	r13
    4ab0:	cf 90       	pop	r12
    4ab2:	bf 90       	pop	r11
    4ab4:	af 90       	pop	r10
    4ab6:	9f 90       	pop	r9
    4ab8:	8f 90       	pop	r8
    4aba:	7f 90       	pop	r7
    4abc:	6f 90       	pop	r6
    4abe:	5f 90       	pop	r5
    4ac0:	4f 90       	pop	r4
    4ac2:	3f 90       	pop	r3
    4ac4:	2f 90       	pop	r2
    4ac6:	08 95       	ret

00004ac8 <CLCD_voidSendEnableTrigger>:
static void CLCD_voidSendEnableTrigger(void)
{
    4ac8:	df 93       	push	r29
    4aca:	cf 93       	push	r28
    4acc:	cd b7       	in	r28, 0x3d	; 61
    4ace:	de b7       	in	r29, 0x3e	; 62
    4ad0:	6c 97       	sbiw	r28, 0x1c	; 28
    4ad2:	0f b6       	in	r0, 0x3f	; 63
    4ad4:	f8 94       	cli
    4ad6:	de bf       	out	0x3e, r29	; 62
    4ad8:	0f be       	out	0x3f, r0	; 63
    4ada:	cd bf       	out	0x3d, r28	; 61
	GPIO_voidSetPinVal(CLCD_EN, HIGH);
    4adc:	81 e0       	ldi	r24, 0x01	; 1
    4ade:	62 e0       	ldi	r22, 0x02	; 2
    4ae0:	41 e0       	ldi	r20, 0x01	; 1
    4ae2:	0e 94 3a 16 	call	0x2c74	; 0x2c74 <GPIO_voidSetPinVal>
    4ae6:	80 e0       	ldi	r24, 0x00	; 0
    4ae8:	90 e0       	ldi	r25, 0x00	; 0
    4aea:	a0 e8       	ldi	r26, 0x80	; 128
    4aec:	bf e3       	ldi	r27, 0x3F	; 63
    4aee:	89 8f       	std	Y+25, r24	; 0x19
    4af0:	9a 8f       	std	Y+26, r25	; 0x1a
    4af2:	ab 8f       	std	Y+27, r26	; 0x1b
    4af4:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4af6:	69 8d       	ldd	r22, Y+25	; 0x19
    4af8:	7a 8d       	ldd	r23, Y+26	; 0x1a
    4afa:	8b 8d       	ldd	r24, Y+27	; 0x1b
    4afc:	9c 8d       	ldd	r25, Y+28	; 0x1c
    4afe:	20 e0       	ldi	r18, 0x00	; 0
    4b00:	30 e0       	ldi	r19, 0x00	; 0
    4b02:	4a e7       	ldi	r20, 0x7A	; 122
    4b04:	53 e4       	ldi	r21, 0x43	; 67
    4b06:	0e 94 2b 10 	call	0x2056	; 0x2056 <__mulsf3>
    4b0a:	dc 01       	movw	r26, r24
    4b0c:	cb 01       	movw	r24, r22
    4b0e:	8d 8b       	std	Y+21, r24	; 0x15
    4b10:	9e 8b       	std	Y+22, r25	; 0x16
    4b12:	af 8b       	std	Y+23, r26	; 0x17
    4b14:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    4b16:	6d 89       	ldd	r22, Y+21	; 0x15
    4b18:	7e 89       	ldd	r23, Y+22	; 0x16
    4b1a:	8f 89       	ldd	r24, Y+23	; 0x17
    4b1c:	98 8d       	ldd	r25, Y+24	; 0x18
    4b1e:	20 e0       	ldi	r18, 0x00	; 0
    4b20:	30 e0       	ldi	r19, 0x00	; 0
    4b22:	40 e8       	ldi	r20, 0x80	; 128
    4b24:	5f e3       	ldi	r21, 0x3F	; 63
    4b26:	0e 94 31 12 	call	0x2462	; 0x2462 <__ltsf2>
    4b2a:	88 23       	and	r24, r24
    4b2c:	2c f4       	brge	.+10     	; 0x4b38 <CLCD_voidSendEnableTrigger+0x70>
		__ticks = 1;
    4b2e:	81 e0       	ldi	r24, 0x01	; 1
    4b30:	90 e0       	ldi	r25, 0x00	; 0
    4b32:	9c 8b       	std	Y+20, r25	; 0x14
    4b34:	8b 8b       	std	Y+19, r24	; 0x13
    4b36:	3f c0       	rjmp	.+126    	; 0x4bb6 <CLCD_voidSendEnableTrigger+0xee>
	else if (__tmp > 65535)
    4b38:	6d 89       	ldd	r22, Y+21	; 0x15
    4b3a:	7e 89       	ldd	r23, Y+22	; 0x16
    4b3c:	8f 89       	ldd	r24, Y+23	; 0x17
    4b3e:	98 8d       	ldd	r25, Y+24	; 0x18
    4b40:	20 e0       	ldi	r18, 0x00	; 0
    4b42:	3f ef       	ldi	r19, 0xFF	; 255
    4b44:	4f e7       	ldi	r20, 0x7F	; 127
    4b46:	57 e4       	ldi	r21, 0x47	; 71
    4b48:	0e 94 d1 11 	call	0x23a2	; 0x23a2 <__gtsf2>
    4b4c:	18 16       	cp	r1, r24
    4b4e:	4c f5       	brge	.+82     	; 0x4ba2 <CLCD_voidSendEnableTrigger+0xda>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4b50:	69 8d       	ldd	r22, Y+25	; 0x19
    4b52:	7a 8d       	ldd	r23, Y+26	; 0x1a
    4b54:	8b 8d       	ldd	r24, Y+27	; 0x1b
    4b56:	9c 8d       	ldd	r25, Y+28	; 0x1c
    4b58:	20 e0       	ldi	r18, 0x00	; 0
    4b5a:	30 e0       	ldi	r19, 0x00	; 0
    4b5c:	40 e2       	ldi	r20, 0x20	; 32
    4b5e:	51 e4       	ldi	r21, 0x41	; 65
    4b60:	0e 94 2b 10 	call	0x2056	; 0x2056 <__mulsf3>
    4b64:	dc 01       	movw	r26, r24
    4b66:	cb 01       	movw	r24, r22
    4b68:	bc 01       	movw	r22, r24
    4b6a:	cd 01       	movw	r24, r26
    4b6c:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    4b70:	dc 01       	movw	r26, r24
    4b72:	cb 01       	movw	r24, r22
    4b74:	9c 8b       	std	Y+20, r25	; 0x14
    4b76:	8b 8b       	std	Y+19, r24	; 0x13
    4b78:	0f c0       	rjmp	.+30     	; 0x4b98 <CLCD_voidSendEnableTrigger+0xd0>
    4b7a:	89 e1       	ldi	r24, 0x19	; 25
    4b7c:	90 e0       	ldi	r25, 0x00	; 0
    4b7e:	9a 8b       	std	Y+18, r25	; 0x12
    4b80:	89 8b       	std	Y+17, r24	; 0x11
    4b82:	89 89       	ldd	r24, Y+17	; 0x11
    4b84:	9a 89       	ldd	r25, Y+18	; 0x12
    4b86:	01 97       	sbiw	r24, 0x01	; 1
    4b88:	f1 f7       	brne	.-4      	; 0x4b86 <CLCD_voidSendEnableTrigger+0xbe>
    4b8a:	9a 8b       	std	Y+18, r25	; 0x12
    4b8c:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4b8e:	8b 89       	ldd	r24, Y+19	; 0x13
    4b90:	9c 89       	ldd	r25, Y+20	; 0x14
    4b92:	01 97       	sbiw	r24, 0x01	; 1
    4b94:	9c 8b       	std	Y+20, r25	; 0x14
    4b96:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4b98:	8b 89       	ldd	r24, Y+19	; 0x13
    4b9a:	9c 89       	ldd	r25, Y+20	; 0x14
    4b9c:	00 97       	sbiw	r24, 0x00	; 0
    4b9e:	69 f7       	brne	.-38     	; 0x4b7a <CLCD_voidSendEnableTrigger+0xb2>
    4ba0:	14 c0       	rjmp	.+40     	; 0x4bca <CLCD_voidSendEnableTrigger+0x102>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4ba2:	6d 89       	ldd	r22, Y+21	; 0x15
    4ba4:	7e 89       	ldd	r23, Y+22	; 0x16
    4ba6:	8f 89       	ldd	r24, Y+23	; 0x17
    4ba8:	98 8d       	ldd	r25, Y+24	; 0x18
    4baa:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    4bae:	dc 01       	movw	r26, r24
    4bb0:	cb 01       	movw	r24, r22
    4bb2:	9c 8b       	std	Y+20, r25	; 0x14
    4bb4:	8b 8b       	std	Y+19, r24	; 0x13
    4bb6:	8b 89       	ldd	r24, Y+19	; 0x13
    4bb8:	9c 89       	ldd	r25, Y+20	; 0x14
    4bba:	98 8b       	std	Y+16, r25	; 0x10
    4bbc:	8f 87       	std	Y+15, r24	; 0x0f
    4bbe:	8f 85       	ldd	r24, Y+15	; 0x0f
    4bc0:	98 89       	ldd	r25, Y+16	; 0x10
    4bc2:	01 97       	sbiw	r24, 0x01	; 1
    4bc4:	f1 f7       	brne	.-4      	; 0x4bc2 <CLCD_voidSendEnableTrigger+0xfa>
    4bc6:	98 8b       	std	Y+16, r25	; 0x10
    4bc8:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(1);
	GPIO_voidSetPinVal(CLCD_EN, LOW);
    4bca:	81 e0       	ldi	r24, 0x01	; 1
    4bcc:	62 e0       	ldi	r22, 0x02	; 2
    4bce:	40 e0       	ldi	r20, 0x00	; 0
    4bd0:	0e 94 3a 16 	call	0x2c74	; 0x2c74 <GPIO_voidSetPinVal>
    4bd4:	80 e0       	ldi	r24, 0x00	; 0
    4bd6:	90 e0       	ldi	r25, 0x00	; 0
    4bd8:	a0 e8       	ldi	r26, 0x80	; 128
    4bda:	bf e3       	ldi	r27, 0x3F	; 63
    4bdc:	8b 87       	std	Y+11, r24	; 0x0b
    4bde:	9c 87       	std	Y+12, r25	; 0x0c
    4be0:	ad 87       	std	Y+13, r26	; 0x0d
    4be2:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4be4:	6b 85       	ldd	r22, Y+11	; 0x0b
    4be6:	7c 85       	ldd	r23, Y+12	; 0x0c
    4be8:	8d 85       	ldd	r24, Y+13	; 0x0d
    4bea:	9e 85       	ldd	r25, Y+14	; 0x0e
    4bec:	20 e0       	ldi	r18, 0x00	; 0
    4bee:	30 e0       	ldi	r19, 0x00	; 0
    4bf0:	4a e7       	ldi	r20, 0x7A	; 122
    4bf2:	53 e4       	ldi	r21, 0x43	; 67
    4bf4:	0e 94 2b 10 	call	0x2056	; 0x2056 <__mulsf3>
    4bf8:	dc 01       	movw	r26, r24
    4bfa:	cb 01       	movw	r24, r22
    4bfc:	8f 83       	std	Y+7, r24	; 0x07
    4bfe:	98 87       	std	Y+8, r25	; 0x08
    4c00:	a9 87       	std	Y+9, r26	; 0x09
    4c02:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    4c04:	6f 81       	ldd	r22, Y+7	; 0x07
    4c06:	78 85       	ldd	r23, Y+8	; 0x08
    4c08:	89 85       	ldd	r24, Y+9	; 0x09
    4c0a:	9a 85       	ldd	r25, Y+10	; 0x0a
    4c0c:	20 e0       	ldi	r18, 0x00	; 0
    4c0e:	30 e0       	ldi	r19, 0x00	; 0
    4c10:	40 e8       	ldi	r20, 0x80	; 128
    4c12:	5f e3       	ldi	r21, 0x3F	; 63
    4c14:	0e 94 31 12 	call	0x2462	; 0x2462 <__ltsf2>
    4c18:	88 23       	and	r24, r24
    4c1a:	2c f4       	brge	.+10     	; 0x4c26 <CLCD_voidSendEnableTrigger+0x15e>
		__ticks = 1;
    4c1c:	81 e0       	ldi	r24, 0x01	; 1
    4c1e:	90 e0       	ldi	r25, 0x00	; 0
    4c20:	9e 83       	std	Y+6, r25	; 0x06
    4c22:	8d 83       	std	Y+5, r24	; 0x05
    4c24:	3f c0       	rjmp	.+126    	; 0x4ca4 <CLCD_voidSendEnableTrigger+0x1dc>
	else if (__tmp > 65535)
    4c26:	6f 81       	ldd	r22, Y+7	; 0x07
    4c28:	78 85       	ldd	r23, Y+8	; 0x08
    4c2a:	89 85       	ldd	r24, Y+9	; 0x09
    4c2c:	9a 85       	ldd	r25, Y+10	; 0x0a
    4c2e:	20 e0       	ldi	r18, 0x00	; 0
    4c30:	3f ef       	ldi	r19, 0xFF	; 255
    4c32:	4f e7       	ldi	r20, 0x7F	; 127
    4c34:	57 e4       	ldi	r21, 0x47	; 71
    4c36:	0e 94 d1 11 	call	0x23a2	; 0x23a2 <__gtsf2>
    4c3a:	18 16       	cp	r1, r24
    4c3c:	4c f5       	brge	.+82     	; 0x4c90 <CLCD_voidSendEnableTrigger+0x1c8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4c3e:	6b 85       	ldd	r22, Y+11	; 0x0b
    4c40:	7c 85       	ldd	r23, Y+12	; 0x0c
    4c42:	8d 85       	ldd	r24, Y+13	; 0x0d
    4c44:	9e 85       	ldd	r25, Y+14	; 0x0e
    4c46:	20 e0       	ldi	r18, 0x00	; 0
    4c48:	30 e0       	ldi	r19, 0x00	; 0
    4c4a:	40 e2       	ldi	r20, 0x20	; 32
    4c4c:	51 e4       	ldi	r21, 0x41	; 65
    4c4e:	0e 94 2b 10 	call	0x2056	; 0x2056 <__mulsf3>
    4c52:	dc 01       	movw	r26, r24
    4c54:	cb 01       	movw	r24, r22
    4c56:	bc 01       	movw	r22, r24
    4c58:	cd 01       	movw	r24, r26
    4c5a:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    4c5e:	dc 01       	movw	r26, r24
    4c60:	cb 01       	movw	r24, r22
    4c62:	9e 83       	std	Y+6, r25	; 0x06
    4c64:	8d 83       	std	Y+5, r24	; 0x05
    4c66:	0f c0       	rjmp	.+30     	; 0x4c86 <CLCD_voidSendEnableTrigger+0x1be>
    4c68:	89 e1       	ldi	r24, 0x19	; 25
    4c6a:	90 e0       	ldi	r25, 0x00	; 0
    4c6c:	9c 83       	std	Y+4, r25	; 0x04
    4c6e:	8b 83       	std	Y+3, r24	; 0x03
    4c70:	8b 81       	ldd	r24, Y+3	; 0x03
    4c72:	9c 81       	ldd	r25, Y+4	; 0x04
    4c74:	01 97       	sbiw	r24, 0x01	; 1
    4c76:	f1 f7       	brne	.-4      	; 0x4c74 <CLCD_voidSendEnableTrigger+0x1ac>
    4c78:	9c 83       	std	Y+4, r25	; 0x04
    4c7a:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4c7c:	8d 81       	ldd	r24, Y+5	; 0x05
    4c7e:	9e 81       	ldd	r25, Y+6	; 0x06
    4c80:	01 97       	sbiw	r24, 0x01	; 1
    4c82:	9e 83       	std	Y+6, r25	; 0x06
    4c84:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4c86:	8d 81       	ldd	r24, Y+5	; 0x05
    4c88:	9e 81       	ldd	r25, Y+6	; 0x06
    4c8a:	00 97       	sbiw	r24, 0x00	; 0
    4c8c:	69 f7       	brne	.-38     	; 0x4c68 <CLCD_voidSendEnableTrigger+0x1a0>
    4c8e:	14 c0       	rjmp	.+40     	; 0x4cb8 <CLCD_voidSendEnableTrigger+0x1f0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4c90:	6f 81       	ldd	r22, Y+7	; 0x07
    4c92:	78 85       	ldd	r23, Y+8	; 0x08
    4c94:	89 85       	ldd	r24, Y+9	; 0x09
    4c96:	9a 85       	ldd	r25, Y+10	; 0x0a
    4c98:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    4c9c:	dc 01       	movw	r26, r24
    4c9e:	cb 01       	movw	r24, r22
    4ca0:	9e 83       	std	Y+6, r25	; 0x06
    4ca2:	8d 83       	std	Y+5, r24	; 0x05
    4ca4:	8d 81       	ldd	r24, Y+5	; 0x05
    4ca6:	9e 81       	ldd	r25, Y+6	; 0x06
    4ca8:	9a 83       	std	Y+2, r25	; 0x02
    4caa:	89 83       	std	Y+1, r24	; 0x01
    4cac:	89 81       	ldd	r24, Y+1	; 0x01
    4cae:	9a 81       	ldd	r25, Y+2	; 0x02
    4cb0:	01 97       	sbiw	r24, 0x01	; 1
    4cb2:	f1 f7       	brne	.-4      	; 0x4cb0 <CLCD_voidSendEnableTrigger+0x1e8>
    4cb4:	9a 83       	std	Y+2, r25	; 0x02
    4cb6:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(1);
}
    4cb8:	6c 96       	adiw	r28, 0x1c	; 28
    4cba:	0f b6       	in	r0, 0x3f	; 63
    4cbc:	f8 94       	cli
    4cbe:	de bf       	out	0x3e, r29	; 62
    4cc0:	0f be       	out	0x3f, r0	; 63
    4cc2:	cd bf       	out	0x3d, r28	; 61
    4cc4:	cf 91       	pop	r28
    4cc6:	df 91       	pop	r29
    4cc8:	08 95       	ret

00004cca <CLCD_voidGoToX_Y>:
void CLCD_voidGoToX_Y		( 	u8 Copy_u8Row , u8 Copy_u8Col 	)
{
    4cca:	df 93       	push	r29
    4ccc:	cf 93       	push	r28
    4cce:	00 d0       	rcall	.+0      	; 0x4cd0 <CLCD_voidGoToX_Y+0x6>
    4cd0:	cd b7       	in	r28, 0x3d	; 61
    4cd2:	de b7       	in	r29, 0x3e	; 62
    4cd4:	89 83       	std	Y+1, r24	; 0x01
    4cd6:	6a 83       	std	Y+2, r22	; 0x02
	if( Copy_u8Row == CLCD_ROW1 )
    4cd8:	89 81       	ldd	r24, Y+1	; 0x01
    4cda:	81 30       	cpi	r24, 0x01	; 1
    4cdc:	29 f4       	brne	.+10     	; 0x4ce8 <CLCD_voidGoToX_Y+0x1e>
	{
		CLCD_voidSendCommand(CLCD_SET_DDRAM_ADDRESS + ( Copy_u8Col - 1 ) );
    4cde:	8a 81       	ldd	r24, Y+2	; 0x02
    4ce0:	81 58       	subi	r24, 0x81	; 129
    4ce2:	0e 94 6a 1e 	call	0x3cd4	; 0x3cd4 <CLCD_voidSendCommand>
    4ce6:	07 c0       	rjmp	.+14     	; 0x4cf6 <CLCD_voidGoToX_Y+0x2c>
	}
	else if( Copy_u8Row == CLCD_ROW2 )
    4ce8:	89 81       	ldd	r24, Y+1	; 0x01
    4cea:	82 30       	cpi	r24, 0x02	; 2
    4cec:	21 f4       	brne	.+8      	; 0x4cf6 <CLCD_voidGoToX_Y+0x2c>
	{
		CLCD_voidSendCommand(CLCD_SET_DDRAM_ADDRESS + 0x40 + ( Copy_u8Col - 1 ) );
    4cee:	8a 81       	ldd	r24, Y+2	; 0x02
    4cf0:	81 54       	subi	r24, 0x41	; 65
    4cf2:	0e 94 6a 1e 	call	0x3cd4	; 0x3cd4 <CLCD_voidSendCommand>
	}
}
    4cf6:	0f 90       	pop	r0
    4cf8:	0f 90       	pop	r0
    4cfa:	cf 91       	pop	r28
    4cfc:	df 91       	pop	r29
    4cfe:	08 95       	ret

00004d00 <CLCD_voidDrwaExxtraChar>:
void CLCD_voidDrwaExxtraChar(	u8 Copy_u8Row ,u8 Copy_u8Col , u8 * Copy_u8ArrayChars)
{
    4d00:	df 93       	push	r29
    4d02:	cf 93       	push	r28
    4d04:	00 d0       	rcall	.+0      	; 0x4d06 <CLCD_voidDrwaExxtraChar+0x6>
    4d06:	00 d0       	rcall	.+0      	; 0x4d08 <CLCD_voidDrwaExxtraChar+0x8>
    4d08:	0f 92       	push	r0
    4d0a:	cd b7       	in	r28, 0x3d	; 61
    4d0c:	de b7       	in	r29, 0x3e	; 62
    4d0e:	8a 83       	std	Y+2, r24	; 0x02
    4d10:	6b 83       	std	Y+3, r22	; 0x03
    4d12:	5d 83       	std	Y+5, r21	; 0x05
    4d14:	4c 83       	std	Y+4, r20	; 0x04
	u8 LOC_u8Iterrator = 0;
    4d16:	19 82       	std	Y+1, r1	; 0x01
	/* Go To CGRAM */
	CLCD_voidSendCommand ( CLCD_SET_CGRAM_ADDRESS );
    4d18:	80 e4       	ldi	r24, 0x40	; 64
    4d1a:	0e 94 6a 1e 	call	0x3cd4	; 0x3cd4 <CLCD_voidSendCommand>
	/* Draw The Character */
	for(LOC_u8Iterrator = 0; LOC_u8Iterrator< ( sizeof(Copy_u8ArrayChars)/sizeof(Copy_u8ArrayChars[0])); LOC_u8Iterrator++ )
    4d1e:	19 82       	std	Y+1, r1	; 0x01
    4d20:	0e c0       	rjmp	.+28     	; 0x4d3e <CLCD_voidDrwaExxtraChar+0x3e>
	{
		CLCD_voidSendCharacter(Copy_u8ArrayChars[LOC_u8Iterrator]);
    4d22:	89 81       	ldd	r24, Y+1	; 0x01
    4d24:	28 2f       	mov	r18, r24
    4d26:	30 e0       	ldi	r19, 0x00	; 0
    4d28:	8c 81       	ldd	r24, Y+4	; 0x04
    4d2a:	9d 81       	ldd	r25, Y+5	; 0x05
    4d2c:	fc 01       	movw	r30, r24
    4d2e:	e2 0f       	add	r30, r18
    4d30:	f3 1f       	adc	r31, r19
    4d32:	80 81       	ld	r24, Z
    4d34:	0e 94 84 1e 	call	0x3d08	; 0x3d08 <CLCD_voidSendCharacter>
{
	u8 LOC_u8Iterrator = 0;
	/* Go To CGRAM */
	CLCD_voidSendCommand ( CLCD_SET_CGRAM_ADDRESS );
	/* Draw The Character */
	for(LOC_u8Iterrator = 0; LOC_u8Iterrator< ( sizeof(Copy_u8ArrayChars)/sizeof(Copy_u8ArrayChars[0])); LOC_u8Iterrator++ )
    4d38:	89 81       	ldd	r24, Y+1	; 0x01
    4d3a:	8f 5f       	subi	r24, 0xFF	; 255
    4d3c:	89 83       	std	Y+1, r24	; 0x01
    4d3e:	89 81       	ldd	r24, Y+1	; 0x01
    4d40:	82 30       	cpi	r24, 0x02	; 2
    4d42:	78 f3       	brcs	.-34     	; 0x4d22 <CLCD_voidDrwaExxtraChar+0x22>
	{
		CLCD_voidSendCharacter(Copy_u8ArrayChars[LOC_u8Iterrator]);
	}
	CLCD_voidGoToX_Y( Copy_u8Row, Copy_u8Col );
    4d44:	8a 81       	ldd	r24, Y+2	; 0x02
    4d46:	6b 81       	ldd	r22, Y+3	; 0x03
    4d48:	0e 94 65 26 	call	0x4cca	; 0x4cca <CLCD_voidGoToX_Y>
	for(LOC_u8Iterrator = 0; LOC_u8Iterrator< ( sizeof(Copy_u8ArrayChars)/sizeof(Copy_u8ArrayChars[0])); LOC_u8Iterrator++ )
    4d4c:	19 82       	std	Y+1, r1	; 0x01
    4d4e:	0e c0       	rjmp	.+28     	; 0x4d6c <CLCD_voidDrwaExxtraChar+0x6c>
	{
		CLCD_voidSendCharacter(Copy_u8ArrayChars[LOC_u8Iterrator]);
    4d50:	89 81       	ldd	r24, Y+1	; 0x01
    4d52:	28 2f       	mov	r18, r24
    4d54:	30 e0       	ldi	r19, 0x00	; 0
    4d56:	8c 81       	ldd	r24, Y+4	; 0x04
    4d58:	9d 81       	ldd	r25, Y+5	; 0x05
    4d5a:	fc 01       	movw	r30, r24
    4d5c:	e2 0f       	add	r30, r18
    4d5e:	f3 1f       	adc	r31, r19
    4d60:	80 81       	ld	r24, Z
    4d62:	0e 94 84 1e 	call	0x3d08	; 0x3d08 <CLCD_voidSendCharacter>
	for(LOC_u8Iterrator = 0; LOC_u8Iterrator< ( sizeof(Copy_u8ArrayChars)/sizeof(Copy_u8ArrayChars[0])); LOC_u8Iterrator++ )
	{
		CLCD_voidSendCharacter(Copy_u8ArrayChars[LOC_u8Iterrator]);
	}
	CLCD_voidGoToX_Y( Copy_u8Row, Copy_u8Col );
	for(LOC_u8Iterrator = 0; LOC_u8Iterrator< ( sizeof(Copy_u8ArrayChars)/sizeof(Copy_u8ArrayChars[0])); LOC_u8Iterrator++ )
    4d66:	89 81       	ldd	r24, Y+1	; 0x01
    4d68:	8f 5f       	subi	r24, 0xFF	; 255
    4d6a:	89 83       	std	Y+1, r24	; 0x01
    4d6c:	89 81       	ldd	r24, Y+1	; 0x01
    4d6e:	82 30       	cpi	r24, 0x02	; 2
    4d70:	78 f3       	brcs	.-34     	; 0x4d50 <CLCD_voidDrwaExxtraChar+0x50>
	{
		CLCD_voidSendCharacter(Copy_u8ArrayChars[LOC_u8Iterrator]);
	}
}
    4d72:	0f 90       	pop	r0
    4d74:	0f 90       	pop	r0
    4d76:	0f 90       	pop	r0
    4d78:	0f 90       	pop	r0
    4d7a:	0f 90       	pop	r0
    4d7c:	cf 91       	pop	r28
    4d7e:	df 91       	pop	r29
    4d80:	08 95       	ret

00004d82 <CLCD_voidClearScreen>:

void CLCD_voidClearScreen(void)
{
    4d82:	df 93       	push	r29
    4d84:	cf 93       	push	r28
    4d86:	cd b7       	in	r28, 0x3d	; 61
    4d88:	de b7       	in	r29, 0x3e	; 62
    4d8a:	2e 97       	sbiw	r28, 0x0e	; 14
    4d8c:	0f b6       	in	r0, 0x3f	; 63
    4d8e:	f8 94       	cli
    4d90:	de bf       	out	0x3e, r29	; 62
    4d92:	0f be       	out	0x3f, r0	; 63
    4d94:	cd bf       	out	0x3d, r28	; 61
	CLCD_voidSendCommand(CLCD_DISPLAY_CLEAR);
    4d96:	81 e0       	ldi	r24, 0x01	; 1
    4d98:	0e 94 6a 1e 	call	0x3cd4	; 0x3cd4 <CLCD_voidSendCommand>
    4d9c:	80 e0       	ldi	r24, 0x00	; 0
    4d9e:	90 e0       	ldi	r25, 0x00	; 0
    4da0:	a0 e0       	ldi	r26, 0x00	; 0
    4da2:	b0 e4       	ldi	r27, 0x40	; 64
    4da4:	8b 87       	std	Y+11, r24	; 0x0b
    4da6:	9c 87       	std	Y+12, r25	; 0x0c
    4da8:	ad 87       	std	Y+13, r26	; 0x0d
    4daa:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4dac:	6b 85       	ldd	r22, Y+11	; 0x0b
    4dae:	7c 85       	ldd	r23, Y+12	; 0x0c
    4db0:	8d 85       	ldd	r24, Y+13	; 0x0d
    4db2:	9e 85       	ldd	r25, Y+14	; 0x0e
    4db4:	20 e0       	ldi	r18, 0x00	; 0
    4db6:	30 e0       	ldi	r19, 0x00	; 0
    4db8:	4a e7       	ldi	r20, 0x7A	; 122
    4dba:	53 e4       	ldi	r21, 0x43	; 67
    4dbc:	0e 94 2b 10 	call	0x2056	; 0x2056 <__mulsf3>
    4dc0:	dc 01       	movw	r26, r24
    4dc2:	cb 01       	movw	r24, r22
    4dc4:	8f 83       	std	Y+7, r24	; 0x07
    4dc6:	98 87       	std	Y+8, r25	; 0x08
    4dc8:	a9 87       	std	Y+9, r26	; 0x09
    4dca:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    4dcc:	6f 81       	ldd	r22, Y+7	; 0x07
    4dce:	78 85       	ldd	r23, Y+8	; 0x08
    4dd0:	89 85       	ldd	r24, Y+9	; 0x09
    4dd2:	9a 85       	ldd	r25, Y+10	; 0x0a
    4dd4:	20 e0       	ldi	r18, 0x00	; 0
    4dd6:	30 e0       	ldi	r19, 0x00	; 0
    4dd8:	40 e8       	ldi	r20, 0x80	; 128
    4dda:	5f e3       	ldi	r21, 0x3F	; 63
    4ddc:	0e 94 31 12 	call	0x2462	; 0x2462 <__ltsf2>
    4de0:	88 23       	and	r24, r24
    4de2:	2c f4       	brge	.+10     	; 0x4dee <CLCD_voidClearScreen+0x6c>
		__ticks = 1;
    4de4:	81 e0       	ldi	r24, 0x01	; 1
    4de6:	90 e0       	ldi	r25, 0x00	; 0
    4de8:	9e 83       	std	Y+6, r25	; 0x06
    4dea:	8d 83       	std	Y+5, r24	; 0x05
    4dec:	3f c0       	rjmp	.+126    	; 0x4e6c <CLCD_voidClearScreen+0xea>
	else if (__tmp > 65535)
    4dee:	6f 81       	ldd	r22, Y+7	; 0x07
    4df0:	78 85       	ldd	r23, Y+8	; 0x08
    4df2:	89 85       	ldd	r24, Y+9	; 0x09
    4df4:	9a 85       	ldd	r25, Y+10	; 0x0a
    4df6:	20 e0       	ldi	r18, 0x00	; 0
    4df8:	3f ef       	ldi	r19, 0xFF	; 255
    4dfa:	4f e7       	ldi	r20, 0x7F	; 127
    4dfc:	57 e4       	ldi	r21, 0x47	; 71
    4dfe:	0e 94 d1 11 	call	0x23a2	; 0x23a2 <__gtsf2>
    4e02:	18 16       	cp	r1, r24
    4e04:	4c f5       	brge	.+82     	; 0x4e58 <CLCD_voidClearScreen+0xd6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4e06:	6b 85       	ldd	r22, Y+11	; 0x0b
    4e08:	7c 85       	ldd	r23, Y+12	; 0x0c
    4e0a:	8d 85       	ldd	r24, Y+13	; 0x0d
    4e0c:	9e 85       	ldd	r25, Y+14	; 0x0e
    4e0e:	20 e0       	ldi	r18, 0x00	; 0
    4e10:	30 e0       	ldi	r19, 0x00	; 0
    4e12:	40 e2       	ldi	r20, 0x20	; 32
    4e14:	51 e4       	ldi	r21, 0x41	; 65
    4e16:	0e 94 2b 10 	call	0x2056	; 0x2056 <__mulsf3>
    4e1a:	dc 01       	movw	r26, r24
    4e1c:	cb 01       	movw	r24, r22
    4e1e:	bc 01       	movw	r22, r24
    4e20:	cd 01       	movw	r24, r26
    4e22:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    4e26:	dc 01       	movw	r26, r24
    4e28:	cb 01       	movw	r24, r22
    4e2a:	9e 83       	std	Y+6, r25	; 0x06
    4e2c:	8d 83       	std	Y+5, r24	; 0x05
    4e2e:	0f c0       	rjmp	.+30     	; 0x4e4e <CLCD_voidClearScreen+0xcc>
    4e30:	89 e1       	ldi	r24, 0x19	; 25
    4e32:	90 e0       	ldi	r25, 0x00	; 0
    4e34:	9c 83       	std	Y+4, r25	; 0x04
    4e36:	8b 83       	std	Y+3, r24	; 0x03
    4e38:	8b 81       	ldd	r24, Y+3	; 0x03
    4e3a:	9c 81       	ldd	r25, Y+4	; 0x04
    4e3c:	01 97       	sbiw	r24, 0x01	; 1
    4e3e:	f1 f7       	brne	.-4      	; 0x4e3c <CLCD_voidClearScreen+0xba>
    4e40:	9c 83       	std	Y+4, r25	; 0x04
    4e42:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4e44:	8d 81       	ldd	r24, Y+5	; 0x05
    4e46:	9e 81       	ldd	r25, Y+6	; 0x06
    4e48:	01 97       	sbiw	r24, 0x01	; 1
    4e4a:	9e 83       	std	Y+6, r25	; 0x06
    4e4c:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4e4e:	8d 81       	ldd	r24, Y+5	; 0x05
    4e50:	9e 81       	ldd	r25, Y+6	; 0x06
    4e52:	00 97       	sbiw	r24, 0x00	; 0
    4e54:	69 f7       	brne	.-38     	; 0x4e30 <CLCD_voidClearScreen+0xae>
    4e56:	14 c0       	rjmp	.+40     	; 0x4e80 <CLCD_voidClearScreen+0xfe>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4e58:	6f 81       	ldd	r22, Y+7	; 0x07
    4e5a:	78 85       	ldd	r23, Y+8	; 0x08
    4e5c:	89 85       	ldd	r24, Y+9	; 0x09
    4e5e:	9a 85       	ldd	r25, Y+10	; 0x0a
    4e60:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    4e64:	dc 01       	movw	r26, r24
    4e66:	cb 01       	movw	r24, r22
    4e68:	9e 83       	std	Y+6, r25	; 0x06
    4e6a:	8d 83       	std	Y+5, r24	; 0x05
    4e6c:	8d 81       	ldd	r24, Y+5	; 0x05
    4e6e:	9e 81       	ldd	r25, Y+6	; 0x06
    4e70:	9a 83       	std	Y+2, r25	; 0x02
    4e72:	89 83       	std	Y+1, r24	; 0x01
    4e74:	89 81       	ldd	r24, Y+1	; 0x01
    4e76:	9a 81       	ldd	r25, Y+2	; 0x02
    4e78:	01 97       	sbiw	r24, 0x01	; 1
    4e7a:	f1 f7       	brne	.-4      	; 0x4e78 <CLCD_voidClearScreen+0xf6>
    4e7c:	9a 83       	std	Y+2, r25	; 0x02
    4e7e:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(2);
}
    4e80:	2e 96       	adiw	r28, 0x0e	; 14
    4e82:	0f b6       	in	r0, 0x3f	; 63
    4e84:	f8 94       	cli
    4e86:	de bf       	out	0x3e, r29	; 62
    4e88:	0f be       	out	0x3f, r0	; 63
    4e8a:	cd bf       	out	0x3d, r28	; 61
    4e8c:	cf 91       	pop	r28
    4e8e:	df 91       	pop	r29
    4e90:	08 95       	ret

00004e92 <KEYPAD_voidInit>:
#include "KEYPAD_private.h"
#include "util/delay.h"


void KEYPAD_voidInit(void)
{
    4e92:	df 93       	push	r29
    4e94:	cf 93       	push	r28
    4e96:	cd b7       	in	r28, 0x3d	; 61
    4e98:	de b7       	in	r29, 0x3e	; 62
	/* Set the Directions of Rows as Input */
	GPIO_voidSetPinDir(KPAD_ROW_PORT,KPAD_ROW0, INPUT);
    4e9a:	83 e0       	ldi	r24, 0x03	; 3
    4e9c:	60 e0       	ldi	r22, 0x00	; 0
    4e9e:	40 e0       	ldi	r20, 0x00	; 0
    4ea0:	0e 94 23 15 	call	0x2a46	; 0x2a46 <GPIO_voidSetPinDir>
	GPIO_voidSetPinDir(KPAD_ROW_PORT,KPAD_ROW1, INPUT);
    4ea4:	83 e0       	ldi	r24, 0x03	; 3
    4ea6:	61 e0       	ldi	r22, 0x01	; 1
    4ea8:	40 e0       	ldi	r20, 0x00	; 0
    4eaa:	0e 94 23 15 	call	0x2a46	; 0x2a46 <GPIO_voidSetPinDir>
	GPIO_voidSetPinDir(KPAD_ROW_PORT,KPAD_ROW2, INPUT);
    4eae:	83 e0       	ldi	r24, 0x03	; 3
    4eb0:	62 e0       	ldi	r22, 0x02	; 2
    4eb2:	40 e0       	ldi	r20, 0x00	; 0
    4eb4:	0e 94 23 15 	call	0x2a46	; 0x2a46 <GPIO_voidSetPinDir>
	GPIO_voidSetPinDir(KPAD_ROW_PORT,KPAD_ROW3, INPUT);
    4eb8:	83 e0       	ldi	r24, 0x03	; 3
    4eba:	63 e0       	ldi	r22, 0x03	; 3
    4ebc:	40 e0       	ldi	r20, 0x00	; 0
    4ebe:	0e 94 23 15 	call	0x2a46	; 0x2a46 <GPIO_voidSetPinDir>
	/* Configure the Pins of ROWS PULL UP */
	GPIO_voidSetPinVal(KPAD_ROW_PORT,KPAD_ROW0, HIGH );
    4ec2:	83 e0       	ldi	r24, 0x03	; 3
    4ec4:	60 e0       	ldi	r22, 0x00	; 0
    4ec6:	41 e0       	ldi	r20, 0x01	; 1
    4ec8:	0e 94 3a 16 	call	0x2c74	; 0x2c74 <GPIO_voidSetPinVal>
	GPIO_voidSetPinVal(KPAD_ROW_PORT,KPAD_ROW1, HIGH );
    4ecc:	83 e0       	ldi	r24, 0x03	; 3
    4ece:	61 e0       	ldi	r22, 0x01	; 1
    4ed0:	41 e0       	ldi	r20, 0x01	; 1
    4ed2:	0e 94 3a 16 	call	0x2c74	; 0x2c74 <GPIO_voidSetPinVal>
	GPIO_voidSetPinVal(KPAD_ROW_PORT,KPAD_ROW2, HIGH );
    4ed6:	83 e0       	ldi	r24, 0x03	; 3
    4ed8:	62 e0       	ldi	r22, 0x02	; 2
    4eda:	41 e0       	ldi	r20, 0x01	; 1
    4edc:	0e 94 3a 16 	call	0x2c74	; 0x2c74 <GPIO_voidSetPinVal>
	GPIO_voidSetPinVal(KPAD_ROW_PORT,KPAD_ROW3, HIGH );
    4ee0:	83 e0       	ldi	r24, 0x03	; 3
    4ee2:	63 e0       	ldi	r22, 0x03	; 3
    4ee4:	41 e0       	ldi	r20, 0x01	; 1
    4ee6:	0e 94 3a 16 	call	0x2c74	; 0x2c74 <GPIO_voidSetPinVal>
	/* Set the Columns Pins as PUTPUT PINS */
	GPIO_voidSetPinDir(KPAD_COL_PORT,KPAD_COL0, OUTPUT);
    4eea:	83 e0       	ldi	r24, 0x03	; 3
    4eec:	64 e0       	ldi	r22, 0x04	; 4
    4eee:	41 e0       	ldi	r20, 0x01	; 1
    4ef0:	0e 94 23 15 	call	0x2a46	; 0x2a46 <GPIO_voidSetPinDir>
	GPIO_voidSetPinDir(KPAD_COL_PORT,KPAD_COL1, OUTPUT);
    4ef4:	83 e0       	ldi	r24, 0x03	; 3
    4ef6:	65 e0       	ldi	r22, 0x05	; 5
    4ef8:	41 e0       	ldi	r20, 0x01	; 1
    4efa:	0e 94 23 15 	call	0x2a46	; 0x2a46 <GPIO_voidSetPinDir>
	GPIO_voidSetPinDir(KPAD_COL_PORT,KPAD_COL2, OUTPUT);
    4efe:	83 e0       	ldi	r24, 0x03	; 3
    4f00:	66 e0       	ldi	r22, 0x06	; 6
    4f02:	41 e0       	ldi	r20, 0x01	; 1
    4f04:	0e 94 23 15 	call	0x2a46	; 0x2a46 <GPIO_voidSetPinDir>
	GPIO_voidSetPinDir(KPAD_COL_PORT,KPAD_COL3, OUTPUT);
    4f08:	83 e0       	ldi	r24, 0x03	; 3
    4f0a:	67 e0       	ldi	r22, 0x07	; 7
    4f0c:	41 e0       	ldi	r20, 0x01	; 1
    4f0e:	0e 94 23 15 	call	0x2a46	; 0x2a46 <GPIO_voidSetPinDir>

	GPIO_voidSetPinVal(KPAD_COL_PORT,KPAD_COL0, HIGH );
    4f12:	83 e0       	ldi	r24, 0x03	; 3
    4f14:	64 e0       	ldi	r22, 0x04	; 4
    4f16:	41 e0       	ldi	r20, 0x01	; 1
    4f18:	0e 94 3a 16 	call	0x2c74	; 0x2c74 <GPIO_voidSetPinVal>
	GPIO_voidSetPinVal(KPAD_COL_PORT,KPAD_COL1, HIGH );
    4f1c:	83 e0       	ldi	r24, 0x03	; 3
    4f1e:	65 e0       	ldi	r22, 0x05	; 5
    4f20:	41 e0       	ldi	r20, 0x01	; 1
    4f22:	0e 94 3a 16 	call	0x2c74	; 0x2c74 <GPIO_voidSetPinVal>
	GPIO_voidSetPinVal(KPAD_COL_PORT,KPAD_COL2, HIGH );
    4f26:	83 e0       	ldi	r24, 0x03	; 3
    4f28:	66 e0       	ldi	r22, 0x06	; 6
    4f2a:	41 e0       	ldi	r20, 0x01	; 1
    4f2c:	0e 94 3a 16 	call	0x2c74	; 0x2c74 <GPIO_voidSetPinVal>
	GPIO_voidSetPinVal(KPAD_COL_PORT,KPAD_COL3, HIGH );
    4f30:	83 e0       	ldi	r24, 0x03	; 3
    4f32:	67 e0       	ldi	r22, 0x07	; 7
    4f34:	41 e0       	ldi	r20, 0x01	; 1
    4f36:	0e 94 3a 16 	call	0x2c74	; 0x2c74 <GPIO_voidSetPinVal>

}
    4f3a:	cf 91       	pop	r28
    4f3c:	df 91       	pop	r29
    4f3e:	08 95       	ret

00004f40 <KEYPAD_voidGetPressedButton>:

u8 KEYPAD_voidGetPressedButton(void)
{
    4f40:	df 93       	push	r29
    4f42:	cf 93       	push	r28
    4f44:	cd b7       	in	r28, 0x3d	; 61
    4f46:	de b7       	in	r29, 0x3e	; 62
    4f48:	62 97       	sbiw	r28, 0x12	; 18
    4f4a:	0f b6       	in	r0, 0x3f	; 63
    4f4c:	f8 94       	cli
    4f4e:	de bf       	out	0x3e, r29	; 62
    4f50:	0f be       	out	0x3f, r0	; 63
    4f52:	cd bf       	out	0x3d, r28	; 61
	u8 Loc_ColIterator = 0;
    4f54:	1a 8a       	std	Y+18, r1	; 0x12
	u8 Loc_RowIterator = 0;
    4f56:	19 8a       	std	Y+17, r1	; 0x11
	u8 Loc_PressedValue = 0;
    4f58:	18 8a       	std	Y+16, r1	; 0x10
	u8 Loc_ReturnData = 0;
    4f5a:	1f 86       	std	Y+15, r1	; 0x0f
	for(Loc_ColIterator = (0+KPAD_COL_START); Loc_ColIterator<=KPAD_COL_END ; Loc_ColIterator++)
    4f5c:	84 e0       	ldi	r24, 0x04	; 4
    4f5e:	8a 8b       	std	Y+18, r24	; 0x12
    4f60:	bd c0       	rjmp	.+378    	; 0x50dc <KEYPAD_voidGetPressedButton+0x19c>
	{
		GPIO_voidSetPinVal(KPAD_COL_PORT, Loc_ColIterator, LOW);
    4f62:	83 e0       	ldi	r24, 0x03	; 3
    4f64:	6a 89       	ldd	r22, Y+18	; 0x12
    4f66:	40 e0       	ldi	r20, 0x00	; 0
    4f68:	0e 94 3a 16 	call	0x2c74	; 0x2c74 <GPIO_voidSetPinVal>

		for(Loc_RowIterator = (0+KPAD_ROW_START); Loc_RowIterator<=KPAD_ROW_END ; Loc_RowIterator++)
    4f6c:	19 8a       	std	Y+17, r1	; 0x11
    4f6e:	aa c0       	rjmp	.+340    	; 0x50c4 <KEYPAD_voidGetPressedButton+0x184>
		{
			Loc_PressedValue = GPIO_u8ReadPin( KPAD_ROW_PORT, Loc_RowIterator);
    4f70:	83 e0       	ldi	r24, 0x03	; 3
    4f72:	69 89       	ldd	r22, Y+17	; 0x11
    4f74:	0e 94 9b 18 	call	0x3136	; 0x3136 <GPIO_u8ReadPin>
    4f78:	88 8b       	std	Y+16, r24	; 0x10
			if (Loc_PressedValue == 0)
    4f7a:	88 89       	ldd	r24, Y+16	; 0x10
    4f7c:	88 23       	and	r24, r24
    4f7e:	09 f0       	breq	.+2      	; 0x4f82 <KEYPAD_voidGetPressedButton+0x42>
    4f80:	9e c0       	rjmp	.+316    	; 0x50be <KEYPAD_voidGetPressedButton+0x17e>
    4f82:	80 e0       	ldi	r24, 0x00	; 0
    4f84:	90 e0       	ldi	r25, 0x00	; 0
    4f86:	a8 e4       	ldi	r26, 0x48	; 72
    4f88:	b2 e4       	ldi	r27, 0x42	; 66
    4f8a:	8b 87       	std	Y+11, r24	; 0x0b
    4f8c:	9c 87       	std	Y+12, r25	; 0x0c
    4f8e:	ad 87       	std	Y+13, r26	; 0x0d
    4f90:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4f92:	6b 85       	ldd	r22, Y+11	; 0x0b
    4f94:	7c 85       	ldd	r23, Y+12	; 0x0c
    4f96:	8d 85       	ldd	r24, Y+13	; 0x0d
    4f98:	9e 85       	ldd	r25, Y+14	; 0x0e
    4f9a:	20 e0       	ldi	r18, 0x00	; 0
    4f9c:	30 e0       	ldi	r19, 0x00	; 0
    4f9e:	4a e7       	ldi	r20, 0x7A	; 122
    4fa0:	53 e4       	ldi	r21, 0x43	; 67
    4fa2:	0e 94 2b 10 	call	0x2056	; 0x2056 <__mulsf3>
    4fa6:	dc 01       	movw	r26, r24
    4fa8:	cb 01       	movw	r24, r22
    4faa:	8f 83       	std	Y+7, r24	; 0x07
    4fac:	98 87       	std	Y+8, r25	; 0x08
    4fae:	a9 87       	std	Y+9, r26	; 0x09
    4fb0:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    4fb2:	6f 81       	ldd	r22, Y+7	; 0x07
    4fb4:	78 85       	ldd	r23, Y+8	; 0x08
    4fb6:	89 85       	ldd	r24, Y+9	; 0x09
    4fb8:	9a 85       	ldd	r25, Y+10	; 0x0a
    4fba:	20 e0       	ldi	r18, 0x00	; 0
    4fbc:	30 e0       	ldi	r19, 0x00	; 0
    4fbe:	40 e8       	ldi	r20, 0x80	; 128
    4fc0:	5f e3       	ldi	r21, 0x3F	; 63
    4fc2:	0e 94 31 12 	call	0x2462	; 0x2462 <__ltsf2>
    4fc6:	88 23       	and	r24, r24
    4fc8:	2c f4       	brge	.+10     	; 0x4fd4 <KEYPAD_voidGetPressedButton+0x94>
		__ticks = 1;
    4fca:	81 e0       	ldi	r24, 0x01	; 1
    4fcc:	90 e0       	ldi	r25, 0x00	; 0
    4fce:	9e 83       	std	Y+6, r25	; 0x06
    4fd0:	8d 83       	std	Y+5, r24	; 0x05
    4fd2:	3f c0       	rjmp	.+126    	; 0x5052 <KEYPAD_voidGetPressedButton+0x112>
	else if (__tmp > 65535)
    4fd4:	6f 81       	ldd	r22, Y+7	; 0x07
    4fd6:	78 85       	ldd	r23, Y+8	; 0x08
    4fd8:	89 85       	ldd	r24, Y+9	; 0x09
    4fda:	9a 85       	ldd	r25, Y+10	; 0x0a
    4fdc:	20 e0       	ldi	r18, 0x00	; 0
    4fde:	3f ef       	ldi	r19, 0xFF	; 255
    4fe0:	4f e7       	ldi	r20, 0x7F	; 127
    4fe2:	57 e4       	ldi	r21, 0x47	; 71
    4fe4:	0e 94 d1 11 	call	0x23a2	; 0x23a2 <__gtsf2>
    4fe8:	18 16       	cp	r1, r24
    4fea:	4c f5       	brge	.+82     	; 0x503e <KEYPAD_voidGetPressedButton+0xfe>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4fec:	6b 85       	ldd	r22, Y+11	; 0x0b
    4fee:	7c 85       	ldd	r23, Y+12	; 0x0c
    4ff0:	8d 85       	ldd	r24, Y+13	; 0x0d
    4ff2:	9e 85       	ldd	r25, Y+14	; 0x0e
    4ff4:	20 e0       	ldi	r18, 0x00	; 0
    4ff6:	30 e0       	ldi	r19, 0x00	; 0
    4ff8:	40 e2       	ldi	r20, 0x20	; 32
    4ffa:	51 e4       	ldi	r21, 0x41	; 65
    4ffc:	0e 94 2b 10 	call	0x2056	; 0x2056 <__mulsf3>
    5000:	dc 01       	movw	r26, r24
    5002:	cb 01       	movw	r24, r22
    5004:	bc 01       	movw	r22, r24
    5006:	cd 01       	movw	r24, r26
    5008:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    500c:	dc 01       	movw	r26, r24
    500e:	cb 01       	movw	r24, r22
    5010:	9e 83       	std	Y+6, r25	; 0x06
    5012:	8d 83       	std	Y+5, r24	; 0x05
    5014:	0f c0       	rjmp	.+30     	; 0x5034 <KEYPAD_voidGetPressedButton+0xf4>
    5016:	89 e1       	ldi	r24, 0x19	; 25
    5018:	90 e0       	ldi	r25, 0x00	; 0
    501a:	9c 83       	std	Y+4, r25	; 0x04
    501c:	8b 83       	std	Y+3, r24	; 0x03
    501e:	8b 81       	ldd	r24, Y+3	; 0x03
    5020:	9c 81       	ldd	r25, Y+4	; 0x04
    5022:	01 97       	sbiw	r24, 0x01	; 1
    5024:	f1 f7       	brne	.-4      	; 0x5022 <KEYPAD_voidGetPressedButton+0xe2>
    5026:	9c 83       	std	Y+4, r25	; 0x04
    5028:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    502a:	8d 81       	ldd	r24, Y+5	; 0x05
    502c:	9e 81       	ldd	r25, Y+6	; 0x06
    502e:	01 97       	sbiw	r24, 0x01	; 1
    5030:	9e 83       	std	Y+6, r25	; 0x06
    5032:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5034:	8d 81       	ldd	r24, Y+5	; 0x05
    5036:	9e 81       	ldd	r25, Y+6	; 0x06
    5038:	00 97       	sbiw	r24, 0x00	; 0
    503a:	69 f7       	brne	.-38     	; 0x5016 <KEYPAD_voidGetPressedButton+0xd6>
    503c:	14 c0       	rjmp	.+40     	; 0x5066 <KEYPAD_voidGetPressedButton+0x126>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    503e:	6f 81       	ldd	r22, Y+7	; 0x07
    5040:	78 85       	ldd	r23, Y+8	; 0x08
    5042:	89 85       	ldd	r24, Y+9	; 0x09
    5044:	9a 85       	ldd	r25, Y+10	; 0x0a
    5046:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    504a:	dc 01       	movw	r26, r24
    504c:	cb 01       	movw	r24, r22
    504e:	9e 83       	std	Y+6, r25	; 0x06
    5050:	8d 83       	std	Y+5, r24	; 0x05
    5052:	8d 81       	ldd	r24, Y+5	; 0x05
    5054:	9e 81       	ldd	r25, Y+6	; 0x06
    5056:	9a 83       	std	Y+2, r25	; 0x02
    5058:	89 83       	std	Y+1, r24	; 0x01
    505a:	89 81       	ldd	r24, Y+1	; 0x01
    505c:	9a 81       	ldd	r25, Y+2	; 0x02
    505e:	01 97       	sbiw	r24, 0x01	; 1
    5060:	f1 f7       	brne	.-4      	; 0x505e <KEYPAD_voidGetPressedButton+0x11e>
    5062:	9a 83       	std	Y+2, r25	; 0x02
    5064:	89 83       	std	Y+1, r24	; 0x01
			{
				_delay_ms(50);
				Loc_PressedValue = GPIO_u8ReadPin( KPAD_ROW_PORT,Loc_RowIterator);
    5066:	83 e0       	ldi	r24, 0x03	; 3
    5068:	69 89       	ldd	r22, Y+17	; 0x11
    506a:	0e 94 9b 18 	call	0x3136	; 0x3136 <GPIO_u8ReadPin>
    506e:	88 8b       	std	Y+16, r24	; 0x10
				if (Loc_PressedValue == 0)
    5070:	88 89       	ldd	r24, Y+16	; 0x10
    5072:	88 23       	and	r24, r24
    5074:	a9 f4       	brne	.+42     	; 0x50a0 <KEYPAD_voidGetPressedButton+0x160>
				{
					Loc_ReturnData=KEYPAD_Map[Loc_RowIterator - KPAD_ROW_START][Loc_ColIterator - KPAD_COL_START];
    5076:	89 89       	ldd	r24, Y+17	; 0x11
    5078:	48 2f       	mov	r20, r24
    507a:	50 e0       	ldi	r21, 0x00	; 0
    507c:	8a 89       	ldd	r24, Y+18	; 0x12
    507e:	88 2f       	mov	r24, r24
    5080:	90 e0       	ldi	r25, 0x00	; 0
    5082:	9c 01       	movw	r18, r24
    5084:	24 50       	subi	r18, 0x04	; 4
    5086:	30 40       	sbci	r19, 0x00	; 0
    5088:	ca 01       	movw	r24, r20
    508a:	88 0f       	add	r24, r24
    508c:	99 1f       	adc	r25, r25
    508e:	88 0f       	add	r24, r24
    5090:	99 1f       	adc	r25, r25
    5092:	82 0f       	add	r24, r18
    5094:	93 1f       	adc	r25, r19
    5096:	fc 01       	movw	r30, r24
    5098:	e2 59       	subi	r30, 0x92	; 146
    509a:	fe 4f       	sbci	r31, 0xFE	; 254
    509c:	80 81       	ld	r24, Z
    509e:	8f 87       	std	Y+15, r24	; 0x0f
				}
				Loc_PressedValue = GPIO_u8ReadPin( KPAD_ROW_PORT,Loc_RowIterator);
    50a0:	83 e0       	ldi	r24, 0x03	; 3
    50a2:	69 89       	ldd	r22, Y+17	; 0x11
    50a4:	0e 94 9b 18 	call	0x3136	; 0x3136 <GPIO_u8ReadPin>
    50a8:	88 8b       	std	Y+16, r24	; 0x10
    50aa:	05 c0       	rjmp	.+10     	; 0x50b6 <KEYPAD_voidGetPressedButton+0x176>
				while(Loc_PressedValue == 0)
				{
					Loc_PressedValue = GPIO_u8ReadPin( KPAD_ROW_PORT,Loc_RowIterator);
    50ac:	83 e0       	ldi	r24, 0x03	; 3
    50ae:	69 89       	ldd	r22, Y+17	; 0x11
    50b0:	0e 94 9b 18 	call	0x3136	; 0x3136 <GPIO_u8ReadPin>
    50b4:	88 8b       	std	Y+16, r24	; 0x10
				if (Loc_PressedValue == 0)
				{
					Loc_ReturnData=KEYPAD_Map[Loc_RowIterator - KPAD_ROW_START][Loc_ColIterator - KPAD_COL_START];
				}
				Loc_PressedValue = GPIO_u8ReadPin( KPAD_ROW_PORT,Loc_RowIterator);
				while(Loc_PressedValue == 0)
    50b6:	88 89       	ldd	r24, Y+16	; 0x10
    50b8:	88 23       	and	r24, r24
    50ba:	c1 f3       	breq	.-16     	; 0x50ac <KEYPAD_voidGetPressedButton+0x16c>
    50bc:	07 c0       	rjmp	.+14     	; 0x50cc <KEYPAD_voidGetPressedButton+0x18c>
	u8 Loc_ReturnData = 0;
	for(Loc_ColIterator = (0+KPAD_COL_START); Loc_ColIterator<=KPAD_COL_END ; Loc_ColIterator++)
	{
		GPIO_voidSetPinVal(KPAD_COL_PORT, Loc_ColIterator, LOW);

		for(Loc_RowIterator = (0+KPAD_ROW_START); Loc_RowIterator<=KPAD_ROW_END ; Loc_RowIterator++)
    50be:	89 89       	ldd	r24, Y+17	; 0x11
    50c0:	8f 5f       	subi	r24, 0xFF	; 255
    50c2:	89 8b       	std	Y+17, r24	; 0x11
    50c4:	89 89       	ldd	r24, Y+17	; 0x11
    50c6:	84 30       	cpi	r24, 0x04	; 4
    50c8:	08 f4       	brcc	.+2      	; 0x50cc <KEYPAD_voidGetPressedButton+0x18c>
    50ca:	52 cf       	rjmp	.-348    	; 0x4f70 <KEYPAD_voidGetPressedButton+0x30>
					Loc_PressedValue = GPIO_u8ReadPin( KPAD_ROW_PORT,Loc_RowIterator);
				}
				break;
			}
		}
		GPIO_voidSetPinVal(KPAD_COL_PORT, Loc_ColIterator,HIGH);
    50cc:	83 e0       	ldi	r24, 0x03	; 3
    50ce:	6a 89       	ldd	r22, Y+18	; 0x12
    50d0:	41 e0       	ldi	r20, 0x01	; 1
    50d2:	0e 94 3a 16 	call	0x2c74	; 0x2c74 <GPIO_voidSetPinVal>
{
	u8 Loc_ColIterator = 0;
	u8 Loc_RowIterator = 0;
	u8 Loc_PressedValue = 0;
	u8 Loc_ReturnData = 0;
	for(Loc_ColIterator = (0+KPAD_COL_START); Loc_ColIterator<=KPAD_COL_END ; Loc_ColIterator++)
    50d6:	8a 89       	ldd	r24, Y+18	; 0x12
    50d8:	8f 5f       	subi	r24, 0xFF	; 255
    50da:	8a 8b       	std	Y+18, r24	; 0x12
    50dc:	8a 89       	ldd	r24, Y+18	; 0x12
    50de:	88 30       	cpi	r24, 0x08	; 8
    50e0:	08 f4       	brcc	.+2      	; 0x50e4 <KEYPAD_voidGetPressedButton+0x1a4>
    50e2:	3f cf       	rjmp	.-386    	; 0x4f62 <KEYPAD_voidGetPressedButton+0x22>
				break;
			}
		}
		GPIO_voidSetPinVal(KPAD_COL_PORT, Loc_ColIterator,HIGH);
	}
	return Loc_ReturnData;
    50e4:	8f 85       	ldd	r24, Y+15	; 0x0f

}
    50e6:	62 96       	adiw	r28, 0x12	; 18
    50e8:	0f b6       	in	r0, 0x3f	; 63
    50ea:	f8 94       	cli
    50ec:	de bf       	out	0x3e, r29	; 62
    50ee:	0f be       	out	0x3f, r0	; 63
    50f0:	cd bf       	out	0x3d, r28	; 61
    50f2:	cf 91       	pop	r28
    50f4:	df 91       	pop	r29
    50f6:	08 95       	ret

000050f8 <Array_voidClear>:
#include "../LIB/STD_TYPES.h"
#include "Calc.h"


void Array_voidClear(void * Copy_vidptrArray , u8 Copy_u8ArrayLength , u8 Copy_u8Type)
{
    50f8:	df 93       	push	r29
    50fa:	cf 93       	push	r28
    50fc:	00 d0       	rcall	.+0      	; 0x50fe <Array_voidClear+0x6>
    50fe:	00 d0       	rcall	.+0      	; 0x5100 <Array_voidClear+0x8>
    5100:	0f 92       	push	r0
    5102:	cd b7       	in	r28, 0x3d	; 61
    5104:	de b7       	in	r29, 0x3e	; 62
    5106:	9b 83       	std	Y+3, r25	; 0x03
    5108:	8a 83       	std	Y+2, r24	; 0x02
    510a:	6c 83       	std	Y+4, r22	; 0x04
    510c:	4d 83       	std	Y+5, r20	; 0x05
	for( u8 Local_u8LoopIterator = 0; Local_u8LoopIterator <Copy_u8ArrayLength ; Local_u8LoopIterator++ )
    510e:	19 82       	std	Y+1, r1	; 0x01
    5110:	1d c0       	rjmp	.+58     	; 0x514c <Array_voidClear+0x54>
	{
		if( Copy_u8Type == Uint8 )
    5112:	8d 81       	ldd	r24, Y+5	; 0x05
    5114:	88 23       	and	r24, r24
    5116:	51 f4       	brne	.+20     	; 0x512c <Array_voidClear+0x34>
		{
			*(u8*)(Copy_vidptrArray+Local_u8LoopIterator) = 0;
    5118:	2a 81       	ldd	r18, Y+2	; 0x02
    511a:	3b 81       	ldd	r19, Y+3	; 0x03
    511c:	89 81       	ldd	r24, Y+1	; 0x01
    511e:	88 2f       	mov	r24, r24
    5120:	90 e0       	ldi	r25, 0x00	; 0
    5122:	f9 01       	movw	r30, r18
    5124:	e8 0f       	add	r30, r24
    5126:	f9 1f       	adc	r31, r25
    5128:	10 82       	st	Z, r1
    512a:	0d c0       	rjmp	.+26     	; 0x5146 <Array_voidClear+0x4e>
		}
		else if( Copy_u8Type == Uint16 )
    512c:	8d 81       	ldd	r24, Y+5	; 0x05
    512e:	81 30       	cpi	r24, 0x01	; 1
    5130:	51 f4       	brne	.+20     	; 0x5146 <Array_voidClear+0x4e>
		{
			*(u16*)(Copy_vidptrArray+Local_u8LoopIterator) = 0;
    5132:	2a 81       	ldd	r18, Y+2	; 0x02
    5134:	3b 81       	ldd	r19, Y+3	; 0x03
    5136:	89 81       	ldd	r24, Y+1	; 0x01
    5138:	88 2f       	mov	r24, r24
    513a:	90 e0       	ldi	r25, 0x00	; 0
    513c:	f9 01       	movw	r30, r18
    513e:	e8 0f       	add	r30, r24
    5140:	f9 1f       	adc	r31, r25
    5142:	11 82       	std	Z+1, r1	; 0x01
    5144:	10 82       	st	Z, r1
#include "Calc.h"


void Array_voidClear(void * Copy_vidptrArray , u8 Copy_u8ArrayLength , u8 Copy_u8Type)
{
	for( u8 Local_u8LoopIterator = 0; Local_u8LoopIterator <Copy_u8ArrayLength ; Local_u8LoopIterator++ )
    5146:	89 81       	ldd	r24, Y+1	; 0x01
    5148:	8f 5f       	subi	r24, 0xFF	; 255
    514a:	89 83       	std	Y+1, r24	; 0x01
    514c:	99 81       	ldd	r25, Y+1	; 0x01
    514e:	8c 81       	ldd	r24, Y+4	; 0x04
    5150:	98 17       	cp	r25, r24
    5152:	f8 f2       	brcs	.-66     	; 0x5112 <Array_voidClear+0x1a>
		else if( Copy_u8Type == Uint16 )
		{
			*(u16*)(Copy_vidptrArray+Local_u8LoopIterator) = 0;
		}
	}
}
    5154:	0f 90       	pop	r0
    5156:	0f 90       	pop	r0
    5158:	0f 90       	pop	r0
    515a:	0f 90       	pop	r0
    515c:	0f 90       	pop	r0
    515e:	cf 91       	pop	r28
    5160:	df 91       	pop	r29
    5162:	08 95       	ret

00005164 <StringTOValues>:


u8 StringTOValues(u8 * Copy_u8String ,  u16 * Copy_u16Expression)
{
    5164:	df 93       	push	r29
    5166:	cf 93       	push	r28
    5168:	cd b7       	in	r28, 0x3d	; 61
    516a:	de b7       	in	r29, 0x3e	; 62
    516c:	29 97       	sbiw	r28, 0x09	; 9
    516e:	0f b6       	in	r0, 0x3f	; 63
    5170:	f8 94       	cli
    5172:	de bf       	out	0x3e, r29	; 62
    5174:	0f be       	out	0x3f, r0	; 63
    5176:	cd bf       	out	0x3d, r28	; 61
    5178:	9d 83       	std	Y+5, r25	; 0x05
    517a:	8c 83       	std	Y+4, r24	; 0x04
    517c:	7f 83       	std	Y+7, r23	; 0x07
    517e:	6e 83       	std	Y+6, r22	; 0x06
	u8 Local_u8ArrayStringCounter = 0;
    5180:	1b 82       	std	Y+3, r1	; 0x03
	u8 Local_u8ExpressionArrayIndexCounter = 0;
    5182:	1a 82       	std	Y+2, r1	; 0x02
	u8 Local_u8Temp = 0;
    5184:	19 82       	std	Y+1, r1	; 0x01
    5186:	7a c0       	rjmp	.+244    	; 0x527c <StringTOValues+0x118>
	while( Copy_u8String[ Local_u8ArrayStringCounter ] != '\0' )
	{
		switch(Copy_u8String[ Local_u8ArrayStringCounter ])
    5188:	8b 81       	ldd	r24, Y+3	; 0x03
    518a:	28 2f       	mov	r18, r24
    518c:	30 e0       	ldi	r19, 0x00	; 0
    518e:	8c 81       	ldd	r24, Y+4	; 0x04
    5190:	9d 81       	ldd	r25, Y+5	; 0x05
    5192:	fc 01       	movw	r30, r24
    5194:	e2 0f       	add	r30, r18
    5196:	f3 1f       	adc	r31, r19
    5198:	80 81       	ld	r24, Z
    519a:	28 2f       	mov	r18, r24
    519c:	30 e0       	ldi	r19, 0x00	; 0
    519e:	39 87       	std	Y+9, r19	; 0x09
    51a0:	28 87       	std	Y+8, r18	; 0x08
    51a2:	88 85       	ldd	r24, Y+8	; 0x08
    51a4:	99 85       	ldd	r25, Y+9	; 0x09
    51a6:	8a 32       	cpi	r24, 0x2A	; 42
    51a8:	91 05       	cpc	r25, r1
    51aa:	84 f1       	brlt	.+96     	; 0x520c <StringTOValues+0xa8>
    51ac:	28 85       	ldd	r18, Y+8	; 0x08
    51ae:	39 85       	ldd	r19, Y+9	; 0x09
    51b0:	2c 32       	cpi	r18, 0x2C	; 44
    51b2:	31 05       	cpc	r19, r1
    51b4:	54 f0       	brlt	.+20     	; 0x51ca <StringTOValues+0x66>
    51b6:	88 85       	ldd	r24, Y+8	; 0x08
    51b8:	99 85       	ldd	r25, Y+9	; 0x09
    51ba:	8d 32       	cpi	r24, 0x2D	; 45
    51bc:	91 05       	cpc	r25, r1
    51be:	29 f0       	breq	.+10     	; 0x51ca <StringTOValues+0x66>
    51c0:	28 85       	ldd	r18, Y+8	; 0x08
    51c2:	39 85       	ldd	r19, Y+9	; 0x09
    51c4:	2f 32       	cpi	r18, 0x2F	; 47
    51c6:	31 05       	cpc	r19, r1
    51c8:	09 f5       	brne	.+66     	; 0x520c <StringTOValues+0xa8>
		{
		case '+':
		case '-':
		case '*':
		case '/':	Local_u8ExpressionArrayIndexCounter++;
    51ca:	8a 81       	ldd	r24, Y+2	; 0x02
    51cc:	8f 5f       	subi	r24, 0xFF	; 255
    51ce:	8a 83       	std	Y+2, r24	; 0x02
		Copy_u16Expression[Local_u8ExpressionArrayIndexCounter++] = ( Copy_u8String[Local_u8ArrayStringCounter] | (1 << 15) );
    51d0:	8a 81       	ldd	r24, Y+2	; 0x02
    51d2:	88 2f       	mov	r24, r24
    51d4:	90 e0       	ldi	r25, 0x00	; 0
    51d6:	9c 01       	movw	r18, r24
    51d8:	22 0f       	add	r18, r18
    51da:	33 1f       	adc	r19, r19
    51dc:	8e 81       	ldd	r24, Y+6	; 0x06
    51de:	9f 81       	ldd	r25, Y+7	; 0x07
    51e0:	dc 01       	movw	r26, r24
    51e2:	a2 0f       	add	r26, r18
    51e4:	b3 1f       	adc	r27, r19
    51e6:	8b 81       	ldd	r24, Y+3	; 0x03
    51e8:	28 2f       	mov	r18, r24
    51ea:	30 e0       	ldi	r19, 0x00	; 0
    51ec:	8c 81       	ldd	r24, Y+4	; 0x04
    51ee:	9d 81       	ldd	r25, Y+5	; 0x05
    51f0:	fc 01       	movw	r30, r24
    51f2:	e2 0f       	add	r30, r18
    51f4:	f3 1f       	adc	r31, r19
    51f6:	80 81       	ld	r24, Z
    51f8:	88 2f       	mov	r24, r24
    51fa:	90 e0       	ldi	r25, 0x00	; 0
    51fc:	90 68       	ori	r25, 0x80	; 128
    51fe:	11 96       	adiw	r26, 0x01	; 1
    5200:	9c 93       	st	X, r25
    5202:	8e 93       	st	-X, r24
    5204:	8a 81       	ldd	r24, Y+2	; 0x02
    5206:	8f 5f       	subi	r24, 0xFF	; 255
    5208:	8a 83       	std	Y+2, r24	; 0x02
    520a:	35 c0       	rjmp	.+106    	; 0x5276 <StringTOValues+0x112>

		break;
		default:
			Local_u8Temp = Copy_u8String[Local_u8ArrayStringCounter] - '0';
    520c:	8b 81       	ldd	r24, Y+3	; 0x03
    520e:	28 2f       	mov	r18, r24
    5210:	30 e0       	ldi	r19, 0x00	; 0
    5212:	8c 81       	ldd	r24, Y+4	; 0x04
    5214:	9d 81       	ldd	r25, Y+5	; 0x05
    5216:	fc 01       	movw	r30, r24
    5218:	e2 0f       	add	r30, r18
    521a:	f3 1f       	adc	r31, r19
    521c:	80 81       	ld	r24, Z
    521e:	80 53       	subi	r24, 0x30	; 48
    5220:	89 83       	std	Y+1, r24	; 0x01
			Copy_u16Expression[Local_u8ExpressionArrayIndexCounter] = Copy_u16Expression[Local_u8ExpressionArrayIndexCounter]*10 + Local_u8Temp;
    5222:	8a 81       	ldd	r24, Y+2	; 0x02
    5224:	88 2f       	mov	r24, r24
    5226:	90 e0       	ldi	r25, 0x00	; 0
    5228:	9c 01       	movw	r18, r24
    522a:	22 0f       	add	r18, r18
    522c:	33 1f       	adc	r19, r19
    522e:	8e 81       	ldd	r24, Y+6	; 0x06
    5230:	9f 81       	ldd	r25, Y+7	; 0x07
    5232:	dc 01       	movw	r26, r24
    5234:	a2 0f       	add	r26, r18
    5236:	b3 1f       	adc	r27, r19
    5238:	8a 81       	ldd	r24, Y+2	; 0x02
    523a:	88 2f       	mov	r24, r24
    523c:	90 e0       	ldi	r25, 0x00	; 0
    523e:	9c 01       	movw	r18, r24
    5240:	22 0f       	add	r18, r18
    5242:	33 1f       	adc	r19, r19
    5244:	8e 81       	ldd	r24, Y+6	; 0x06
    5246:	9f 81       	ldd	r25, Y+7	; 0x07
    5248:	fc 01       	movw	r30, r24
    524a:	e2 0f       	add	r30, r18
    524c:	f3 1f       	adc	r31, r19
    524e:	80 81       	ld	r24, Z
    5250:	91 81       	ldd	r25, Z+1	; 0x01
    5252:	9c 01       	movw	r18, r24
    5254:	22 0f       	add	r18, r18
    5256:	33 1f       	adc	r19, r19
    5258:	c9 01       	movw	r24, r18
    525a:	88 0f       	add	r24, r24
    525c:	99 1f       	adc	r25, r25
    525e:	88 0f       	add	r24, r24
    5260:	99 1f       	adc	r25, r25
    5262:	28 0f       	add	r18, r24
    5264:	39 1f       	adc	r19, r25
    5266:	89 81       	ldd	r24, Y+1	; 0x01
    5268:	88 2f       	mov	r24, r24
    526a:	90 e0       	ldi	r25, 0x00	; 0
    526c:	82 0f       	add	r24, r18
    526e:	93 1f       	adc	r25, r19
    5270:	11 96       	adiw	r26, 0x01	; 1
    5272:	9c 93       	st	X, r25
    5274:	8e 93       	st	-X, r24

		}
		Local_u8ArrayStringCounter++;
    5276:	8b 81       	ldd	r24, Y+3	; 0x03
    5278:	8f 5f       	subi	r24, 0xFF	; 255
    527a:	8b 83       	std	Y+3, r24	; 0x03
u8 StringTOValues(u8 * Copy_u8String ,  u16 * Copy_u16Expression)
{
	u8 Local_u8ArrayStringCounter = 0;
	u8 Local_u8ExpressionArrayIndexCounter = 0;
	u8 Local_u8Temp = 0;
	while( Copy_u8String[ Local_u8ArrayStringCounter ] != '\0' )
    527c:	8b 81       	ldd	r24, Y+3	; 0x03
    527e:	28 2f       	mov	r18, r24
    5280:	30 e0       	ldi	r19, 0x00	; 0
    5282:	8c 81       	ldd	r24, Y+4	; 0x04
    5284:	9d 81       	ldd	r25, Y+5	; 0x05
    5286:	fc 01       	movw	r30, r24
    5288:	e2 0f       	add	r30, r18
    528a:	f3 1f       	adc	r31, r19
    528c:	80 81       	ld	r24, Z
    528e:	88 23       	and	r24, r24
    5290:	09 f0       	breq	.+2      	; 0x5294 <StringTOValues+0x130>
    5292:	7a cf       	rjmp	.-268    	; 0x5188 <StringTOValues+0x24>
			Copy_u16Expression[Local_u8ExpressionArrayIndexCounter] = Copy_u16Expression[Local_u8ExpressionArrayIndexCounter]*10 + Local_u8Temp;

		}
		Local_u8ArrayStringCounter++;
	}
	return Local_u8ExpressionArrayIndexCounter;
    5294:	8a 81       	ldd	r24, Y+2	; 0x02
}
    5296:	29 96       	adiw	r28, 0x09	; 9
    5298:	0f b6       	in	r0, 0x3f	; 63
    529a:	f8 94       	cli
    529c:	de bf       	out	0x3e, r29	; 62
    529e:	0f be       	out	0x3f, r0	; 63
    52a0:	cd bf       	out	0x3d, r28	; 61
    52a2:	cf 91       	pop	r28
    52a4:	df 91       	pop	r29
    52a6:	08 95       	ret

000052a8 <createStack>:
	s32* array;
};

// Stack Operations
struct Stack* createStack( u8 capacity )
{
    52a8:	df 93       	push	r29
    52aa:	cf 93       	push	r28
    52ac:	00 d0       	rcall	.+0      	; 0x52ae <createStack+0x6>
    52ae:	00 d0       	rcall	.+0      	; 0x52b0 <createStack+0x8>
    52b0:	0f 92       	push	r0
    52b2:	cd b7       	in	r28, 0x3d	; 61
    52b4:	de b7       	in	r29, 0x3e	; 62
    52b6:	8b 83       	std	Y+3, r24	; 0x03
	struct Stack* stack = (struct Stack*) malloc(sizeof(struct Stack));
    52b8:	84 e0       	ldi	r24, 0x04	; 4
    52ba:	90 e0       	ldi	r25, 0x00	; 0
    52bc:	0e 94 48 2e 	call	0x5c90	; 0x5c90 <malloc>
    52c0:	9a 83       	std	Y+2, r25	; 0x02
    52c2:	89 83       	std	Y+1, r24	; 0x01

	if (!stack)
    52c4:	89 81       	ldd	r24, Y+1	; 0x01
    52c6:	9a 81       	ldd	r25, Y+2	; 0x02
    52c8:	00 97       	sbiw	r24, 0x00	; 0
    52ca:	19 f4       	brne	.+6      	; 0x52d2 <createStack+0x2a>
		return NULL;
    52cc:	1d 82       	std	Y+5, r1	; 0x05
    52ce:	1c 82       	std	Y+4, r1	; 0x04
    52d0:	24 c0       	rjmp	.+72     	; 0x531a <createStack+0x72>

	stack->top = -1;
    52d2:	e9 81       	ldd	r30, Y+1	; 0x01
    52d4:	fa 81       	ldd	r31, Y+2	; 0x02
    52d6:	8f ef       	ldi	r24, 0xFF	; 255
    52d8:	80 83       	st	Z, r24
	stack->capacity = capacity;
    52da:	e9 81       	ldd	r30, Y+1	; 0x01
    52dc:	fa 81       	ldd	r31, Y+2	; 0x02
    52de:	8b 81       	ldd	r24, Y+3	; 0x03
    52e0:	81 83       	std	Z+1, r24	; 0x01

	stack->array = (s32*) malloc(stack->capacity * sizeof(s32));
    52e2:	e9 81       	ldd	r30, Y+1	; 0x01
    52e4:	fa 81       	ldd	r31, Y+2	; 0x02
    52e6:	81 81       	ldd	r24, Z+1	; 0x01
    52e8:	88 2f       	mov	r24, r24
    52ea:	90 e0       	ldi	r25, 0x00	; 0
    52ec:	88 0f       	add	r24, r24
    52ee:	99 1f       	adc	r25, r25
    52f0:	88 0f       	add	r24, r24
    52f2:	99 1f       	adc	r25, r25
    52f4:	0e 94 48 2e 	call	0x5c90	; 0x5c90 <malloc>
    52f8:	e9 81       	ldd	r30, Y+1	; 0x01
    52fa:	fa 81       	ldd	r31, Y+2	; 0x02
    52fc:	93 83       	std	Z+3, r25	; 0x03
    52fe:	82 83       	std	Z+2, r24	; 0x02

	if (!stack->array)
    5300:	e9 81       	ldd	r30, Y+1	; 0x01
    5302:	fa 81       	ldd	r31, Y+2	; 0x02
    5304:	82 81       	ldd	r24, Z+2	; 0x02
    5306:	93 81       	ldd	r25, Z+3	; 0x03
    5308:	00 97       	sbiw	r24, 0x00	; 0
    530a:	19 f4       	brne	.+6      	; 0x5312 <createStack+0x6a>
		return NULL;
    530c:	1d 82       	std	Y+5, r1	; 0x05
    530e:	1c 82       	std	Y+4, r1	; 0x04
    5310:	04 c0       	rjmp	.+8      	; 0x531a <createStack+0x72>

	return stack;
    5312:	89 81       	ldd	r24, Y+1	; 0x01
    5314:	9a 81       	ldd	r25, Y+2	; 0x02
    5316:	9d 83       	std	Y+5, r25	; 0x05
    5318:	8c 83       	std	Y+4, r24	; 0x04
    531a:	8c 81       	ldd	r24, Y+4	; 0x04
    531c:	9d 81       	ldd	r25, Y+5	; 0x05
}
    531e:	0f 90       	pop	r0
    5320:	0f 90       	pop	r0
    5322:	0f 90       	pop	r0
    5324:	0f 90       	pop	r0
    5326:	0f 90       	pop	r0
    5328:	cf 91       	pop	r28
    532a:	df 91       	pop	r29
    532c:	08 95       	ret

0000532e <isEmpty>:
u8 isEmpty(struct Stack* stack)
{
    532e:	df 93       	push	r29
    5330:	cf 93       	push	r28
    5332:	00 d0       	rcall	.+0      	; 0x5334 <isEmpty+0x6>
    5334:	0f 92       	push	r0
    5336:	cd b7       	in	r28, 0x3d	; 61
    5338:	de b7       	in	r29, 0x3e	; 62
    533a:	9a 83       	std	Y+2, r25	; 0x02
    533c:	89 83       	std	Y+1, r24	; 0x01
	return (stack->top == -1) ;
    533e:	e9 81       	ldd	r30, Y+1	; 0x01
    5340:	fa 81       	ldd	r31, Y+2	; 0x02
    5342:	80 81       	ld	r24, Z
    5344:	1b 82       	std	Y+3, r1	; 0x03
    5346:	8f 3f       	cpi	r24, 0xFF	; 255
    5348:	11 f4       	brne	.+4      	; 0x534e <isEmpty+0x20>
    534a:	81 e0       	ldi	r24, 0x01	; 1
    534c:	8b 83       	std	Y+3, r24	; 0x03
    534e:	8b 81       	ldd	r24, Y+3	; 0x03
}
    5350:	0f 90       	pop	r0
    5352:	0f 90       	pop	r0
    5354:	0f 90       	pop	r0
    5356:	cf 91       	pop	r28
    5358:	df 91       	pop	r29
    535a:	08 95       	ret

0000535c <peek>:
s32 peek(struct Stack* stack)
{
    535c:	df 93       	push	r29
    535e:	cf 93       	push	r28
    5360:	00 d0       	rcall	.+0      	; 0x5362 <peek+0x6>
    5362:	cd b7       	in	r28, 0x3d	; 61
    5364:	de b7       	in	r29, 0x3e	; 62
    5366:	9a 83       	std	Y+2, r25	; 0x02
    5368:	89 83       	std	Y+1, r24	; 0x01
	return (stack->array[stack->top]);
    536a:	e9 81       	ldd	r30, Y+1	; 0x01
    536c:	fa 81       	ldd	r31, Y+2	; 0x02
    536e:	22 81       	ldd	r18, Z+2	; 0x02
    5370:	33 81       	ldd	r19, Z+3	; 0x03
    5372:	e9 81       	ldd	r30, Y+1	; 0x01
    5374:	fa 81       	ldd	r31, Y+2	; 0x02
    5376:	80 81       	ld	r24, Z
    5378:	99 27       	eor	r25, r25
    537a:	87 fd       	sbrc	r24, 7
    537c:	90 95       	com	r25
    537e:	88 0f       	add	r24, r24
    5380:	99 1f       	adc	r25, r25
    5382:	88 0f       	add	r24, r24
    5384:	99 1f       	adc	r25, r25
    5386:	f9 01       	movw	r30, r18
    5388:	e8 0f       	add	r30, r24
    538a:	f9 1f       	adc	r31, r25
    538c:	80 81       	ld	r24, Z
    538e:	91 81       	ldd	r25, Z+1	; 0x01
    5390:	a2 81       	ldd	r26, Z+2	; 0x02
    5392:	b3 81       	ldd	r27, Z+3	; 0x03
}
    5394:	bc 01       	movw	r22, r24
    5396:	cd 01       	movw	r24, r26
    5398:	0f 90       	pop	r0
    539a:	0f 90       	pop	r0
    539c:	cf 91       	pop	r28
    539e:	df 91       	pop	r29
    53a0:	08 95       	ret

000053a2 <pop>:
s32 pop(struct Stack* stack)
{
    53a2:	df 93       	push	r29
    53a4:	cf 93       	push	r28
    53a6:	00 d0       	rcall	.+0      	; 0x53a8 <pop+0x6>
    53a8:	00 d0       	rcall	.+0      	; 0x53aa <pop+0x8>
    53aa:	00 d0       	rcall	.+0      	; 0x53ac <pop+0xa>
    53ac:	cd b7       	in	r28, 0x3d	; 61
    53ae:	de b7       	in	r29, 0x3e	; 62
    53b0:	9a 83       	std	Y+2, r25	; 0x02
    53b2:	89 83       	std	Y+1, r24	; 0x01
	if (!isEmpty(stack))
    53b4:	89 81       	ldd	r24, Y+1	; 0x01
    53b6:	9a 81       	ldd	r25, Y+2	; 0x02
    53b8:	0e 94 97 29 	call	0x532e	; 0x532e <isEmpty>
    53bc:	88 23       	and	r24, r24
    53be:	01 f5       	brne	.+64     	; 0x5400 <pop+0x5e>
		return (stack->array[stack->top--]) ;
    53c0:	e9 81       	ldd	r30, Y+1	; 0x01
    53c2:	fa 81       	ldd	r31, Y+2	; 0x02
    53c4:	22 81       	ldd	r18, Z+2	; 0x02
    53c6:	33 81       	ldd	r19, Z+3	; 0x03
    53c8:	e9 81       	ldd	r30, Y+1	; 0x01
    53ca:	fa 81       	ldd	r31, Y+2	; 0x02
    53cc:	40 81       	ld	r20, Z
    53ce:	84 2f       	mov	r24, r20
    53d0:	99 27       	eor	r25, r25
    53d2:	87 fd       	sbrc	r24, 7
    53d4:	90 95       	com	r25
    53d6:	88 0f       	add	r24, r24
    53d8:	99 1f       	adc	r25, r25
    53da:	88 0f       	add	r24, r24
    53dc:	99 1f       	adc	r25, r25
    53de:	f9 01       	movw	r30, r18
    53e0:	e8 0f       	add	r30, r24
    53e2:	f9 1f       	adc	r31, r25
    53e4:	80 81       	ld	r24, Z
    53e6:	91 81       	ldd	r25, Z+1	; 0x01
    53e8:	a2 81       	ldd	r26, Z+2	; 0x02
    53ea:	b3 81       	ldd	r27, Z+3	; 0x03
    53ec:	8b 83       	std	Y+3, r24	; 0x03
    53ee:	9c 83       	std	Y+4, r25	; 0x04
    53f0:	ad 83       	std	Y+5, r26	; 0x05
    53f2:	be 83       	std	Y+6, r27	; 0x06
    53f4:	84 2f       	mov	r24, r20
    53f6:	81 50       	subi	r24, 0x01	; 1
    53f8:	e9 81       	ldd	r30, Y+1	; 0x01
    53fa:	fa 81       	ldd	r31, Y+2	; 0x02
    53fc:	80 83       	st	Z, r24
    53fe:	08 c0       	rjmp	.+16     	; 0x5410 <pop+0x6e>
	return '$';
    5400:	84 e2       	ldi	r24, 0x24	; 36
    5402:	90 e0       	ldi	r25, 0x00	; 0
    5404:	a0 e0       	ldi	r26, 0x00	; 0
    5406:	b0 e0       	ldi	r27, 0x00	; 0
    5408:	8b 83       	std	Y+3, r24	; 0x03
    540a:	9c 83       	std	Y+4, r25	; 0x04
    540c:	ad 83       	std	Y+5, r26	; 0x05
    540e:	be 83       	std	Y+6, r27	; 0x06
    5410:	8b 81       	ldd	r24, Y+3	; 0x03
    5412:	9c 81       	ldd	r25, Y+4	; 0x04
    5414:	ad 81       	ldd	r26, Y+5	; 0x05
    5416:	be 81       	ldd	r27, Y+6	; 0x06
}
    5418:	bc 01       	movw	r22, r24
    541a:	cd 01       	movw	r24, r26
    541c:	26 96       	adiw	r28, 0x06	; 6
    541e:	0f b6       	in	r0, 0x3f	; 63
    5420:	f8 94       	cli
    5422:	de bf       	out	0x3e, r29	; 62
    5424:	0f be       	out	0x3f, r0	; 63
    5426:	cd bf       	out	0x3d, r28	; 61
    5428:	cf 91       	pop	r28
    542a:	df 91       	pop	r29
    542c:	08 95       	ret

0000542e <push>:
void push(struct Stack* stack, s32 op)
{
    542e:	df 93       	push	r29
    5430:	cf 93       	push	r28
    5432:	00 d0       	rcall	.+0      	; 0x5434 <push+0x6>
    5434:	00 d0       	rcall	.+0      	; 0x5436 <push+0x8>
    5436:	00 d0       	rcall	.+0      	; 0x5438 <push+0xa>
    5438:	cd b7       	in	r28, 0x3d	; 61
    543a:	de b7       	in	r29, 0x3e	; 62
    543c:	9a 83       	std	Y+2, r25	; 0x02
    543e:	89 83       	std	Y+1, r24	; 0x01
    5440:	4b 83       	std	Y+3, r20	; 0x03
    5442:	5c 83       	std	Y+4, r21	; 0x04
    5444:	6d 83       	std	Y+5, r22	; 0x05
    5446:	7e 83       	std	Y+6, r23	; 0x06
	stack->array[++stack->top] = op;
    5448:	e9 81       	ldd	r30, Y+1	; 0x01
    544a:	fa 81       	ldd	r31, Y+2	; 0x02
    544c:	22 81       	ldd	r18, Z+2	; 0x02
    544e:	33 81       	ldd	r19, Z+3	; 0x03
    5450:	e9 81       	ldd	r30, Y+1	; 0x01
    5452:	fa 81       	ldd	r31, Y+2	; 0x02
    5454:	80 81       	ld	r24, Z
    5456:	8f 5f       	subi	r24, 0xFF	; 255
    5458:	e9 81       	ldd	r30, Y+1	; 0x01
    545a:	fa 81       	ldd	r31, Y+2	; 0x02
    545c:	80 83       	st	Z, r24
    545e:	e9 81       	ldd	r30, Y+1	; 0x01
    5460:	fa 81       	ldd	r31, Y+2	; 0x02
    5462:	80 81       	ld	r24, Z
    5464:	99 27       	eor	r25, r25
    5466:	87 fd       	sbrc	r24, 7
    5468:	90 95       	com	r25
    546a:	88 0f       	add	r24, r24
    546c:	99 1f       	adc	r25, r25
    546e:	88 0f       	add	r24, r24
    5470:	99 1f       	adc	r25, r25
    5472:	f9 01       	movw	r30, r18
    5474:	e8 0f       	add	r30, r24
    5476:	f9 1f       	adc	r31, r25
    5478:	8b 81       	ldd	r24, Y+3	; 0x03
    547a:	9c 81       	ldd	r25, Y+4	; 0x04
    547c:	ad 81       	ldd	r26, Y+5	; 0x05
    547e:	be 81       	ldd	r27, Y+6	; 0x06
    5480:	80 83       	st	Z, r24
    5482:	91 83       	std	Z+1, r25	; 0x01
    5484:	a2 83       	std	Z+2, r26	; 0x02
    5486:	b3 83       	std	Z+3, r27	; 0x03
}
    5488:	26 96       	adiw	r28, 0x06	; 6
    548a:	0f b6       	in	r0, 0x3f	; 63
    548c:	f8 94       	cli
    548e:	de bf       	out	0x3e, r29	; 62
    5490:	0f be       	out	0x3f, r0	; 63
    5492:	cd bf       	out	0x3d, r28	; 61
    5494:	cf 91       	pop	r28
    5496:	df 91       	pop	r29
    5498:	08 95       	ret

0000549a <isOperand>:


// A utility function to check if the given character is operand
u8 isOperand(u16 Copy_u16Value)
{
    549a:	df 93       	push	r29
    549c:	cf 93       	push	r28
    549e:	00 d0       	rcall	.+0      	; 0x54a0 <isOperand+0x6>
    54a0:	0f 92       	push	r0
    54a2:	cd b7       	in	r28, 0x3d	; 61
    54a4:	de b7       	in	r29, 0x3e	; 62
    54a6:	9a 83       	std	Y+2, r25	; 0x02
    54a8:	89 83       	std	Y+1, r24	; 0x01
	return   ( !( ( Copy_u16Value >> 15 ) & 1) ) ;
    54aa:	89 81       	ldd	r24, Y+1	; 0x01
    54ac:	9a 81       	ldd	r25, Y+2	; 0x02
    54ae:	1b 82       	std	Y+3, r1	; 0x03
    54b0:	99 23       	and	r25, r25
    54b2:	14 f0       	brlt	.+4      	; 0x54b8 <isOperand+0x1e>
    54b4:	81 e0       	ldi	r24, 0x01	; 1
    54b6:	8b 83       	std	Y+3, r24	; 0x03
    54b8:	8b 81       	ldd	r24, Y+3	; 0x03
}
    54ba:	0f 90       	pop	r0
    54bc:	0f 90       	pop	r0
    54be:	0f 90       	pop	r0
    54c0:	cf 91       	pop	r28
    54c2:	df 91       	pop	r29
    54c4:	08 95       	ret

000054c6 <Prec>:

// A utility function to return precedence of a given operator
// Higher returned value means higher precedence
s8 Prec(u8 ch)
{
    54c6:	df 93       	push	r29
    54c8:	cf 93       	push	r28
    54ca:	00 d0       	rcall	.+0      	; 0x54cc <Prec+0x6>
    54cc:	00 d0       	rcall	.+0      	; 0x54ce <Prec+0x8>
    54ce:	cd b7       	in	r28, 0x3d	; 61
    54d0:	de b7       	in	r29, 0x3e	; 62
    54d2:	89 83       	std	Y+1, r24	; 0x01
	switch (ch)
    54d4:	89 81       	ldd	r24, Y+1	; 0x01
    54d6:	28 2f       	mov	r18, r24
    54d8:	30 e0       	ldi	r19, 0x00	; 0
    54da:	3c 83       	std	Y+4, r19	; 0x04
    54dc:	2b 83       	std	Y+3, r18	; 0x03
    54de:	8b 81       	ldd	r24, Y+3	; 0x03
    54e0:	9c 81       	ldd	r25, Y+4	; 0x04
    54e2:	8d 32       	cpi	r24, 0x2D	; 45
    54e4:	91 05       	cpc	r25, r1
    54e6:	d9 f0       	breq	.+54     	; 0x551e <Prec+0x58>
    54e8:	2b 81       	ldd	r18, Y+3	; 0x03
    54ea:	3c 81       	ldd	r19, Y+4	; 0x04
    54ec:	2e 32       	cpi	r18, 0x2E	; 46
    54ee:	31 05       	cpc	r19, r1
    54f0:	5c f4       	brge	.+22     	; 0x5508 <Prec+0x42>
    54f2:	8b 81       	ldd	r24, Y+3	; 0x03
    54f4:	9c 81       	ldd	r25, Y+4	; 0x04
    54f6:	8a 32       	cpi	r24, 0x2A	; 42
    54f8:	91 05       	cpc	r25, r1
    54fa:	a1 f0       	breq	.+40     	; 0x5524 <Prec+0x5e>
    54fc:	2b 81       	ldd	r18, Y+3	; 0x03
    54fe:	3c 81       	ldd	r19, Y+4	; 0x04
    5500:	2b 32       	cpi	r18, 0x2B	; 43
    5502:	31 05       	cpc	r19, r1
    5504:	61 f0       	breq	.+24     	; 0x551e <Prec+0x58>
    5506:	14 c0       	rjmp	.+40     	; 0x5530 <Prec+0x6a>
    5508:	8b 81       	ldd	r24, Y+3	; 0x03
    550a:	9c 81       	ldd	r25, Y+4	; 0x04
    550c:	8f 32       	cpi	r24, 0x2F	; 47
    550e:	91 05       	cpc	r25, r1
    5510:	49 f0       	breq	.+18     	; 0x5524 <Prec+0x5e>
    5512:	2b 81       	ldd	r18, Y+3	; 0x03
    5514:	3c 81       	ldd	r19, Y+4	; 0x04
    5516:	2e 35       	cpi	r18, 0x5E	; 94
    5518:	31 05       	cpc	r19, r1
    551a:	39 f0       	breq	.+14     	; 0x552a <Prec+0x64>
    551c:	09 c0       	rjmp	.+18     	; 0x5530 <Prec+0x6a>
	{
	case '+':
	case '-':
		return 1;
    551e:	31 e0       	ldi	r19, 0x01	; 1
    5520:	3a 83       	std	Y+2, r19	; 0x02
    5522:	08 c0       	rjmp	.+16     	; 0x5534 <Prec+0x6e>

	case '*':
	case '/':
		return 2;
    5524:	82 e0       	ldi	r24, 0x02	; 2
    5526:	8a 83       	std	Y+2, r24	; 0x02
    5528:	05 c0       	rjmp	.+10     	; 0x5534 <Prec+0x6e>

	case '^':
		return 3;
    552a:	93 e0       	ldi	r25, 0x03	; 3
    552c:	9a 83       	std	Y+2, r25	; 0x02
    552e:	02 c0       	rjmp	.+4      	; 0x5534 <Prec+0x6e>
	}
	return -1;
    5530:	2f ef       	ldi	r18, 0xFF	; 255
    5532:	2a 83       	std	Y+2, r18	; 0x02
    5534:	8a 81       	ldd	r24, Y+2	; 0x02
}
    5536:	0f 90       	pop	r0
    5538:	0f 90       	pop	r0
    553a:	0f 90       	pop	r0
    553c:	0f 90       	pop	r0
    553e:	cf 91       	pop	r28
    5540:	df 91       	pop	r29
    5542:	08 95       	ret

00005544 <infixToPostfix>:

u8 infixToPostfix(u16 * exp , u8 Copy_u8ExpressionLength)
{
    5544:	0f 93       	push	r16
    5546:	1f 93       	push	r17
    5548:	df 93       	push	r29
    554a:	cf 93       	push	r28
    554c:	cd b7       	in	r28, 0x3d	; 61
    554e:	de b7       	in	r29, 0x3e	; 62
    5550:	28 97       	sbiw	r28, 0x08	; 8
    5552:	0f b6       	in	r0, 0x3f	; 63
    5554:	f8 94       	cli
    5556:	de bf       	out	0x3e, r29	; 62
    5558:	0f be       	out	0x3f, r0	; 63
    555a:	cd bf       	out	0x3d, r28	; 61
    555c:	9e 83       	std	Y+6, r25	; 0x06
    555e:	8d 83       	std	Y+5, r24	; 0x05
    5560:	6f 83       	std	Y+7, r22	; 0x07
	s8 i, k;

	// Create a stack of capacity equal to expression size
	struct Stack* stack = createStack(Copy_u8ExpressionLength);
    5562:	8f 81       	ldd	r24, Y+7	; 0x07
    5564:	0e 94 54 29 	call	0x52a8	; 0x52a8 <createStack>
    5568:	9a 83       	std	Y+2, r25	; 0x02
    556a:	89 83       	std	Y+1, r24	; 0x01
	if(!stack) // See if stack was created successfully
    556c:	89 81       	ldd	r24, Y+1	; 0x01
    556e:	9a 81       	ldd	r25, Y+2	; 0x02
    5570:	00 97       	sbiw	r24, 0x00	; 0
    5572:	21 f4       	brne	.+8      	; 0x557c <infixToPostfix+0x38>
		return -1 ;
    5574:	8f ef       	ldi	r24, 0xFF	; 255
    5576:	88 87       	std	Y+8, r24	; 0x08

	// pop all the operators from the stack
	while (!isEmpty(stack))
		exp[++k] = pop(stack );

}
    5578:	88 85       	ldd	r24, Y+8	; 0x08
    557a:	b5 c0       	rjmp	.+362    	; 0x56e6 <infixToPostfix+0x1a2>
	// Create a stack of capacity equal to expression size
	struct Stack* stack = createStack(Copy_u8ExpressionLength);
	if(!stack) // See if stack was created successfully
		return -1 ;

	for (i = 0, k = -1; i<=Copy_u8ExpressionLength; ++i)
    557c:	1c 82       	std	Y+4, r1	; 0x04
    557e:	8f ef       	ldi	r24, 0xFF	; 255
    5580:	8b 83       	std	Y+3, r24	; 0x03
    5582:	86 c0       	rjmp	.+268    	; 0x5690 <infixToPostfix+0x14c>
	{
		// If the scanned character is an operand, add it to output.
		if (isOperand(exp[i]))
    5584:	8c 81       	ldd	r24, Y+4	; 0x04
    5586:	99 27       	eor	r25, r25
    5588:	87 fd       	sbrc	r24, 7
    558a:	90 95       	com	r25
    558c:	9c 01       	movw	r18, r24
    558e:	22 0f       	add	r18, r18
    5590:	33 1f       	adc	r19, r19
    5592:	8d 81       	ldd	r24, Y+5	; 0x05
    5594:	9e 81       	ldd	r25, Y+6	; 0x06
    5596:	fc 01       	movw	r30, r24
    5598:	e2 0f       	add	r30, r18
    559a:	f3 1f       	adc	r31, r19
    559c:	80 81       	ld	r24, Z
    559e:	91 81       	ldd	r25, Z+1	; 0x01
    55a0:	0e 94 4d 2a 	call	0x549a	; 0x549a <isOperand>
    55a4:	88 23       	and	r24, r24
    55a6:	c9 f1       	breq	.+114    	; 0x561a <infixToPostfix+0xd6>
		{
			exp[++k] = exp[i];
    55a8:	8b 81       	ldd	r24, Y+3	; 0x03
    55aa:	8f 5f       	subi	r24, 0xFF	; 255
    55ac:	8b 83       	std	Y+3, r24	; 0x03
    55ae:	8b 81       	ldd	r24, Y+3	; 0x03
    55b0:	99 27       	eor	r25, r25
    55b2:	87 fd       	sbrc	r24, 7
    55b4:	90 95       	com	r25
    55b6:	9c 01       	movw	r18, r24
    55b8:	22 0f       	add	r18, r18
    55ba:	33 1f       	adc	r19, r19
    55bc:	8d 81       	ldd	r24, Y+5	; 0x05
    55be:	9e 81       	ldd	r25, Y+6	; 0x06
    55c0:	dc 01       	movw	r26, r24
    55c2:	a2 0f       	add	r26, r18
    55c4:	b3 1f       	adc	r27, r19
    55c6:	8c 81       	ldd	r24, Y+4	; 0x04
    55c8:	99 27       	eor	r25, r25
    55ca:	87 fd       	sbrc	r24, 7
    55cc:	90 95       	com	r25
    55ce:	9c 01       	movw	r18, r24
    55d0:	22 0f       	add	r18, r18
    55d2:	33 1f       	adc	r19, r19
    55d4:	8d 81       	ldd	r24, Y+5	; 0x05
    55d6:	9e 81       	ldd	r25, Y+6	; 0x06
    55d8:	fc 01       	movw	r30, r24
    55da:	e2 0f       	add	r30, r18
    55dc:	f3 1f       	adc	r31, r19
    55de:	80 81       	ld	r24, Z
    55e0:	91 81       	ldd	r25, Z+1	; 0x01
    55e2:	11 96       	adiw	r26, 0x01	; 1
    55e4:	9c 93       	st	X, r25
    55e6:	8e 93       	st	-X, r24
    55e8:	50 c0       	rjmp	.+160    	; 0x568a <infixToPostfix+0x146>
		}
		else // an operator is encountered
		{
			while (!isEmpty(stack) && ( Prec(exp[i]) <= Prec(peek(stack)) ) )
			{
				exp[++k] = pop(stack);
    55ea:	8b 81       	ldd	r24, Y+3	; 0x03
    55ec:	8f 5f       	subi	r24, 0xFF	; 255
    55ee:	8b 83       	std	Y+3, r24	; 0x03
    55f0:	8b 81       	ldd	r24, Y+3	; 0x03
    55f2:	99 27       	eor	r25, r25
    55f4:	87 fd       	sbrc	r24, 7
    55f6:	90 95       	com	r25
    55f8:	9c 01       	movw	r18, r24
    55fa:	22 0f       	add	r18, r18
    55fc:	33 1f       	adc	r19, r19
    55fe:	8d 81       	ldd	r24, Y+5	; 0x05
    5600:	9e 81       	ldd	r25, Y+6	; 0x06
    5602:	8c 01       	movw	r16, r24
    5604:	02 0f       	add	r16, r18
    5606:	13 1f       	adc	r17, r19
    5608:	89 81       	ldd	r24, Y+1	; 0x01
    560a:	9a 81       	ldd	r25, Y+2	; 0x02
    560c:	0e 94 d1 29 	call	0x53a2	; 0x53a2 <pop>
    5610:	dc 01       	movw	r26, r24
    5612:	cb 01       	movw	r24, r22
    5614:	f8 01       	movw	r30, r16
    5616:	91 83       	std	Z+1, r25	; 0x01
    5618:	80 83       	st	Z, r24
		{
			exp[++k] = exp[i];
		}
		else // an operator is encountered
		{
			while (!isEmpty(stack) && ( Prec(exp[i]) <= Prec(peek(stack)) ) )
    561a:	89 81       	ldd	r24, Y+1	; 0x01
    561c:	9a 81       	ldd	r25, Y+2	; 0x02
    561e:	0e 94 97 29 	call	0x532e	; 0x532e <isEmpty>
    5622:	88 23       	and	r24, r24
    5624:	d9 f4       	brne	.+54     	; 0x565c <infixToPostfix+0x118>
    5626:	8c 81       	ldd	r24, Y+4	; 0x04
    5628:	99 27       	eor	r25, r25
    562a:	87 fd       	sbrc	r24, 7
    562c:	90 95       	com	r25
    562e:	9c 01       	movw	r18, r24
    5630:	22 0f       	add	r18, r18
    5632:	33 1f       	adc	r19, r19
    5634:	8d 81       	ldd	r24, Y+5	; 0x05
    5636:	9e 81       	ldd	r25, Y+6	; 0x06
    5638:	fc 01       	movw	r30, r24
    563a:	e2 0f       	add	r30, r18
    563c:	f3 1f       	adc	r31, r19
    563e:	80 81       	ld	r24, Z
    5640:	91 81       	ldd	r25, Z+1	; 0x01
    5642:	0e 94 63 2a 	call	0x54c6	; 0x54c6 <Prec>
    5646:	18 2f       	mov	r17, r24
    5648:	89 81       	ldd	r24, Y+1	; 0x01
    564a:	9a 81       	ldd	r25, Y+2	; 0x02
    564c:	0e 94 ae 29 	call	0x535c	; 0x535c <peek>
    5650:	dc 01       	movw	r26, r24
    5652:	cb 01       	movw	r24, r22
    5654:	0e 94 63 2a 	call	0x54c6	; 0x54c6 <Prec>
    5658:	81 17       	cp	r24, r17
    565a:	3c f6       	brge	.-114    	; 0x55ea <infixToPostfix+0xa6>
			{
				exp[++k] = pop(stack);
			}
			push(stack, exp[i]);
    565c:	8c 81       	ldd	r24, Y+4	; 0x04
    565e:	99 27       	eor	r25, r25
    5660:	87 fd       	sbrc	r24, 7
    5662:	90 95       	com	r25
    5664:	9c 01       	movw	r18, r24
    5666:	22 0f       	add	r18, r18
    5668:	33 1f       	adc	r19, r19
    566a:	8d 81       	ldd	r24, Y+5	; 0x05
    566c:	9e 81       	ldd	r25, Y+6	; 0x06
    566e:	fc 01       	movw	r30, r24
    5670:	e2 0f       	add	r30, r18
    5672:	f3 1f       	adc	r31, r19
    5674:	80 81       	ld	r24, Z
    5676:	91 81       	ldd	r25, Z+1	; 0x01
    5678:	9c 01       	movw	r18, r24
    567a:	40 e0       	ldi	r20, 0x00	; 0
    567c:	50 e0       	ldi	r21, 0x00	; 0
    567e:	89 81       	ldd	r24, Y+1	; 0x01
    5680:	9a 81       	ldd	r25, Y+2	; 0x02
    5682:	ba 01       	movw	r22, r20
    5684:	a9 01       	movw	r20, r18
    5686:	0e 94 17 2a 	call	0x542e	; 0x542e <push>
	// Create a stack of capacity equal to expression size
	struct Stack* stack = createStack(Copy_u8ExpressionLength);
	if(!stack) // See if stack was created successfully
		return -1 ;

	for (i = 0, k = -1; i<=Copy_u8ExpressionLength; ++i)
    568a:	8c 81       	ldd	r24, Y+4	; 0x04
    568c:	8f 5f       	subi	r24, 0xFF	; 255
    568e:	8c 83       	std	Y+4, r24	; 0x04
    5690:	8c 81       	ldd	r24, Y+4	; 0x04
    5692:	28 2f       	mov	r18, r24
    5694:	33 27       	eor	r19, r19
    5696:	27 fd       	sbrc	r18, 7
    5698:	30 95       	com	r19
    569a:	8f 81       	ldd	r24, Y+7	; 0x07
    569c:	88 2f       	mov	r24, r24
    569e:	90 e0       	ldi	r25, 0x00	; 0
    56a0:	82 17       	cp	r24, r18
    56a2:	93 07       	cpc	r25, r19
    56a4:	0c f0       	brlt	.+2      	; 0x56a8 <infixToPostfix+0x164>
    56a6:	6e cf       	rjmp	.-292    	; 0x5584 <infixToPostfix+0x40>
    56a8:	18 c0       	rjmp	.+48     	; 0x56da <infixToPostfix+0x196>

	}

	// pop all the operators from the stack
	while (!isEmpty(stack))
		exp[++k] = pop(stack );
    56aa:	8b 81       	ldd	r24, Y+3	; 0x03
    56ac:	8f 5f       	subi	r24, 0xFF	; 255
    56ae:	8b 83       	std	Y+3, r24	; 0x03
    56b0:	8b 81       	ldd	r24, Y+3	; 0x03
    56b2:	99 27       	eor	r25, r25
    56b4:	87 fd       	sbrc	r24, 7
    56b6:	90 95       	com	r25
    56b8:	9c 01       	movw	r18, r24
    56ba:	22 0f       	add	r18, r18
    56bc:	33 1f       	adc	r19, r19
    56be:	8d 81       	ldd	r24, Y+5	; 0x05
    56c0:	9e 81       	ldd	r25, Y+6	; 0x06
    56c2:	8c 01       	movw	r16, r24
    56c4:	02 0f       	add	r16, r18
    56c6:	13 1f       	adc	r17, r19
    56c8:	89 81       	ldd	r24, Y+1	; 0x01
    56ca:	9a 81       	ldd	r25, Y+2	; 0x02
    56cc:	0e 94 d1 29 	call	0x53a2	; 0x53a2 <pop>
    56d0:	dc 01       	movw	r26, r24
    56d2:	cb 01       	movw	r24, r22
    56d4:	f8 01       	movw	r30, r16
    56d6:	91 83       	std	Z+1, r25	; 0x01
    56d8:	80 83       	st	Z, r24
		}

	}

	// pop all the operators from the stack
	while (!isEmpty(stack))
    56da:	89 81       	ldd	r24, Y+1	; 0x01
    56dc:	9a 81       	ldd	r25, Y+2	; 0x02
    56de:	0e 94 97 29 	call	0x532e	; 0x532e <isEmpty>
    56e2:	88 23       	and	r24, r24
    56e4:	11 f3       	breq	.-60     	; 0x56aa <infixToPostfix+0x166>
		exp[++k] = pop(stack );

}
    56e6:	28 96       	adiw	r28, 0x08	; 8
    56e8:	0f b6       	in	r0, 0x3f	; 63
    56ea:	f8 94       	cli
    56ec:	de bf       	out	0x3e, r29	; 62
    56ee:	0f be       	out	0x3f, r0	; 63
    56f0:	cd bf       	out	0x3d, r28	; 61
    56f2:	cf 91       	pop	r28
    56f4:	df 91       	pop	r29
    56f6:	1f 91       	pop	r17
    56f8:	0f 91       	pop	r16
    56fa:	08 95       	ret

000056fc <evaluatePostfix>:

s32 evaluatePostfix(u16 * exp , u8 Copy_u8ExpressionLength)
{
    56fc:	df 93       	push	r29
    56fe:	cf 93       	push	r28
    5700:	cd b7       	in	r28, 0x3d	; 61
    5702:	de b7       	in	r29, 0x3e	; 62
    5704:	64 97       	sbiw	r28, 0x14	; 20
    5706:	0f b6       	in	r0, 0x3f	; 63
    5708:	f8 94       	cli
    570a:	de bf       	out	0x3e, r29	; 62
    570c:	0f be       	out	0x3f, r0	; 63
    570e:	cd bf       	out	0x3d, r28	; 61
    5710:	9d 87       	std	Y+13, r25	; 0x0d
    5712:	8c 87       	std	Y+12, r24	; 0x0c
    5714:	6e 87       	std	Y+14, r22	; 0x0e
	// Create a stack of capacity equal to expression size
	struct Stack* stack = createStack(Copy_u8ExpressionLength);
    5716:	8e 85       	ldd	r24, Y+14	; 0x0e
    5718:	0e 94 54 29 	call	0x52a8	; 0x52a8 <createStack>
    571c:	9b 87       	std	Y+11, r25	; 0x0b
    571e:	8a 87       	std	Y+10, r24	; 0x0a
	u8 i;

	// See if stack was created successfully
	if (!stack) return -1;
    5720:	8a 85       	ldd	r24, Y+10	; 0x0a
    5722:	9b 85       	ldd	r25, Y+11	; 0x0b
    5724:	00 97       	sbiw	r24, 0x00	; 0
    5726:	49 f4       	brne	.+18     	; 0x573a <evaluatePostfix+0x3e>
    5728:	8f ef       	ldi	r24, 0xFF	; 255
    572a:	9f ef       	ldi	r25, 0xFF	; 255
    572c:	af ef       	ldi	r26, 0xFF	; 255
    572e:	bf ef       	ldi	r27, 0xFF	; 255
    5730:	89 8b       	std	Y+17, r24	; 0x11
    5732:	9a 8b       	std	Y+18, r25	; 0x12
    5734:	ab 8b       	std	Y+19, r26	; 0x13
    5736:	bc 8b       	std	Y+20, r27	; 0x14
    5738:	cd c0       	rjmp	.+410    	; 0x58d4 <evaluatePostfix+0x1d8>

	// Scan all characters one by one
	for (i = 0; i <= Copy_u8ExpressionLength; ++i)
    573a:	19 86       	std	Y+9, r1	; 0x09
    573c:	bc c0       	rjmp	.+376    	; 0x58b6 <evaluatePostfix+0x1ba>
	{
		// If the scanned character is an operand (number here),
		// push it to the stack.
		if (isOperand(exp[i]))
    573e:	89 85       	ldd	r24, Y+9	; 0x09
    5740:	88 2f       	mov	r24, r24
    5742:	90 e0       	ldi	r25, 0x00	; 0
    5744:	9c 01       	movw	r18, r24
    5746:	22 0f       	add	r18, r18
    5748:	33 1f       	adc	r19, r19
    574a:	8c 85       	ldd	r24, Y+12	; 0x0c
    574c:	9d 85       	ldd	r25, Y+13	; 0x0d
    574e:	fc 01       	movw	r30, r24
    5750:	e2 0f       	add	r30, r18
    5752:	f3 1f       	adc	r31, r19
    5754:	80 81       	ld	r24, Z
    5756:	91 81       	ldd	r25, Z+1	; 0x01
    5758:	0e 94 4d 2a 	call	0x549a	; 0x549a <isOperand>
    575c:	88 23       	and	r24, r24
    575e:	b9 f0       	breq	.+46     	; 0x578e <evaluatePostfix+0x92>
		{
			push(stack, exp[i]);
    5760:	89 85       	ldd	r24, Y+9	; 0x09
    5762:	88 2f       	mov	r24, r24
    5764:	90 e0       	ldi	r25, 0x00	; 0
    5766:	9c 01       	movw	r18, r24
    5768:	22 0f       	add	r18, r18
    576a:	33 1f       	adc	r19, r19
    576c:	8c 85       	ldd	r24, Y+12	; 0x0c
    576e:	9d 85       	ldd	r25, Y+13	; 0x0d
    5770:	fc 01       	movw	r30, r24
    5772:	e2 0f       	add	r30, r18
    5774:	f3 1f       	adc	r31, r19
    5776:	80 81       	ld	r24, Z
    5778:	91 81       	ldd	r25, Z+1	; 0x01
    577a:	9c 01       	movw	r18, r24
    577c:	40 e0       	ldi	r20, 0x00	; 0
    577e:	50 e0       	ldi	r21, 0x00	; 0
    5780:	8a 85       	ldd	r24, Y+10	; 0x0a
    5782:	9b 85       	ldd	r25, Y+11	; 0x0b
    5784:	ba 01       	movw	r22, r20
    5786:	a9 01       	movw	r20, r18
    5788:	0e 94 17 2a 	call	0x542e	; 0x542e <push>
    578c:	91 c0       	rjmp	.+290    	; 0x58b0 <evaluatePostfix+0x1b4>
		}
		//  If the scanned character is an operator, pop two
		// elements from stack apply the operator
		else
		{
			s32 val1 = pop(stack);
    578e:	8a 85       	ldd	r24, Y+10	; 0x0a
    5790:	9b 85       	ldd	r25, Y+11	; 0x0b
    5792:	0e 94 d1 29 	call	0x53a2	; 0x53a2 <pop>
    5796:	dc 01       	movw	r26, r24
    5798:	cb 01       	movw	r24, r22
    579a:	8d 83       	std	Y+5, r24	; 0x05
    579c:	9e 83       	std	Y+6, r25	; 0x06
    579e:	af 83       	std	Y+7, r26	; 0x07
    57a0:	b8 87       	std	Y+8, r27	; 0x08
			s32 val2 = pop(stack);
    57a2:	8a 85       	ldd	r24, Y+10	; 0x0a
    57a4:	9b 85       	ldd	r25, Y+11	; 0x0b
    57a6:	0e 94 d1 29 	call	0x53a2	; 0x53a2 <pop>
    57aa:	dc 01       	movw	r26, r24
    57ac:	cb 01       	movw	r24, r22
    57ae:	89 83       	std	Y+1, r24	; 0x01
    57b0:	9a 83       	std	Y+2, r25	; 0x02
    57b2:	ab 83       	std	Y+3, r26	; 0x03
    57b4:	bc 83       	std	Y+4, r27	; 0x04
			switch ((u8)exp[i])
    57b6:	89 85       	ldd	r24, Y+9	; 0x09
    57b8:	88 2f       	mov	r24, r24
    57ba:	90 e0       	ldi	r25, 0x00	; 0
    57bc:	9c 01       	movw	r18, r24
    57be:	22 0f       	add	r18, r18
    57c0:	33 1f       	adc	r19, r19
    57c2:	8c 85       	ldd	r24, Y+12	; 0x0c
    57c4:	9d 85       	ldd	r25, Y+13	; 0x0d
    57c6:	fc 01       	movw	r30, r24
    57c8:	e2 0f       	add	r30, r18
    57ca:	f3 1f       	adc	r31, r19
    57cc:	80 81       	ld	r24, Z
    57ce:	91 81       	ldd	r25, Z+1	; 0x01
    57d0:	a8 2f       	mov	r26, r24
    57d2:	b0 e0       	ldi	r27, 0x00	; 0
    57d4:	b8 8b       	std	Y+16, r27	; 0x10
    57d6:	af 87       	std	Y+15, r26	; 0x0f
    57d8:	2f 85       	ldd	r18, Y+15	; 0x0f
    57da:	38 89       	ldd	r19, Y+16	; 0x10
    57dc:	2b 32       	cpi	r18, 0x2B	; 43
    57de:	31 05       	cpc	r19, r1
    57e0:	b1 f0       	breq	.+44     	; 0x580e <evaluatePostfix+0x112>
    57e2:	8f 85       	ldd	r24, Y+15	; 0x0f
    57e4:	98 89       	ldd	r25, Y+16	; 0x10
    57e6:	8c 32       	cpi	r24, 0x2C	; 44
    57e8:	91 05       	cpc	r25, r1
    57ea:	34 f4       	brge	.+12     	; 0x57f8 <evaluatePostfix+0xfc>
    57ec:	af 85       	ldd	r26, Y+15	; 0x0f
    57ee:	b8 89       	ldd	r27, Y+16	; 0x10
    57f0:	aa 32       	cpi	r26, 0x2A	; 42
    57f2:	b1 05       	cpc	r27, r1
    57f4:	91 f1       	breq	.+100    	; 0x585a <evaluatePostfix+0x15e>
    57f6:	5c c0       	rjmp	.+184    	; 0x58b0 <evaluatePostfix+0x1b4>
    57f8:	2f 85       	ldd	r18, Y+15	; 0x0f
    57fa:	38 89       	ldd	r19, Y+16	; 0x10
    57fc:	2d 32       	cpi	r18, 0x2D	; 45
    57fe:	31 05       	cpc	r19, r1
    5800:	c9 f0       	breq	.+50     	; 0x5834 <evaluatePostfix+0x138>
    5802:	8f 85       	ldd	r24, Y+15	; 0x0f
    5804:	98 89       	ldd	r25, Y+16	; 0x10
    5806:	8f 32       	cpi	r24, 0x2F	; 47
    5808:	91 05       	cpc	r25, r1
    580a:	e1 f1       	breq	.+120    	; 0x5884 <evaluatePostfix+0x188>
    580c:	51 c0       	rjmp	.+162    	; 0x58b0 <evaluatePostfix+0x1b4>
			{
			case '+': push(stack, val2 + val1); break;
    580e:	29 81       	ldd	r18, Y+1	; 0x01
    5810:	3a 81       	ldd	r19, Y+2	; 0x02
    5812:	4b 81       	ldd	r20, Y+3	; 0x03
    5814:	5c 81       	ldd	r21, Y+4	; 0x04
    5816:	8d 81       	ldd	r24, Y+5	; 0x05
    5818:	9e 81       	ldd	r25, Y+6	; 0x06
    581a:	af 81       	ldd	r26, Y+7	; 0x07
    581c:	b8 85       	ldd	r27, Y+8	; 0x08
    581e:	28 0f       	add	r18, r24
    5820:	39 1f       	adc	r19, r25
    5822:	4a 1f       	adc	r20, r26
    5824:	5b 1f       	adc	r21, r27
    5826:	8a 85       	ldd	r24, Y+10	; 0x0a
    5828:	9b 85       	ldd	r25, Y+11	; 0x0b
    582a:	ba 01       	movw	r22, r20
    582c:	a9 01       	movw	r20, r18
    582e:	0e 94 17 2a 	call	0x542e	; 0x542e <push>
    5832:	3e c0       	rjmp	.+124    	; 0x58b0 <evaluatePostfix+0x1b4>
			case '-': push(stack, val2 - val1); break;
    5834:	29 81       	ldd	r18, Y+1	; 0x01
    5836:	3a 81       	ldd	r19, Y+2	; 0x02
    5838:	4b 81       	ldd	r20, Y+3	; 0x03
    583a:	5c 81       	ldd	r21, Y+4	; 0x04
    583c:	8d 81       	ldd	r24, Y+5	; 0x05
    583e:	9e 81       	ldd	r25, Y+6	; 0x06
    5840:	af 81       	ldd	r26, Y+7	; 0x07
    5842:	b8 85       	ldd	r27, Y+8	; 0x08
    5844:	28 1b       	sub	r18, r24
    5846:	39 0b       	sbc	r19, r25
    5848:	4a 0b       	sbc	r20, r26
    584a:	5b 0b       	sbc	r21, r27
    584c:	8a 85       	ldd	r24, Y+10	; 0x0a
    584e:	9b 85       	ldd	r25, Y+11	; 0x0b
    5850:	ba 01       	movw	r22, r20
    5852:	a9 01       	movw	r20, r18
    5854:	0e 94 17 2a 	call	0x542e	; 0x542e <push>
    5858:	2b c0       	rjmp	.+86     	; 0x58b0 <evaluatePostfix+0x1b4>
			case '*': push(stack, val2 * val1); break;
    585a:	89 81       	ldd	r24, Y+1	; 0x01
    585c:	9a 81       	ldd	r25, Y+2	; 0x02
    585e:	ab 81       	ldd	r26, Y+3	; 0x03
    5860:	bc 81       	ldd	r27, Y+4	; 0x04
    5862:	2d 81       	ldd	r18, Y+5	; 0x05
    5864:	3e 81       	ldd	r19, Y+6	; 0x06
    5866:	4f 81       	ldd	r20, Y+7	; 0x07
    5868:	58 85       	ldd	r21, Y+8	; 0x08
    586a:	bc 01       	movw	r22, r24
    586c:	cd 01       	movw	r24, r26
    586e:	0e 94 b5 2d 	call	0x5b6a	; 0x5b6a <__mulsi3>
    5872:	9b 01       	movw	r18, r22
    5874:	ac 01       	movw	r20, r24
    5876:	8a 85       	ldd	r24, Y+10	; 0x0a
    5878:	9b 85       	ldd	r25, Y+11	; 0x0b
    587a:	ba 01       	movw	r22, r20
    587c:	a9 01       	movw	r20, r18
    587e:	0e 94 17 2a 	call	0x542e	; 0x542e <push>
    5882:	16 c0       	rjmp	.+44     	; 0x58b0 <evaluatePostfix+0x1b4>
			case '/': push(stack, val2/val1);   break;
    5884:	89 81       	ldd	r24, Y+1	; 0x01
    5886:	9a 81       	ldd	r25, Y+2	; 0x02
    5888:	ab 81       	ldd	r26, Y+3	; 0x03
    588a:	bc 81       	ldd	r27, Y+4	; 0x04
    588c:	2d 81       	ldd	r18, Y+5	; 0x05
    588e:	3e 81       	ldd	r19, Y+6	; 0x06
    5890:	4f 81       	ldd	r20, Y+7	; 0x07
    5892:	58 85       	ldd	r21, Y+8	; 0x08
    5894:	bc 01       	movw	r22, r24
    5896:	cd 01       	movw	r24, r26
    5898:	0e 94 d4 2d 	call	0x5ba8	; 0x5ba8 <__divmodsi4>
    589c:	da 01       	movw	r26, r20
    589e:	c9 01       	movw	r24, r18
    58a0:	9c 01       	movw	r18, r24
    58a2:	ad 01       	movw	r20, r26
    58a4:	8a 85       	ldd	r24, Y+10	; 0x0a
    58a6:	9b 85       	ldd	r25, Y+11	; 0x0b
    58a8:	ba 01       	movw	r22, r20
    58aa:	a9 01       	movw	r20, r18
    58ac:	0e 94 17 2a 	call	0x542e	; 0x542e <push>

	// See if stack was created successfully
	if (!stack) return -1;

	// Scan all characters one by one
	for (i = 0; i <= Copy_u8ExpressionLength; ++i)
    58b0:	89 85       	ldd	r24, Y+9	; 0x09
    58b2:	8f 5f       	subi	r24, 0xFF	; 255
    58b4:	89 87       	std	Y+9, r24	; 0x09
    58b6:	99 85       	ldd	r25, Y+9	; 0x09
    58b8:	8e 85       	ldd	r24, Y+14	; 0x0e
    58ba:	89 17       	cp	r24, r25
    58bc:	08 f0       	brcs	.+2      	; 0x58c0 <evaluatePostfix+0x1c4>
    58be:	3f cf       	rjmp	.-386    	; 0x573e <evaluatePostfix+0x42>
			case '*': push(stack, val2 * val1); break;
			case '/': push(stack, val2/val1);   break;
			}
		}
	}
	return pop(stack);
    58c0:	8a 85       	ldd	r24, Y+10	; 0x0a
    58c2:	9b 85       	ldd	r25, Y+11	; 0x0b
    58c4:	0e 94 d1 29 	call	0x53a2	; 0x53a2 <pop>
    58c8:	dc 01       	movw	r26, r24
    58ca:	cb 01       	movw	r24, r22
    58cc:	89 8b       	std	Y+17, r24	; 0x11
    58ce:	9a 8b       	std	Y+18, r25	; 0x12
    58d0:	ab 8b       	std	Y+19, r26	; 0x13
    58d2:	bc 8b       	std	Y+20, r27	; 0x14
    58d4:	89 89       	ldd	r24, Y+17	; 0x11
    58d6:	9a 89       	ldd	r25, Y+18	; 0x12
    58d8:	ab 89       	ldd	r26, Y+19	; 0x13
    58da:	bc 89       	ldd	r27, Y+20	; 0x14
}
    58dc:	bc 01       	movw	r22, r24
    58de:	cd 01       	movw	r24, r26
    58e0:	64 96       	adiw	r28, 0x14	; 20
    58e2:	0f b6       	in	r0, 0x3f	; 63
    58e4:	f8 94       	cli
    58e6:	de bf       	out	0x3e, r29	; 62
    58e8:	0f be       	out	0x3f, r0	; 63
    58ea:	cd bf       	out	0x3d, r28	; 61
    58ec:	cf 91       	pop	r28
    58ee:	df 91       	pop	r29
    58f0:	08 95       	ret

000058f2 <evaluateEquation>:
s32 evaluateEquation(u16* exp , u8 Copy_u8ExpressionLength ){
    58f2:	df 93       	push	r29
    58f4:	cf 93       	push	r28
    58f6:	00 d0       	rcall	.+0      	; 0x58f8 <evaluateEquation+0x6>
    58f8:	0f 92       	push	r0
    58fa:	cd b7       	in	r28, 0x3d	; 61
    58fc:	de b7       	in	r29, 0x3e	; 62
    58fe:	9a 83       	std	Y+2, r25	; 0x02
    5900:	89 83       	std	Y+1, r24	; 0x01
    5902:	6b 83       	std	Y+3, r22	; 0x03
	infixToPostfix(exp , Copy_u8ExpressionLength);
    5904:	89 81       	ldd	r24, Y+1	; 0x01
    5906:	9a 81       	ldd	r25, Y+2	; 0x02
    5908:	6b 81       	ldd	r22, Y+3	; 0x03
    590a:	0e 94 a2 2a 	call	0x5544	; 0x5544 <infixToPostfix>
	return evaluatePostfix(exp , Copy_u8ExpressionLength);
    590e:	89 81       	ldd	r24, Y+1	; 0x01
    5910:	9a 81       	ldd	r25, Y+2	; 0x02
    5912:	6b 81       	ldd	r22, Y+3	; 0x03
    5914:	0e 94 7e 2b 	call	0x56fc	; 0x56fc <evaluatePostfix>
    5918:	dc 01       	movw	r26, r24
    591a:	cb 01       	movw	r24, r22
}
    591c:	bc 01       	movw	r22, r24
    591e:	cd 01       	movw	r24, r26
    5920:	0f 90       	pop	r0
    5922:	0f 90       	pop	r0
    5924:	0f 90       	pop	r0
    5926:	cf 91       	pop	r28
    5928:	df 91       	pop	r29
    592a:	08 95       	ret

0000592c <main>:

#define OPERATION			1
#define NUMBER				0

int main (void)
{
    592c:	af 92       	push	r10
    592e:	bf 92       	push	r11
    5930:	cf 92       	push	r12
    5932:	df 92       	push	r13
    5934:	ef 92       	push	r14
    5936:	ff 92       	push	r15
    5938:	0f 93       	push	r16
    593a:	1f 93       	push	r17
    593c:	df 93       	push	r29
    593e:	cf 93       	push	r28
    5940:	cd b7       	in	r28, 0x3d	; 61
    5942:	de b7       	in	r29, 0x3e	; 62
    5944:	c5 59       	subi	r28, 0x95	; 149
    5946:	d0 40       	sbci	r29, 0x00	; 0
    5948:	0f b6       	in	r0, 0x3f	; 63
    594a:	f8 94       	cli
    594c:	de bf       	out	0x3e, r29	; 62
    594e:	0f be       	out	0x3f, r0	; 63
    5950:	cd bf       	out	0x3d, r28	; 61
	u8 Local_u8LCD_CurrentPosition = CLCD_COL1; //start Displaying from the start of the LCD
    5952:	81 e0       	ldi	r24, 0x01	; 1
    5954:	89 87       	std	Y+9, r24	; 0x09
	u8 Local_u8ArrayCurrentIndex = 0; // Start adding characters from the first index in the array
    5956:	18 86       	std	Y+8, r1	; 0x08
	u8 Local_u8ArrayEnteredvalues[100] = {0}; // an array to save the characters
    5958:	84 e6       	ldi	r24, 0x64	; 100
    595a:	fe 01       	movw	r30, r28
    595c:	3a 96       	adiw	r30, 0x0a	; 10
    595e:	df 01       	movw	r26, r30
    5960:	98 2f       	mov	r25, r24
    5962:	1d 92       	st	X+, r1
    5964:	9a 95       	dec	r25
    5966:	e9 f7       	brne	.-6      	; 0x5962 <main+0x36>
	u8 Local_u8KepadPressed = NOT_PRESSED; // variable to take the input of the keypad
    5968:	1f 82       	std	Y+7, r1	; 0x07
	u8 Local_u8LastVal = NUMBER; // variable indicates that the last entered character either an operation or number
    596a:	1e 82       	std	Y+6, r1	; 0x06

	u16 Local_u16ExpressionArray[20] = {0};
    596c:	ce 01       	movw	r24, r28
    596e:	82 59       	subi	r24, 0x92	; 146
    5970:	9f 4f       	sbci	r25, 0xFF	; 255
    5972:	28 e2       	ldi	r18, 0x28	; 40
    5974:	fc 01       	movw	r30, r24
    5976:	df 01       	movw	r26, r30
    5978:	82 2f       	mov	r24, r18
    597a:	1d 92       	st	X+, r1
    597c:	8a 95       	dec	r24
    597e:	e9 f7       	brne	.-6      	; 0x597a <main+0x4e>

	CLCD_voidInit(); // initialize the LCD
    5980:	0e 94 70 1c 	call	0x38e0	; 0x38e0 <CLCD_voidInit>
	KEYPAD_voidInit(); // initialize the Keypad
    5984:	0e 94 49 27 	call	0x4e92	; 0x4e92 <KEYPAD_voidInit>
	CLCD_voidClearScreen(); // Clear the LCD
    5988:	0e 94 c1 26 	call	0x4d82	; 0x4d82 <CLCD_voidClearScreen>
	while(1)
	{
		Local_u8KepadPressed = NOT_PRESSED;
    598c:	1f 82       	std	Y+7, r1	; 0x07

		if(Local_u8LCD_CurrentPosition >= CLCD_COL16)
    598e:	89 85       	ldd	r24, Y+9	; 0x09
    5990:	80 31       	cpi	r24, 0x10	; 16
    5992:	20 f0       	brcs	.+8      	; 0x599c <main+0x70>
		{
			CLCD_voidSendCommand(CLCD_SHIFT_LEFT);
    5994:	87 e0       	ldi	r24, 0x07	; 7
    5996:	0e 94 6a 1e 	call	0x3cd4	; 0x3cd4 <CLCD_voidSendCommand>
    599a:	04 c0       	rjmp	.+8      	; 0x59a4 <main+0x78>

		}
		else
		{
			CLCD_voidGoToX_Y(CLCD_ROW1 , Local_u8LCD_CurrentPosition);
    599c:	81 e0       	ldi	r24, 0x01	; 1
    599e:	69 85       	ldd	r22, Y+9	; 0x09
    59a0:	0e 94 65 26 	call	0x4cca	; 0x4cca <CLCD_voidGoToX_Y>
		}

		do{
			Local_u8KepadPressed = KEYPAD_voidGetPressedButton();
    59a4:	0e 94 a0 27 	call	0x4f40	; 0x4f40 <KEYPAD_voidGetPressedButton>
    59a8:	8f 83       	std	Y+7, r24	; 0x07
		}while(Local_u8KepadPressed == NOT_PRESSED);
    59aa:	8f 81       	ldd	r24, Y+7	; 0x07
    59ac:	88 23       	and	r24, r24
    59ae:	d1 f3       	breq	.-12     	; 0x59a4 <main+0x78>

		if( Local_u8KepadPressed == '=' )
    59b0:	8f 81       	ldd	r24, Y+7	; 0x07
    59b2:	8d 33       	cpi	r24, 0x3D	; 61
    59b4:	09 f0       	breq	.+2      	; 0x59b8 <main+0x8c>
    59b6:	61 c0       	rjmp	.+194    	; 0x5a7a <main+0x14e>
		{
			CLCD_voidSendCharacter(Local_u8KepadPressed);
    59b8:	8f 81       	ldd	r24, Y+7	; 0x07
    59ba:	0e 94 84 1e 	call	0x3d08	; 0x3d08 <CLCD_voidSendCharacter>
			u8 Local_u8ExpressionLength = StringTOValues ( Local_u8ArrayEnteredvalues , Local_u16ExpressionArray );
    59be:	ce 01       	movw	r24, r28
    59c0:	0a 96       	adiw	r24, 0x0a	; 10
    59c2:	9e 01       	movw	r18, r28
    59c4:	22 59       	subi	r18, 0x92	; 146
    59c6:	3f 4f       	sbci	r19, 0xFF	; 255
    59c8:	b9 01       	movw	r22, r18
    59ca:	0e 94 b2 28 	call	0x5164	; 0x5164 <StringTOValues>
    59ce:	8d 83       	std	Y+5, r24	; 0x05

			s32 Local_u32Result = evaluateEquation( Local_u16ExpressionArray , Local_u8ExpressionLength);
    59d0:	ce 01       	movw	r24, r28
    59d2:	82 59       	subi	r24, 0x92	; 146
    59d4:	9f 4f       	sbci	r25, 0xFF	; 255
    59d6:	6d 81       	ldd	r22, Y+5	; 0x05
    59d8:	0e 94 79 2c 	call	0x58f2	; 0x58f2 <evaluateEquation>
    59dc:	dc 01       	movw	r26, r24
    59de:	cb 01       	movw	r24, r22
    59e0:	89 83       	std	Y+1, r24	; 0x01
    59e2:	9a 83       	std	Y+2, r25	; 0x02
    59e4:	ab 83       	std	Y+3, r26	; 0x03
    59e6:	bc 83       	std	Y+4, r27	; 0x04
			if( Local_u32Result < 0 )
    59e8:	89 81       	ldd	r24, Y+1	; 0x01
    59ea:	9a 81       	ldd	r25, Y+2	; 0x02
    59ec:	ab 81       	ldd	r26, Y+3	; 0x03
    59ee:	bc 81       	ldd	r27, Y+4	; 0x04
    59f0:	bb 23       	and	r27, r27
    59f2:	2c f5       	brge	.+74     	; 0x5a3e <main+0x112>
			{
				CLCD_voidSendCharacter('-');
    59f4:	8d e2       	ldi	r24, 0x2D	; 45
    59f6:	0e 94 84 1e 	call	0x3d08	; 0x3d08 <CLCD_voidSendCharacter>
				CLCD_voidSendNumber(Local_u32Result*-1);
    59fa:	89 81       	ldd	r24, Y+1	; 0x01
    59fc:	9a 81       	ldd	r25, Y+2	; 0x02
    59fe:	ab 81       	ldd	r26, Y+3	; 0x03
    5a00:	bc 81       	ldd	r27, Y+4	; 0x04
    5a02:	22 27       	eor	r18, r18
    5a04:	33 27       	eor	r19, r19
    5a06:	a9 01       	movw	r20, r18
    5a08:	28 1b       	sub	r18, r24
    5a0a:	39 0b       	sbc	r19, r25
    5a0c:	4a 0b       	sbc	r20, r26
    5a0e:	5b 0b       	sbc	r21, r27
    5a10:	da 01       	movw	r26, r20
    5a12:	c9 01       	movw	r24, r18
    5a14:	bb 0f       	add	r27, r27
    5a16:	88 0b       	sbc	r24, r24
    5a18:	98 2f       	mov	r25, r24
    5a1a:	dc 01       	movw	r26, r24
    5a1c:	59 01       	movw	r10, r18
    5a1e:	6a 01       	movw	r12, r20
    5a20:	e8 2e       	mov	r14, r24
    5a22:	f8 2e       	mov	r15, r24
    5a24:	08 2f       	mov	r16, r24
    5a26:	18 2f       	mov	r17, r24
    5a28:	2a 2d       	mov	r18, r10
    5a2a:	3b 2d       	mov	r19, r11
    5a2c:	4c 2d       	mov	r20, r12
    5a2e:	5d 2d       	mov	r21, r13
    5a30:	6e 2d       	mov	r22, r14
    5a32:	7f 2d       	mov	r23, r15
    5a34:	80 2f       	mov	r24, r16
    5a36:	91 2f       	mov	r25, r17
    5a38:	0e 94 c8 1e 	call	0x3d90	; 0x3d90 <CLCD_voidSendNumber>
    5a3c:	1a c0       	rjmp	.+52     	; 0x5a72 <main+0x146>
			}
			else
			{
				CLCD_voidSendNumber(Local_u32Result);
    5a3e:	89 81       	ldd	r24, Y+1	; 0x01
    5a40:	9a 81       	ldd	r25, Y+2	; 0x02
    5a42:	ab 81       	ldd	r26, Y+3	; 0x03
    5a44:	bc 81       	ldd	r27, Y+4	; 0x04
    5a46:	bb 0f       	add	r27, r27
    5a48:	88 0b       	sbc	r24, r24
    5a4a:	98 2f       	mov	r25, r24
    5a4c:	dc 01       	movw	r26, r24
    5a4e:	a9 80       	ldd	r10, Y+1	; 0x01
    5a50:	ba 80       	ldd	r11, Y+2	; 0x02
    5a52:	cb 80       	ldd	r12, Y+3	; 0x03
    5a54:	dc 80       	ldd	r13, Y+4	; 0x04
    5a56:	e8 2e       	mov	r14, r24
    5a58:	f8 2e       	mov	r15, r24
    5a5a:	08 2f       	mov	r16, r24
    5a5c:	18 2f       	mov	r17, r24
    5a5e:	2a 2d       	mov	r18, r10
    5a60:	3b 2d       	mov	r19, r11
    5a62:	4c 2d       	mov	r20, r12
    5a64:	5d 2d       	mov	r21, r13
    5a66:	6e 2d       	mov	r22, r14
    5a68:	7f 2d       	mov	r23, r15
    5a6a:	80 2f       	mov	r24, r16
    5a6c:	91 2f       	mov	r25, r17
    5a6e:	0e 94 c8 1e 	call	0x3d90	; 0x3d90 <CLCD_voidSendNumber>
			}
			Local_u8LastVal = NUMBER;
    5a72:	1e 82       	std	Y+6, r1	; 0x06
			Local_u8LCD_CurrentPosition = CLCD_COL1;
    5a74:	81 e0       	ldi	r24, 0x01	; 1
    5a76:	89 87       	std	Y+9, r24	; 0x09
    5a78:	89 cf       	rjmp	.-238    	; 0x598c <main+0x60>
		}
		else if( Local_u8KepadPressed == 'C' )
    5a7a:	8f 81       	ldd	r24, Y+7	; 0x07
    5a7c:	83 34       	cpi	r24, 0x43	; 67
    5a7e:	d9 f4       	brne	.+54     	; 0x5ab6 <main+0x18a>
		{
			CLCD_voidClearScreen();
    5a80:	0e 94 c1 26 	call	0x4d82	; 0x4d82 <CLCD_voidClearScreen>
			CLCD_voidGoToX_Y(CLCD_ROW1 , CLCD_COL1);
    5a84:	81 e0       	ldi	r24, 0x01	; 1
    5a86:	61 e0       	ldi	r22, 0x01	; 1
    5a88:	0e 94 65 26 	call	0x4cca	; 0x4cca <CLCD_voidGoToX_Y>
			Array_voidClear(Local_u8ArrayEnteredvalues , 100 , Uint8);
    5a8c:	ce 01       	movw	r24, r28
    5a8e:	0a 96       	adiw	r24, 0x0a	; 10
    5a90:	64 e6       	ldi	r22, 0x64	; 100
    5a92:	40 e0       	ldi	r20, 0x00	; 0
    5a94:	0e 94 7c 28 	call	0x50f8	; 0x50f8 <Array_voidClear>
			Array_voidClear(Local_u16ExpressionArray , 20 , Uint16);
    5a98:	ce 01       	movw	r24, r28
    5a9a:	82 59       	subi	r24, 0x92	; 146
    5a9c:	9f 4f       	sbci	r25, 0xFF	; 255
    5a9e:	64 e1       	ldi	r22, 0x14	; 20
    5aa0:	41 e0       	ldi	r20, 0x01	; 1
    5aa2:	0e 94 7c 28 	call	0x50f8	; 0x50f8 <Array_voidClear>
			Local_u8ArrayCurrentIndex = 0;
    5aa6:	18 86       	std	Y+8, r1	; 0x08
			Local_u8LCD_CurrentPosition = CLCD_COL1;
    5aa8:	81 e0       	ldi	r24, 0x01	; 1
    5aaa:	89 87       	std	Y+9, r24	; 0x09
			CLCD_voidSendCommand(CLCD_SHIFT_DISABEL);
    5aac:	86 e0       	ldi	r24, 0x06	; 6
    5aae:	0e 94 6a 1e 	call	0x3cd4	; 0x3cd4 <CLCD_voidSendCommand>
			Local_u8LastVal = NUMBER;
    5ab2:	1e 82       	std	Y+6, r1	; 0x06
    5ab4:	6b cf       	rjmp	.-298    	; 0x598c <main+0x60>
		}
		else // user Entered either operation or Number
		{
			// In case the user Entered any operation
			if( (Local_u8KepadPressed == '+' ) || ( Local_u8KepadPressed == '-' ) ||
    5ab6:	8f 81       	ldd	r24, Y+7	; 0x07
    5ab8:	8b 32       	cpi	r24, 0x2B	; 43
    5aba:	49 f0       	breq	.+18     	; 0x5ace <main+0x1a2>
    5abc:	8f 81       	ldd	r24, Y+7	; 0x07
    5abe:	8d 32       	cpi	r24, 0x2D	; 45
    5ac0:	31 f0       	breq	.+12     	; 0x5ace <main+0x1a2>
    5ac2:	8f 81       	ldd	r24, Y+7	; 0x07
    5ac4:	8a 32       	cpi	r24, 0x2A	; 42
    5ac6:	19 f0       	breq	.+6      	; 0x5ace <main+0x1a2>
    5ac8:	8f 81       	ldd	r24, Y+7	; 0x07
    5aca:	8f 32       	cpi	r24, 0x2F	; 47
    5acc:	c9 f5       	brne	.+114    	; 0x5b40 <main+0x214>
				 * 1. should back one position on LCD and decrement the index of the array by one
				 * 2. Display the new operation and save it
				 * 3. Increment the LCD position for the next input and increment the array index for the new value
				 * 4. Save the lastVal as operation*/

				if( Local_u8LastVal == OPERATION )
    5ace:	8e 81       	ldd	r24, Y+6	; 0x06
    5ad0:	81 30       	cpi	r24, 0x01	; 1
    5ad2:	01 f5       	brne	.+64     	; 0x5b14 <main+0x1e8>
				{
					Local_u8LCD_CurrentPosition -= 1 ;
    5ad4:	89 85       	ldd	r24, Y+9	; 0x09
    5ad6:	81 50       	subi	r24, 0x01	; 1
    5ad8:	89 87       	std	Y+9, r24	; 0x09
					Local_u8ArrayCurrentIndex -=1 ;
    5ada:	88 85       	ldd	r24, Y+8	; 0x08
    5adc:	81 50       	subi	r24, 0x01	; 1
    5ade:	88 87       	std	Y+8, r24	; 0x08
					Local_u8ArrayEnteredvalues[Local_u8ArrayCurrentIndex] = Local_u8KepadPressed;
    5ae0:	88 85       	ldd	r24, Y+8	; 0x08
    5ae2:	28 2f       	mov	r18, r24
    5ae4:	30 e0       	ldi	r19, 0x00	; 0
    5ae6:	ce 01       	movw	r24, r28
    5ae8:	0a 96       	adiw	r24, 0x0a	; 10
    5aea:	fc 01       	movw	r30, r24
    5aec:	e2 0f       	add	r30, r18
    5aee:	f3 1f       	adc	r31, r19
    5af0:	8f 81       	ldd	r24, Y+7	; 0x07
    5af2:	80 83       	st	Z, r24
					CLCD_voidGoToX_Y(CLCD_ROW1 , Local_u8LCD_CurrentPosition);
    5af4:	81 e0       	ldi	r24, 0x01	; 1
    5af6:	69 85       	ldd	r22, Y+9	; 0x09
    5af8:	0e 94 65 26 	call	0x4cca	; 0x4cca <CLCD_voidGoToX_Y>
					CLCD_voidSendCharacter(Local_u8KepadPressed);
    5afc:	8f 81       	ldd	r24, Y+7	; 0x07
    5afe:	0e 94 84 1e 	call	0x3d08	; 0x3d08 <CLCD_voidSendCharacter>
					Local_u8LCD_CurrentPosition +=1;
    5b02:	89 85       	ldd	r24, Y+9	; 0x09
    5b04:	8f 5f       	subi	r24, 0xFF	; 255
    5b06:	89 87       	std	Y+9, r24	; 0x09
					Local_u8ArrayCurrentIndex += 1;
    5b08:	88 85       	ldd	r24, Y+8	; 0x08
    5b0a:	8f 5f       	subi	r24, 0xFF	; 255
    5b0c:	88 87       	std	Y+8, r24	; 0x08
					Local_u8LastVal = OPERATION;
    5b0e:	81 e0       	ldi	r24, 0x01	; 1
    5b10:	8e 83       	std	Y+6, r24	; 0x06
    5b12:	3c cf       	rjmp	.-392    	; 0x598c <main+0x60>
					 * 1. Display the Entered value
					 * 2. Save the value into the array
					 * 3. Increment the LCD position and array index for the next value
					 * 4. Save the Last Entered value as operation
					 * */
					CLCD_voidSendCharacter(Local_u8KepadPressed);
    5b14:	8f 81       	ldd	r24, Y+7	; 0x07
    5b16:	0e 94 84 1e 	call	0x3d08	; 0x3d08 <CLCD_voidSendCharacter>
					Local_u8ArrayEnteredvalues[Local_u8ArrayCurrentIndex] = Local_u8KepadPressed;
    5b1a:	88 85       	ldd	r24, Y+8	; 0x08
    5b1c:	28 2f       	mov	r18, r24
    5b1e:	30 e0       	ldi	r19, 0x00	; 0
    5b20:	ce 01       	movw	r24, r28
    5b22:	0a 96       	adiw	r24, 0x0a	; 10
    5b24:	fc 01       	movw	r30, r24
    5b26:	e2 0f       	add	r30, r18
    5b28:	f3 1f       	adc	r31, r19
    5b2a:	8f 81       	ldd	r24, Y+7	; 0x07
    5b2c:	80 83       	st	Z, r24
					Local_u8LCD_CurrentPosition +=1 ;
    5b2e:	89 85       	ldd	r24, Y+9	; 0x09
    5b30:	8f 5f       	subi	r24, 0xFF	; 255
    5b32:	89 87       	std	Y+9, r24	; 0x09
					Local_u8ArrayCurrentIndex += 1;
    5b34:	88 85       	ldd	r24, Y+8	; 0x08
    5b36:	8f 5f       	subi	r24, 0xFF	; 255
    5b38:	88 87       	std	Y+8, r24	; 0x08
					Local_u8LastVal = OPERATION;
    5b3a:	81 e0       	ldi	r24, 0x01	; 1
    5b3c:	8e 83       	std	Y+6, r24	; 0x06
    5b3e:	26 cf       	rjmp	.-436    	; 0x598c <main+0x60>
				 * 1. Display the Entered value
				 * 2. Save the value into the array
				 * 3. Increment the LCD position and array index for the next value
				 * 4. Save the Last Entered value as operation
				 * */
				CLCD_voidSendCharacter(Local_u8KepadPressed);
    5b40:	8f 81       	ldd	r24, Y+7	; 0x07
    5b42:	0e 94 84 1e 	call	0x3d08	; 0x3d08 <CLCD_voidSendCharacter>
				Local_u8ArrayEnteredvalues[Local_u8ArrayCurrentIndex] = Local_u8KepadPressed;
    5b46:	88 85       	ldd	r24, Y+8	; 0x08
    5b48:	28 2f       	mov	r18, r24
    5b4a:	30 e0       	ldi	r19, 0x00	; 0
    5b4c:	ce 01       	movw	r24, r28
    5b4e:	0a 96       	adiw	r24, 0x0a	; 10
    5b50:	fc 01       	movw	r30, r24
    5b52:	e2 0f       	add	r30, r18
    5b54:	f3 1f       	adc	r31, r19
    5b56:	8f 81       	ldd	r24, Y+7	; 0x07
    5b58:	80 83       	st	Z, r24
				Local_u8LCD_CurrentPosition +=1 ;
    5b5a:	89 85       	ldd	r24, Y+9	; 0x09
    5b5c:	8f 5f       	subi	r24, 0xFF	; 255
    5b5e:	89 87       	std	Y+9, r24	; 0x09
				Local_u8ArrayCurrentIndex += 1;
    5b60:	88 85       	ldd	r24, Y+8	; 0x08
    5b62:	8f 5f       	subi	r24, 0xFF	; 255
    5b64:	88 87       	std	Y+8, r24	; 0x08
				Local_u8LastVal = NUMBER;
    5b66:	1e 82       	std	Y+6, r1	; 0x06
    5b68:	11 cf       	rjmp	.-478    	; 0x598c <main+0x60>

00005b6a <__mulsi3>:
    5b6a:	62 9f       	mul	r22, r18
    5b6c:	d0 01       	movw	r26, r0
    5b6e:	73 9f       	mul	r23, r19
    5b70:	f0 01       	movw	r30, r0
    5b72:	82 9f       	mul	r24, r18
    5b74:	e0 0d       	add	r30, r0
    5b76:	f1 1d       	adc	r31, r1
    5b78:	64 9f       	mul	r22, r20
    5b7a:	e0 0d       	add	r30, r0
    5b7c:	f1 1d       	adc	r31, r1
    5b7e:	92 9f       	mul	r25, r18
    5b80:	f0 0d       	add	r31, r0
    5b82:	83 9f       	mul	r24, r19
    5b84:	f0 0d       	add	r31, r0
    5b86:	74 9f       	mul	r23, r20
    5b88:	f0 0d       	add	r31, r0
    5b8a:	65 9f       	mul	r22, r21
    5b8c:	f0 0d       	add	r31, r0
    5b8e:	99 27       	eor	r25, r25
    5b90:	72 9f       	mul	r23, r18
    5b92:	b0 0d       	add	r27, r0
    5b94:	e1 1d       	adc	r30, r1
    5b96:	f9 1f       	adc	r31, r25
    5b98:	63 9f       	mul	r22, r19
    5b9a:	b0 0d       	add	r27, r0
    5b9c:	e1 1d       	adc	r30, r1
    5b9e:	f9 1f       	adc	r31, r25
    5ba0:	bd 01       	movw	r22, r26
    5ba2:	cf 01       	movw	r24, r30
    5ba4:	11 24       	eor	r1, r1
    5ba6:	08 95       	ret

00005ba8 <__divmodsi4>:
    5ba8:	97 fb       	bst	r25, 7
    5baa:	09 2e       	mov	r0, r25
    5bac:	05 26       	eor	r0, r21
    5bae:	0e d0       	rcall	.+28     	; 0x5bcc <__divmodsi4_neg1>
    5bb0:	57 fd       	sbrc	r21, 7
    5bb2:	04 d0       	rcall	.+8      	; 0x5bbc <__divmodsi4_neg2>
    5bb4:	14 d0       	rcall	.+40     	; 0x5bde <__udivmodsi4>
    5bb6:	0a d0       	rcall	.+20     	; 0x5bcc <__divmodsi4_neg1>
    5bb8:	00 1c       	adc	r0, r0
    5bba:	38 f4       	brcc	.+14     	; 0x5bca <__divmodsi4_exit>

00005bbc <__divmodsi4_neg2>:
    5bbc:	50 95       	com	r21
    5bbe:	40 95       	com	r20
    5bc0:	30 95       	com	r19
    5bc2:	21 95       	neg	r18
    5bc4:	3f 4f       	sbci	r19, 0xFF	; 255
    5bc6:	4f 4f       	sbci	r20, 0xFF	; 255
    5bc8:	5f 4f       	sbci	r21, 0xFF	; 255

00005bca <__divmodsi4_exit>:
    5bca:	08 95       	ret

00005bcc <__divmodsi4_neg1>:
    5bcc:	f6 f7       	brtc	.-4      	; 0x5bca <__divmodsi4_exit>
    5bce:	90 95       	com	r25
    5bd0:	80 95       	com	r24
    5bd2:	70 95       	com	r23
    5bd4:	61 95       	neg	r22
    5bd6:	7f 4f       	sbci	r23, 0xFF	; 255
    5bd8:	8f 4f       	sbci	r24, 0xFF	; 255
    5bda:	9f 4f       	sbci	r25, 0xFF	; 255
    5bdc:	08 95       	ret

00005bde <__udivmodsi4>:
    5bde:	a1 e2       	ldi	r26, 0x21	; 33
    5be0:	1a 2e       	mov	r1, r26
    5be2:	aa 1b       	sub	r26, r26
    5be4:	bb 1b       	sub	r27, r27
    5be6:	fd 01       	movw	r30, r26
    5be8:	0d c0       	rjmp	.+26     	; 0x5c04 <__udivmodsi4_ep>

00005bea <__udivmodsi4_loop>:
    5bea:	aa 1f       	adc	r26, r26
    5bec:	bb 1f       	adc	r27, r27
    5bee:	ee 1f       	adc	r30, r30
    5bf0:	ff 1f       	adc	r31, r31
    5bf2:	a2 17       	cp	r26, r18
    5bf4:	b3 07       	cpc	r27, r19
    5bf6:	e4 07       	cpc	r30, r20
    5bf8:	f5 07       	cpc	r31, r21
    5bfa:	20 f0       	brcs	.+8      	; 0x5c04 <__udivmodsi4_ep>
    5bfc:	a2 1b       	sub	r26, r18
    5bfe:	b3 0b       	sbc	r27, r19
    5c00:	e4 0b       	sbc	r30, r20
    5c02:	f5 0b       	sbc	r31, r21

00005c04 <__udivmodsi4_ep>:
    5c04:	66 1f       	adc	r22, r22
    5c06:	77 1f       	adc	r23, r23
    5c08:	88 1f       	adc	r24, r24
    5c0a:	99 1f       	adc	r25, r25
    5c0c:	1a 94       	dec	r1
    5c0e:	69 f7       	brne	.-38     	; 0x5bea <__udivmodsi4_loop>
    5c10:	60 95       	com	r22
    5c12:	70 95       	com	r23
    5c14:	80 95       	com	r24
    5c16:	90 95       	com	r25
    5c18:	9b 01       	movw	r18, r22
    5c1a:	ac 01       	movw	r20, r24
    5c1c:	bd 01       	movw	r22, r26
    5c1e:	cf 01       	movw	r24, r30
    5c20:	08 95       	ret

00005c22 <__prologue_saves__>:
    5c22:	2f 92       	push	r2
    5c24:	3f 92       	push	r3
    5c26:	4f 92       	push	r4
    5c28:	5f 92       	push	r5
    5c2a:	6f 92       	push	r6
    5c2c:	7f 92       	push	r7
    5c2e:	8f 92       	push	r8
    5c30:	9f 92       	push	r9
    5c32:	af 92       	push	r10
    5c34:	bf 92       	push	r11
    5c36:	cf 92       	push	r12
    5c38:	df 92       	push	r13
    5c3a:	ef 92       	push	r14
    5c3c:	ff 92       	push	r15
    5c3e:	0f 93       	push	r16
    5c40:	1f 93       	push	r17
    5c42:	cf 93       	push	r28
    5c44:	df 93       	push	r29
    5c46:	cd b7       	in	r28, 0x3d	; 61
    5c48:	de b7       	in	r29, 0x3e	; 62
    5c4a:	ca 1b       	sub	r28, r26
    5c4c:	db 0b       	sbc	r29, r27
    5c4e:	0f b6       	in	r0, 0x3f	; 63
    5c50:	f8 94       	cli
    5c52:	de bf       	out	0x3e, r29	; 62
    5c54:	0f be       	out	0x3f, r0	; 63
    5c56:	cd bf       	out	0x3d, r28	; 61
    5c58:	09 94       	ijmp

00005c5a <__epilogue_restores__>:
    5c5a:	2a 88       	ldd	r2, Y+18	; 0x12
    5c5c:	39 88       	ldd	r3, Y+17	; 0x11
    5c5e:	48 88       	ldd	r4, Y+16	; 0x10
    5c60:	5f 84       	ldd	r5, Y+15	; 0x0f
    5c62:	6e 84       	ldd	r6, Y+14	; 0x0e
    5c64:	7d 84       	ldd	r7, Y+13	; 0x0d
    5c66:	8c 84       	ldd	r8, Y+12	; 0x0c
    5c68:	9b 84       	ldd	r9, Y+11	; 0x0b
    5c6a:	aa 84       	ldd	r10, Y+10	; 0x0a
    5c6c:	b9 84       	ldd	r11, Y+9	; 0x09
    5c6e:	c8 84       	ldd	r12, Y+8	; 0x08
    5c70:	df 80       	ldd	r13, Y+7	; 0x07
    5c72:	ee 80       	ldd	r14, Y+6	; 0x06
    5c74:	fd 80       	ldd	r15, Y+5	; 0x05
    5c76:	0c 81       	ldd	r16, Y+4	; 0x04
    5c78:	1b 81       	ldd	r17, Y+3	; 0x03
    5c7a:	aa 81       	ldd	r26, Y+2	; 0x02
    5c7c:	b9 81       	ldd	r27, Y+1	; 0x01
    5c7e:	ce 0f       	add	r28, r30
    5c80:	d1 1d       	adc	r29, r1
    5c82:	0f b6       	in	r0, 0x3f	; 63
    5c84:	f8 94       	cli
    5c86:	de bf       	out	0x3e, r29	; 62
    5c88:	0f be       	out	0x3f, r0	; 63
    5c8a:	cd bf       	out	0x3d, r28	; 61
    5c8c:	ed 01       	movw	r28, r26
    5c8e:	08 95       	ret

00005c90 <malloc>:
    5c90:	cf 93       	push	r28
    5c92:	df 93       	push	r29
    5c94:	bc 01       	movw	r22, r24
    5c96:	82 30       	cpi	r24, 0x02	; 2
    5c98:	91 05       	cpc	r25, r1
    5c9a:	10 f4       	brcc	.+4      	; 0x5ca0 <malloc+0x10>
    5c9c:	62 e0       	ldi	r22, 0x02	; 2
    5c9e:	70 e0       	ldi	r23, 0x00	; 0
    5ca0:	a0 91 80 01 	lds	r26, 0x0180
    5ca4:	b0 91 81 01 	lds	r27, 0x0181
    5ca8:	ed 01       	movw	r28, r26
    5caa:	e0 e0       	ldi	r30, 0x00	; 0
    5cac:	f0 e0       	ldi	r31, 0x00	; 0
    5cae:	40 e0       	ldi	r20, 0x00	; 0
    5cb0:	50 e0       	ldi	r21, 0x00	; 0
    5cb2:	21 c0       	rjmp	.+66     	; 0x5cf6 <malloc+0x66>
    5cb4:	88 81       	ld	r24, Y
    5cb6:	99 81       	ldd	r25, Y+1	; 0x01
    5cb8:	86 17       	cp	r24, r22
    5cba:	97 07       	cpc	r25, r23
    5cbc:	69 f4       	brne	.+26     	; 0x5cd8 <malloc+0x48>
    5cbe:	8a 81       	ldd	r24, Y+2	; 0x02
    5cc0:	9b 81       	ldd	r25, Y+3	; 0x03
    5cc2:	30 97       	sbiw	r30, 0x00	; 0
    5cc4:	19 f0       	breq	.+6      	; 0x5ccc <malloc+0x3c>
    5cc6:	93 83       	std	Z+3, r25	; 0x03
    5cc8:	82 83       	std	Z+2, r24	; 0x02
    5cca:	04 c0       	rjmp	.+8      	; 0x5cd4 <malloc+0x44>
    5ccc:	90 93 81 01 	sts	0x0181, r25
    5cd0:	80 93 80 01 	sts	0x0180, r24
    5cd4:	fe 01       	movw	r30, r28
    5cd6:	34 c0       	rjmp	.+104    	; 0x5d40 <malloc+0xb0>
    5cd8:	68 17       	cp	r22, r24
    5cda:	79 07       	cpc	r23, r25
    5cdc:	38 f4       	brcc	.+14     	; 0x5cec <malloc+0x5c>
    5cde:	41 15       	cp	r20, r1
    5ce0:	51 05       	cpc	r21, r1
    5ce2:	19 f0       	breq	.+6      	; 0x5cea <malloc+0x5a>
    5ce4:	84 17       	cp	r24, r20
    5ce6:	95 07       	cpc	r25, r21
    5ce8:	08 f4       	brcc	.+2      	; 0x5cec <malloc+0x5c>
    5cea:	ac 01       	movw	r20, r24
    5cec:	fe 01       	movw	r30, r28
    5cee:	8a 81       	ldd	r24, Y+2	; 0x02
    5cf0:	9b 81       	ldd	r25, Y+3	; 0x03
    5cf2:	9c 01       	movw	r18, r24
    5cf4:	e9 01       	movw	r28, r18
    5cf6:	20 97       	sbiw	r28, 0x00	; 0
    5cf8:	e9 f6       	brne	.-70     	; 0x5cb4 <malloc+0x24>
    5cfa:	41 15       	cp	r20, r1
    5cfc:	51 05       	cpc	r21, r1
    5cfe:	a9 f1       	breq	.+106    	; 0x5d6a <malloc+0xda>
    5d00:	ca 01       	movw	r24, r20
    5d02:	86 1b       	sub	r24, r22
    5d04:	97 0b       	sbc	r25, r23
    5d06:	04 97       	sbiw	r24, 0x04	; 4
    5d08:	08 f4       	brcc	.+2      	; 0x5d0c <malloc+0x7c>
    5d0a:	ba 01       	movw	r22, r20
    5d0c:	e0 e0       	ldi	r30, 0x00	; 0
    5d0e:	f0 e0       	ldi	r31, 0x00	; 0
    5d10:	2a c0       	rjmp	.+84     	; 0x5d66 <malloc+0xd6>
    5d12:	8d 91       	ld	r24, X+
    5d14:	9c 91       	ld	r25, X
    5d16:	11 97       	sbiw	r26, 0x01	; 1
    5d18:	84 17       	cp	r24, r20
    5d1a:	95 07       	cpc	r25, r21
    5d1c:	f9 f4       	brne	.+62     	; 0x5d5c <malloc+0xcc>
    5d1e:	64 17       	cp	r22, r20
    5d20:	75 07       	cpc	r23, r21
    5d22:	81 f4       	brne	.+32     	; 0x5d44 <malloc+0xb4>
    5d24:	12 96       	adiw	r26, 0x02	; 2
    5d26:	8d 91       	ld	r24, X+
    5d28:	9c 91       	ld	r25, X
    5d2a:	13 97       	sbiw	r26, 0x03	; 3
    5d2c:	30 97       	sbiw	r30, 0x00	; 0
    5d2e:	19 f0       	breq	.+6      	; 0x5d36 <malloc+0xa6>
    5d30:	93 83       	std	Z+3, r25	; 0x03
    5d32:	82 83       	std	Z+2, r24	; 0x02
    5d34:	04 c0       	rjmp	.+8      	; 0x5d3e <malloc+0xae>
    5d36:	90 93 81 01 	sts	0x0181, r25
    5d3a:	80 93 80 01 	sts	0x0180, r24
    5d3e:	fd 01       	movw	r30, r26
    5d40:	32 96       	adiw	r30, 0x02	; 2
    5d42:	4f c0       	rjmp	.+158    	; 0x5de2 <malloc+0x152>
    5d44:	ca 01       	movw	r24, r20
    5d46:	86 1b       	sub	r24, r22
    5d48:	97 0b       	sbc	r25, r23
    5d4a:	fd 01       	movw	r30, r26
    5d4c:	e8 0f       	add	r30, r24
    5d4e:	f9 1f       	adc	r31, r25
    5d50:	61 93       	st	Z+, r22
    5d52:	71 93       	st	Z+, r23
    5d54:	02 97       	sbiw	r24, 0x02	; 2
    5d56:	8d 93       	st	X+, r24
    5d58:	9c 93       	st	X, r25
    5d5a:	43 c0       	rjmp	.+134    	; 0x5de2 <malloc+0x152>
    5d5c:	fd 01       	movw	r30, r26
    5d5e:	82 81       	ldd	r24, Z+2	; 0x02
    5d60:	93 81       	ldd	r25, Z+3	; 0x03
    5d62:	9c 01       	movw	r18, r24
    5d64:	d9 01       	movw	r26, r18
    5d66:	10 97       	sbiw	r26, 0x00	; 0
    5d68:	a1 f6       	brne	.-88     	; 0x5d12 <malloc+0x82>
    5d6a:	80 91 7e 01 	lds	r24, 0x017E
    5d6e:	90 91 7f 01 	lds	r25, 0x017F
    5d72:	89 2b       	or	r24, r25
    5d74:	41 f4       	brne	.+16     	; 0x5d86 <malloc+0xf6>
    5d76:	80 91 6a 01 	lds	r24, 0x016A
    5d7a:	90 91 6b 01 	lds	r25, 0x016B
    5d7e:	90 93 7f 01 	sts	0x017F, r25
    5d82:	80 93 7e 01 	sts	0x017E, r24
    5d86:	40 91 6c 01 	lds	r20, 0x016C
    5d8a:	50 91 6d 01 	lds	r21, 0x016D
    5d8e:	41 15       	cp	r20, r1
    5d90:	51 05       	cpc	r21, r1
    5d92:	41 f4       	brne	.+16     	; 0x5da4 <malloc+0x114>
    5d94:	4d b7       	in	r20, 0x3d	; 61
    5d96:	5e b7       	in	r21, 0x3e	; 62
    5d98:	80 91 68 01 	lds	r24, 0x0168
    5d9c:	90 91 69 01 	lds	r25, 0x0169
    5da0:	48 1b       	sub	r20, r24
    5da2:	59 0b       	sbc	r21, r25
    5da4:	20 91 7e 01 	lds	r18, 0x017E
    5da8:	30 91 7f 01 	lds	r19, 0x017F
    5dac:	24 17       	cp	r18, r20
    5dae:	35 07       	cpc	r19, r21
    5db0:	b0 f4       	brcc	.+44     	; 0x5dde <malloc+0x14e>
    5db2:	ca 01       	movw	r24, r20
    5db4:	82 1b       	sub	r24, r18
    5db6:	93 0b       	sbc	r25, r19
    5db8:	86 17       	cp	r24, r22
    5dba:	97 07       	cpc	r25, r23
    5dbc:	80 f0       	brcs	.+32     	; 0x5dde <malloc+0x14e>
    5dbe:	ab 01       	movw	r20, r22
    5dc0:	4e 5f       	subi	r20, 0xFE	; 254
    5dc2:	5f 4f       	sbci	r21, 0xFF	; 255
    5dc4:	84 17       	cp	r24, r20
    5dc6:	95 07       	cpc	r25, r21
    5dc8:	50 f0       	brcs	.+20     	; 0x5dde <malloc+0x14e>
    5dca:	42 0f       	add	r20, r18
    5dcc:	53 1f       	adc	r21, r19
    5dce:	50 93 7f 01 	sts	0x017F, r21
    5dd2:	40 93 7e 01 	sts	0x017E, r20
    5dd6:	f9 01       	movw	r30, r18
    5dd8:	61 93       	st	Z+, r22
    5dda:	71 93       	st	Z+, r23
    5ddc:	02 c0       	rjmp	.+4      	; 0x5de2 <malloc+0x152>
    5dde:	e0 e0       	ldi	r30, 0x00	; 0
    5de0:	f0 e0       	ldi	r31, 0x00	; 0
    5de2:	cf 01       	movw	r24, r30
    5de4:	df 91       	pop	r29
    5de6:	cf 91       	pop	r28
    5de8:	08 95       	ret

00005dea <free>:
    5dea:	cf 93       	push	r28
    5dec:	df 93       	push	r29
    5dee:	00 97       	sbiw	r24, 0x00	; 0
    5df0:	09 f4       	brne	.+2      	; 0x5df4 <free+0xa>
    5df2:	50 c0       	rjmp	.+160    	; 0x5e94 <free+0xaa>
    5df4:	ec 01       	movw	r28, r24
    5df6:	22 97       	sbiw	r28, 0x02	; 2
    5df8:	1b 82       	std	Y+3, r1	; 0x03
    5dfa:	1a 82       	std	Y+2, r1	; 0x02
    5dfc:	a0 91 80 01 	lds	r26, 0x0180
    5e00:	b0 91 81 01 	lds	r27, 0x0181
    5e04:	10 97       	sbiw	r26, 0x00	; 0
    5e06:	09 f1       	breq	.+66     	; 0x5e4a <free+0x60>
    5e08:	40 e0       	ldi	r20, 0x00	; 0
    5e0a:	50 e0       	ldi	r21, 0x00	; 0
    5e0c:	ac 17       	cp	r26, r28
    5e0e:	bd 07       	cpc	r27, r29
    5e10:	08 f1       	brcs	.+66     	; 0x5e54 <free+0x6a>
    5e12:	bb 83       	std	Y+3, r27	; 0x03
    5e14:	aa 83       	std	Y+2, r26	; 0x02
    5e16:	fe 01       	movw	r30, r28
    5e18:	21 91       	ld	r18, Z+
    5e1a:	31 91       	ld	r19, Z+
    5e1c:	e2 0f       	add	r30, r18
    5e1e:	f3 1f       	adc	r31, r19
    5e20:	ae 17       	cp	r26, r30
    5e22:	bf 07       	cpc	r27, r31
    5e24:	79 f4       	brne	.+30     	; 0x5e44 <free+0x5a>
    5e26:	8d 91       	ld	r24, X+
    5e28:	9c 91       	ld	r25, X
    5e2a:	11 97       	sbiw	r26, 0x01	; 1
    5e2c:	28 0f       	add	r18, r24
    5e2e:	39 1f       	adc	r19, r25
    5e30:	2e 5f       	subi	r18, 0xFE	; 254
    5e32:	3f 4f       	sbci	r19, 0xFF	; 255
    5e34:	39 83       	std	Y+1, r19	; 0x01
    5e36:	28 83       	st	Y, r18
    5e38:	12 96       	adiw	r26, 0x02	; 2
    5e3a:	8d 91       	ld	r24, X+
    5e3c:	9c 91       	ld	r25, X
    5e3e:	13 97       	sbiw	r26, 0x03	; 3
    5e40:	9b 83       	std	Y+3, r25	; 0x03
    5e42:	8a 83       	std	Y+2, r24	; 0x02
    5e44:	41 15       	cp	r20, r1
    5e46:	51 05       	cpc	r21, r1
    5e48:	71 f4       	brne	.+28     	; 0x5e66 <free+0x7c>
    5e4a:	d0 93 81 01 	sts	0x0181, r29
    5e4e:	c0 93 80 01 	sts	0x0180, r28
    5e52:	20 c0       	rjmp	.+64     	; 0x5e94 <free+0xaa>
    5e54:	12 96       	adiw	r26, 0x02	; 2
    5e56:	8d 91       	ld	r24, X+
    5e58:	9c 91       	ld	r25, X
    5e5a:	13 97       	sbiw	r26, 0x03	; 3
    5e5c:	ad 01       	movw	r20, r26
    5e5e:	00 97       	sbiw	r24, 0x00	; 0
    5e60:	11 f0       	breq	.+4      	; 0x5e66 <free+0x7c>
    5e62:	dc 01       	movw	r26, r24
    5e64:	d3 cf       	rjmp	.-90     	; 0x5e0c <free+0x22>
    5e66:	fa 01       	movw	r30, r20
    5e68:	d3 83       	std	Z+3, r29	; 0x03
    5e6a:	c2 83       	std	Z+2, r28	; 0x02
    5e6c:	21 91       	ld	r18, Z+
    5e6e:	31 91       	ld	r19, Z+
    5e70:	e2 0f       	add	r30, r18
    5e72:	f3 1f       	adc	r31, r19
    5e74:	ce 17       	cp	r28, r30
    5e76:	df 07       	cpc	r29, r31
    5e78:	69 f4       	brne	.+26     	; 0x5e94 <free+0xaa>
    5e7a:	88 81       	ld	r24, Y
    5e7c:	99 81       	ldd	r25, Y+1	; 0x01
    5e7e:	28 0f       	add	r18, r24
    5e80:	39 1f       	adc	r19, r25
    5e82:	2e 5f       	subi	r18, 0xFE	; 254
    5e84:	3f 4f       	sbci	r19, 0xFF	; 255
    5e86:	fa 01       	movw	r30, r20
    5e88:	31 83       	std	Z+1, r19	; 0x01
    5e8a:	20 83       	st	Z, r18
    5e8c:	8a 81       	ldd	r24, Y+2	; 0x02
    5e8e:	9b 81       	ldd	r25, Y+3	; 0x03
    5e90:	93 83       	std	Z+3, r25	; 0x03
    5e92:	82 83       	std	Z+2, r24	; 0x02
    5e94:	df 91       	pop	r29
    5e96:	cf 91       	pop	r28
    5e98:	08 95       	ret

00005e9a <_exit>:
    5e9a:	f8 94       	cli

00005e9c <__stop_program>:
    5e9c:	ff cf       	rjmp	.-2      	; 0x5e9c <__stop_program>
